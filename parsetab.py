
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADDRESS AND ASSERT ASSIGN_DIVIDE ASSIGN_MINUS ASSIGN_MOD ASSIGN_PLUS ASSIGN_TIMES BREAK CHAR COMMA DIFF DIVIDE ELSE EQ EQUALS FLOAT FLOAT_CONST FOR HE HT ID IF INT INT_CONST LBRACE LBRACKET LE LPAREN LT MINUS MINUSMINUS MOD NOT OR PLUS PLUSPLUS PRINT RBRACE RBRACKET READ RETURN RPAREN SEMI STRING TIMES VOID WHILE program  : global_declaration_list\n         global_declaration_list : global_declaration\n                                    | global_declaration_list global_declaration\n         global_declaration  : function_definition\n                                | declaration function_definition : declarator compound_statement\n                                | declarator declaration_list compound_statement\n                                | type_specifier declarator compound_statement\n                                | type_specifier declarator declaration_list compound_statement\n         declaration_list    : declaration\n                                | declaration_list declaration\n         statement_list  : statement\n                            | statement_list statement\n         type_specifier  : VOID\n                            | CHAR\n                            | INT\n                            | FLOAT\n         identifier : ID  frase : STRING  int_const : INT_CONST  float_const : FLOAT_CONST  declarator  : identifier\n                        | LPAREN declarator RPAREN\n                        | declarator RBRACKET LBRACKET\n                        | declarator RBRACKET constant_expression LBRACKET\n                        | declarator LPAREN parameter_list RPAREN\n                        | declarator LPAREN RPAREN\n                        | declarator LPAREN identifier RPAREN\n         constant_expression : binary_expression\n         binary_expression   : cast_expression\n                                | binary_expression TIMES binary_expression\n                                | binary_expression DIVIDE binary_expression\n                                | binary_expression MOD binary_expression\n                                | binary_expression MINUS binary_expression\n                                | binary_expression PLUS binary_expression\n                                | binary_expression LT binary_expression\n                                | binary_expression LE binary_expression\n                                | binary_expression HT binary_expression\n                                | binary_expression HE binary_expression\n                                | binary_expression EQUALS binary_expression\n                                | binary_expression DIFF binary_expression\n                                | binary_expression AND binary_expression\n                                | binary_expression OR binary_expression\n         cast_expression : unary_expression\n                            | LPAREN type_specifier RPAREN cast_expression\n         unary_expression    : postfix_expression\n                                | PLUSPLUS unary_expression\n                                | MINUSMINUS unary_expression\n                                | unary_operator cast_expression\n         postfix_expression  : primary_expression\n                                | postfix_expression LBRACKET expression RBRACKET\n                                | postfix_expression LPAREN RPAREN\n                                | postfix_expression LPAREN assignment_expression_list RPAREN\n                                | postfix_expression PLUSPLUS\n                                | postfix_expression MINUSMINUS\n         primary_expression  : identifier\n                                | int_const\n                                | float_const\n                                | frase\n                                | LPAREN expression RPAREN\n         compound_statement  : LBRACE RBRACE\n                                | LBRACE declaration_list RBRACE\n                                | LBRACE statement_list RBRACE\n                                | LBRACE declaration_list statement_list RBRACE\n         assignment_expression_list  : assignment_expression\n                                        | assignment_expression_list assignment_expression\n         assignment_expression   : binary_expression\n                                    | unary_expression assignment_operator assignment_expression\n         expression  : assignment_expression\n                        | expression COMMA assignment_expression\n         assignment_operator : EQ\n                                | ASSIGN_TIMES\n                                | ASSIGN_DIVIDE\n                                | ASSIGN_MOD\n                                | ASSIGN_PLUS\n                                | ASSIGN_MINUS\n         unary_operator  : ADDRESS\n                            | TIMES\n                            | PLUS\n                            | MINUS\n                            | NOT\n         parameter_list  : parameter_declaration\n                            | parameter_list COMMA parameter_declaration\n         parameter_declaration   : type_specifier declarator\n         declaration : type_specifier SEMI\n                        | type_specifier init_declarator SEMI\n         init_declarator : declarator\n                            | declarator EQ initializer\n         initializer : assignment_expression\n                        | LBRACE initializer_list RBRACE\n                        | LBRACE initializer_list COMMA RBRACE\n         initializer_list    : initializer\n                                | initializer_list COMMA initializer\n        statement    : expression_statement\n                        | iteration_statement\n                        | compound_statement\n                        | jump_statement\n                        | assert_statement\n                        | print_statement\n                        | selection_statement\n                        | read_statement expression_statement    : SEMI\n                                    | expression SEMI selection_statement : IF LPAREN expression RPAREN statement\n                            | IF LPAREN expression RPAREN statement ELSE statement\n         iteration_statement : WHILE LPAREN expression RPAREN statement\n                                | FOR LPAREN SEMI SEMI RPAREN statement\n                                | FOR LPAREN expression SEMI SEMI RPAREN statement\n                                | FOR LPAREN SEMI expression SEMI RPAREN statement\n                                | FOR LPAREN SEMI SEMI expression RPAREN statement\n                                | FOR LPAREN expression SEMI expression SEMI RPAREN statement\n                                | FOR LPAREN expression SEMI SEMI expression RPAREN statement\n                                | FOR LPAREN SEMI expression SEMI expression RPAREN statement\n                                | FOR LPAREN expression SEMI expression SEMI expression RPAREN statement\n         jump_statement  : BREAK\n                            | RETURN\n                            | RETURN expression\n         assert_statement : ASSERT expression SEMI\n         print_statement : PRINT LPAREN expression RPAREN SEMI\n         read_statement : READ LPAREN declarator_list RPAREN SEMI declarator_list : declarator\n                            | declarator_list declarator\n        '
    
_lr_action_items = {'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,20,21,22,23,24,26,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,77,78,79,80,81,82,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,105,106,107,108,109,110,111,112,114,115,116,117,118,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,136,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,160,161,163,165,168,169,170,173,174,175,176,177,178,180,182,184,186,187,188,190,192,193,194,195,198,199,201,202,204,205,206,207,208,210,211,212,213,214,215,216,217,218,],[9,9,-2,-4,-5,19,9,-22,9,-14,-15,-16,-17,-18,-3,-6,37,37,-10,9,19,-85,19,-7,-11,-24,-30,-78,-80,-79,-44,37,105,109,109,37,-50,-77,-81,-56,-57,-58,-59,-20,-21,-19,-27,9,-61,37,37,-12,-102,-94,-95,-96,-97,-98,-99,-100,-101,122,123,-115,37,37,126,127,128,-69,-67,-44,19,-8,37,-86,-23,-25,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,-54,-55,-47,37,-48,-49,-26,-28,19,-62,37,-63,-13,-103,37,37,37,-117,37,37,9,37,-71,-72,-73,-74,-75,-76,-9,37,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,37,-60,-52,37,-65,-64,-70,37,-118,9,19,-68,-45,-51,-53,-66,37,37,37,37,19,37,-106,37,37,37,-119,-104,-120,-107,37,37,37,37,37,-110,37,-109,37,37,-108,-105,-113,37,-111,-112,-114,]),'VOID':([0,2,3,4,5,6,8,14,15,16,17,19,20,21,23,24,27,28,29,37,53,57,58,83,84,86,87,88,112,113,114,116,118,136,160,],[10,10,-2,-4,-5,10,-22,-18,-3,-6,10,10,10,-10,10,-85,-7,-11,-24,10,-27,-61,10,-8,10,-86,-23,-25,-26,10,-28,-62,-63,-9,-64,]),'CHAR':([0,2,3,4,5,6,8,14,15,16,17,19,20,21,23,24,27,28,29,37,53,57,58,83,84,86,87,88,112,113,114,116,118,136,160,],[11,11,-2,-4,-5,11,-22,-18,-3,-6,11,11,11,-10,11,-85,-7,-11,-24,11,-27,-61,11,-8,11,-86,-23,-25,-26,11,-28,-62,-63,-9,-64,]),'INT':([0,2,3,4,5,6,8,14,15,16,17,19,20,21,23,24,27,28,29,37,53,57,58,83,84,86,87,88,112,113,114,116,118,136,160,],[12,12,-2,-4,-5,12,-22,-18,-3,-6,12,12,12,-10,12,-85,-7,-11,-24,12,-27,-61,12,-8,12,-86,-23,-25,-26,12,-28,-62,-63,-9,-64,]),'FLOAT':([0,2,3,4,5,6,8,14,15,16,17,19,20,21,23,24,27,28,29,37,53,57,58,83,84,86,87,88,112,113,114,116,118,136,160,],[13,13,-2,-4,-5,13,-22,-18,-3,-6,13,13,13,-10,13,-85,-7,-11,-24,13,-27,-61,13,-8,13,-86,-23,-25,-26,13,-28,-62,-63,-9,-64,]),'ID':([0,2,3,4,5,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,24,27,28,29,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,73,74,75,79,80,81,83,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,105,106,107,108,109,110,111,112,114,116,117,118,119,120,121,122,123,124,126,127,128,129,130,131,132,133,134,135,136,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,160,161,163,165,168,169,170,173,174,175,176,177,178,180,182,184,186,187,188,190,192,193,194,195,198,199,201,202,204,205,206,207,208,210,211,212,213,214,215,216,217,218,],[14,14,-2,-4,-5,14,-22,14,-14,-15,-16,-17,-18,-3,-6,14,14,14,-10,14,-85,-7,-11,-24,-30,-78,-80,-79,-44,14,-46,14,14,14,-50,-77,-81,-56,-57,-58,-59,-20,-21,-19,-27,14,-61,14,14,-12,-102,-94,-95,-96,-97,-98,-99,-100,-101,-115,14,14,-69,-67,-44,-8,14,-86,-23,-25,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-54,-55,-47,14,-48,-49,-26,-28,-62,14,-63,-13,-103,14,14,14,-117,14,14,14,14,-71,-72,-73,-74,-75,-76,-9,14,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,14,-60,-52,14,-65,-64,-70,14,-118,14,-121,-68,-45,-51,-53,-66,14,14,14,14,-122,14,-106,14,14,14,-119,-104,-120,-107,14,14,14,14,14,-110,14,-109,14,14,-108,-105,-113,14,-111,-112,-114,]),'$end':([1,2,3,4,5,15,16,24,27,57,83,86,116,118,136,160,],[0,-1,-2,-4,-5,-3,-6,-85,-7,-61,-8,-86,-62,-63,-9,-64,]),'RBRACKET':([6,8,14,23,26,29,32,36,38,42,45,46,47,48,49,50,51,53,79,80,81,82,87,88,106,107,108,110,111,112,114,115,140,141,142,143,144,145,146,147,148,149,150,151,152,154,155,156,161,169,170,173,174,175,184,],[18,-22,-18,18,18,-24,-30,-44,-46,-50,-56,-57,-58,-59,-20,-21,-19,-27,-69,-67,-44,18,-23,-25,-54,-55,-47,-48,-49,-26,-28,18,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-60,174,-52,-70,18,-68,-45,-51,-53,18,]),'LBRACE':([6,8,14,17,20,21,23,24,28,29,32,36,38,42,45,46,47,48,49,50,51,53,57,58,59,60,61,62,63,64,65,66,67,68,69,73,74,79,80,81,84,85,86,87,88,106,107,108,110,111,112,114,116,117,118,119,120,124,139,140,141,142,143,144,145,146,147,148,149,150,151,152,154,156,160,161,165,170,173,174,175,177,182,186,187,188,193,194,195,198,199,201,204,205,206,207,208,210,211,212,213,214,215,216,217,218,],[20,-22,-18,20,20,-10,20,-85,-11,-24,-30,-44,-46,-50,-56,-57,-58,-59,-20,-21,-19,-27,-61,20,20,-12,-102,-94,-95,-96,-97,-98,-99,-100,-101,-115,-116,-69,-67,-44,20,139,-86,-23,-25,-54,-55,-47,-48,-49,-26,-28,-62,20,-63,-13,-103,-117,139,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-60,-52,-64,-70,-118,-68,-45,-51,-53,20,20,139,-106,20,-119,-104,-120,-107,20,20,20,20,-110,20,-109,20,20,-108,-105,-113,20,-111,-112,-114,]),'SEMI':([7,8,10,11,12,13,14,20,21,22,23,24,25,28,29,32,36,38,42,45,46,47,48,49,50,51,53,57,58,59,60,61,62,63,64,65,66,67,68,69,70,73,74,79,80,81,82,86,87,88,106,107,108,110,111,112,114,116,117,118,119,120,123,124,125,137,138,140,141,142,143,144,145,146,147,148,149,150,151,152,154,156,160,161,163,164,165,170,173,174,175,177,179,180,181,182,183,185,187,188,191,193,194,195,196,198,199,201,204,205,206,207,208,210,211,212,213,214,215,216,217,218,],[24,-22,-14,-15,-16,-17,-18,61,-10,24,-87,-85,86,-11,-24,-30,-44,-46,-50,-56,-57,-58,-59,-20,-21,-19,-27,-61,61,61,-12,-102,-94,-95,-96,-97,-98,-99,-100,-101,120,-115,-116,-69,-67,-44,-87,-86,-23,-25,-54,-55,-47,-48,-49,-26,-28,-62,61,-63,-13,-103,163,-117,165,-88,-89,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-60,-52,-64,-70,178,180,-118,-68,-45,-51,-53,61,190,192,193,61,195,-90,-106,61,202,-119,-104,-120,-91,-107,61,61,61,61,-110,61,-109,61,61,-108,-105,-113,61,-111,-112,-114,]),'EQ':([8,14,23,29,36,38,42,45,46,47,48,49,50,51,53,81,82,87,88,106,107,108,110,111,112,114,154,156,173,174,175,],[-22,-18,85,-24,-44,-46,-50,-56,-57,-58,-59,-20,-21,-19,-27,130,85,-23,-25,-54,-55,-47,-48,-49,-26,-28,-60,-52,-45,-51,-53,]),'RPAREN':([8,10,11,12,13,14,19,26,29,32,36,38,42,45,46,47,48,49,50,51,52,53,54,55,79,80,81,87,88,102,103,105,106,107,108,110,111,112,114,115,140,141,142,143,144,145,146,147,148,149,150,151,152,154,156,157,158,159,161,162,166,167,168,169,170,173,174,175,176,178,184,189,190,192,200,202,203,209,],[-22,-14,-15,-16,-17,-18,53,87,-24,-30,-44,-46,-50,-56,-57,-58,-59,-20,-21,-19,112,-27,114,-82,-69,-67,-44,-23,-25,153,154,156,-54,-55,-47,-48,-49,-26,-28,-84,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-60,-52,175,-65,-83,-70,177,181,182,183,-121,-68,-45,-51,-53,-66,188,-122,199,201,204,207,210,211,215,]),'COMMA':([8,14,29,32,36,38,42,45,46,47,48,49,50,51,52,53,55,70,79,80,81,87,88,103,106,107,108,110,111,112,114,115,124,125,138,140,141,142,143,144,145,146,147,148,149,150,151,152,154,155,156,159,161,162,164,166,167,170,171,172,173,174,175,179,185,189,191,196,197,200,203,209,],[-22,-18,-24,-30,-44,-46,-50,-56,-57,-58,-59,-20,-21,-19,113,-27,-82,121,-69,-67,-44,-23,-25,121,-54,-55,-47,-48,-49,-26,-28,-84,121,121,-89,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-60,121,-52,-83,-70,121,121,121,121,-68,186,-92,-45,-51,-53,121,-90,121,121,-91,-93,121,121,121,]),'LBRACKET':([14,18,30,31,32,36,38,42,45,46,47,48,49,50,51,106,107,108,110,111,140,141,142,143,144,145,146,147,148,149,150,151,152,154,156,173,174,175,],[-18,29,88,-29,-30,-44,104,-50,-56,-57,-58,-59,-20,-21,-19,-54,-55,-47,-48,-49,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-60,-52,-45,-51,-53,]),'PLUSPLUS':([14,18,20,21,24,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,57,58,59,60,61,62,63,64,65,66,67,68,69,73,74,75,79,80,81,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,104,105,106,107,108,109,110,111,116,117,118,119,120,121,122,123,124,126,127,129,130,131,132,133,134,135,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,160,161,163,165,170,173,174,175,176,177,178,180,182,186,187,188,190,192,193,194,195,198,199,201,202,204,205,206,207,208,210,211,212,213,214,215,216,217,218,],[-18,39,39,-10,-85,-11,-30,-78,-80,-79,-44,39,106,39,39,39,-50,-77,-81,-56,-57,-58,-59,-20,-21,-19,-61,39,39,-12,-102,-94,-95,-96,-97,-98,-99,-100,-101,-115,39,39,-69,-67,-44,39,-86,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-54,-55,-47,39,-48,-49,-62,39,-63,-13,-103,39,39,39,-117,39,39,39,-71,-72,-73,-74,-75,-76,39,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,39,-60,-52,39,-65,-64,-70,39,-118,-68,-45,-51,-53,-66,39,39,39,39,39,-106,39,39,39,-119,-104,-120,-107,39,39,39,39,39,-110,39,-109,39,39,-108,-105,-113,39,-111,-112,-114,]),'MINUSMINUS':([14,18,20,21,24,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,57,58,59,60,61,62,63,64,65,66,67,68,69,73,74,75,79,80,81,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,104,105,106,107,108,109,110,111,116,117,118,119,120,121,122,123,124,126,127,129,130,131,132,133,134,135,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,160,161,163,165,170,173,174,175,176,177,178,180,182,186,187,188,190,192,193,194,195,198,199,201,202,204,205,206,207,208,210,211,212,213,214,215,216,217,218,],[-18,40,40,-10,-85,-11,-30,-78,-80,-79,-44,40,107,40,40,40,-50,-77,-81,-56,-57,-58,-59,-20,-21,-19,-61,40,40,-12,-102,-94,-95,-96,-97,-98,-99,-100,-101,-115,40,40,-69,-67,-44,40,-86,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-54,-55,-47,40,-48,-49,-62,40,-63,-13,-103,40,40,40,-117,40,40,40,-71,-72,-73,-74,-75,-76,40,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,40,-60,-52,40,-65,-64,-70,40,-118,-68,-45,-51,-53,-66,40,40,40,40,40,-106,40,40,40,-119,-104,-120,-107,40,40,40,40,40,-110,40,-109,40,40,-108,-105,-113,40,-111,-112,-114,]),'TIMES':([14,18,20,21,24,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,57,58,59,60,61,62,63,64,65,66,67,68,69,73,74,75,79,80,81,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,104,105,106,107,108,109,110,111,116,117,118,119,120,121,122,123,124,126,127,129,130,131,132,133,134,135,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,160,161,163,165,170,173,174,175,176,177,178,180,182,186,187,188,190,192,193,194,195,198,199,201,202,204,205,206,207,208,210,211,212,213,214,215,216,217,218,],[-18,33,33,-10,-85,-11,89,-30,-78,-80,-79,-44,33,-46,33,33,33,-50,-77,-81,-56,-57,-58,-59,-20,-21,-19,-61,33,33,-12,-102,-94,-95,-96,-97,-98,-99,-100,-101,-115,33,33,-69,89,-44,33,-86,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,-54,-55,-47,33,-48,-49,-62,33,-63,-13,-103,33,33,33,-117,33,33,33,-71,-72,-73,-74,-75,-76,33,89,89,89,89,89,89,89,89,89,89,89,89,89,33,-60,-52,33,-65,-64,-70,33,-118,-68,-45,-51,-53,-66,33,33,33,33,33,-106,33,33,33,-119,-104,-120,-107,33,33,33,33,33,-110,33,-109,33,33,-108,-105,-113,33,-111,-112,-114,]),'DIVIDE':([14,31,32,36,38,42,45,46,47,48,49,50,51,80,81,106,107,108,110,111,140,141,142,143,144,145,146,147,148,149,150,151,152,154,156,173,174,175,],[-18,90,-30,-44,-46,-50,-56,-57,-58,-59,-20,-21,-19,90,-44,-54,-55,-47,-48,-49,90,90,90,90,90,90,90,90,90,90,90,90,90,-60,-52,-45,-51,-53,]),'MOD':([14,31,32,36,38,42,45,46,47,48,49,50,51,80,81,106,107,108,110,111,140,141,142,143,144,145,146,147,148,149,150,151,152,154,156,173,174,175,],[-18,91,-30,-44,-46,-50,-56,-57,-58,-59,-20,-21,-19,91,-44,-54,-55,-47,-48,-49,91,91,91,91,91,91,91,91,91,91,91,91,91,-60,-52,-45,-51,-53,]),'MINUS':([14,18,20,21,24,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,57,58,59,60,61,62,63,64,65,66,67,68,69,73,74,75,79,80,81,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,104,105,106,107,108,109,110,111,116,117,118,119,120,121,122,123,124,126,127,129,130,131,132,133,134,135,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,160,161,163,165,170,173,174,175,176,177,178,180,182,186,187,188,190,192,193,194,195,198,199,201,202,204,205,206,207,208,210,211,212,213,214,215,216,217,218,],[-18,34,34,-10,-85,-11,92,-30,-78,-80,-79,-44,34,-46,34,34,34,-50,-77,-81,-56,-57,-58,-59,-20,-21,-19,-61,34,34,-12,-102,-94,-95,-96,-97,-98,-99,-100,-101,-115,34,34,-69,92,-44,34,-86,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-54,-55,-47,34,-48,-49,-62,34,-63,-13,-103,34,34,34,-117,34,34,34,-71,-72,-73,-74,-75,-76,34,92,92,92,92,92,92,92,92,92,92,92,92,92,34,-60,-52,34,-65,-64,-70,34,-118,-68,-45,-51,-53,-66,34,34,34,34,34,-106,34,34,34,-119,-104,-120,-107,34,34,34,34,34,-110,34,-109,34,34,-108,-105,-113,34,-111,-112,-114,]),'PLUS':([14,18,20,21,24,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,57,58,59,60,61,62,63,64,65,66,67,68,69,73,74,75,79,80,81,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,104,105,106,107,108,109,110,111,116,117,118,119,120,121,122,123,124,126,127,129,130,131,132,133,134,135,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,160,161,163,165,170,173,174,175,176,177,178,180,182,186,187,188,190,192,193,194,195,198,199,201,202,204,205,206,207,208,210,211,212,213,214,215,216,217,218,],[-18,35,35,-10,-85,-11,93,-30,-78,-80,-79,-44,35,-46,35,35,35,-50,-77,-81,-56,-57,-58,-59,-20,-21,-19,-61,35,35,-12,-102,-94,-95,-96,-97,-98,-99,-100,-101,-115,35,35,-69,93,-44,35,-86,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-54,-55,-47,35,-48,-49,-62,35,-63,-13,-103,35,35,35,-117,35,35,35,-71,-72,-73,-74,-75,-76,35,93,93,93,93,93,93,93,93,93,93,93,93,93,35,-60,-52,35,-65,-64,-70,35,-118,-68,-45,-51,-53,-66,35,35,35,35,35,-106,35,35,35,-119,-104,-120,-107,35,35,35,35,35,-110,35,-109,35,35,-108,-105,-113,35,-111,-112,-114,]),'LT':([14,31,32,36,38,42,45,46,47,48,49,50,51,80,81,106,107,108,110,111,140,141,142,143,144,145,146,147,148,149,150,151,152,154,156,173,174,175,],[-18,94,-30,-44,-46,-50,-56,-57,-58,-59,-20,-21,-19,94,-44,-54,-55,-47,-48,-49,94,94,94,94,94,94,94,94,94,94,94,94,94,-60,-52,-45,-51,-53,]),'LE':([14,31,32,36,38,42,45,46,47,48,49,50,51,80,81,106,107,108,110,111,140,141,142,143,144,145,146,147,148,149,150,151,152,154,156,173,174,175,],[-18,95,-30,-44,-46,-50,-56,-57,-58,-59,-20,-21,-19,95,-44,-54,-55,-47,-48,-49,95,95,95,95,95,95,95,95,95,95,95,95,95,-60,-52,-45,-51,-53,]),'HT':([14,31,32,36,38,42,45,46,47,48,49,50,51,80,81,106,107,108,110,111,140,141,142,143,144,145,146,147,148,149,150,151,152,154,156,173,174,175,],[-18,96,-30,-44,-46,-50,-56,-57,-58,-59,-20,-21,-19,96,-44,-54,-55,-47,-48,-49,96,96,96,96,96,96,96,96,96,96,96,96,96,-60,-52,-45,-51,-53,]),'HE':([14,31,32,36,38,42,45,46,47,48,49,50,51,80,81,106,107,108,110,111,140,141,142,143,144,145,146,147,148,149,150,151,152,154,156,173,174,175,],[-18,97,-30,-44,-46,-50,-56,-57,-58,-59,-20,-21,-19,97,-44,-54,-55,-47,-48,-49,97,97,97,97,97,97,97,97,97,97,97,97,97,-60,-52,-45,-51,-53,]),'EQUALS':([14,31,32,36,38,42,45,46,47,48,49,50,51,80,81,106,107,108,110,111,140,141,142,143,144,145,146,147,148,149,150,151,152,154,156,173,174,175,],[-18,98,-30,-44,-46,-50,-56,-57,-58,-59,-20,-21,-19,98,-44,-54,-55,-47,-48,-49,98,98,98,98,98,98,98,98,98,98,98,98,98,-60,-52,-45,-51,-53,]),'DIFF':([14,31,32,36,38,42,45,46,47,48,49,50,51,80,81,106,107,108,110,111,140,141,142,143,144,145,146,147,148,149,150,151,152,154,156,173,174,175,],[-18,99,-30,-44,-46,-50,-56,-57,-58,-59,-20,-21,-19,99,-44,-54,-55,-47,-48,-49,99,99,99,99,99,99,99,99,99,99,99,99,99,-60,-52,-45,-51,-53,]),'AND':([14,31,32,36,38,42,45,46,47,48,49,50,51,80,81,106,107,108,110,111,140,141,142,143,144,145,146,147,148,149,150,151,152,154,156,173,174,175,],[-18,100,-30,-44,-46,-50,-56,-57,-58,-59,-20,-21,-19,100,-44,-54,-55,-47,-48,-49,100,100,100,100,100,100,100,100,100,100,100,100,100,-60,-52,-45,-51,-53,]),'OR':([14,31,32,36,38,42,45,46,47,48,49,50,51,80,81,106,107,108,110,111,140,141,142,143,144,145,146,147,148,149,150,151,152,154,156,173,174,175,],[-18,101,-30,-44,-46,-50,-56,-57,-58,-59,-20,-21,-19,101,-44,-54,-55,-47,-48,-49,101,101,101,101,101,101,101,101,101,101,101,101,101,-60,-52,-45,-51,-53,]),'ASSIGN_TIMES':([14,36,38,42,45,46,47,48,49,50,51,81,106,107,108,110,111,154,156,173,174,175,],[-18,-44,-46,-50,-56,-57,-58,-59,-20,-21,-19,131,-54,-55,-47,-48,-49,-60,-52,-45,-51,-53,]),'ASSIGN_DIVIDE':([14,36,38,42,45,46,47,48,49,50,51,81,106,107,108,110,111,154,156,173,174,175,],[-18,-44,-46,-50,-56,-57,-58,-59,-20,-21,-19,132,-54,-55,-47,-48,-49,-60,-52,-45,-51,-53,]),'ASSIGN_MOD':([14,36,38,42,45,46,47,48,49,50,51,81,106,107,108,110,111,154,156,173,174,175,],[-18,-44,-46,-50,-56,-57,-58,-59,-20,-21,-19,133,-54,-55,-47,-48,-49,-60,-52,-45,-51,-53,]),'ASSIGN_PLUS':([14,36,38,42,45,46,47,48,49,50,51,81,106,107,108,110,111,154,156,173,174,175,],[-18,-44,-46,-50,-56,-57,-58,-59,-20,-21,-19,134,-54,-55,-47,-48,-49,-60,-52,-45,-51,-53,]),'ASSIGN_MINUS':([14,36,38,42,45,46,47,48,49,50,51,81,106,107,108,110,111,154,156,173,174,175,],[-18,-44,-46,-50,-56,-57,-58,-59,-20,-21,-19,135,-54,-55,-47,-48,-49,-60,-52,-45,-51,-53,]),'RBRACE':([14,20,21,24,28,32,36,38,42,45,46,47,48,49,50,51,57,58,59,60,61,62,63,64,65,66,67,68,69,73,74,79,80,81,86,106,107,108,110,111,116,117,118,119,120,124,138,140,141,142,143,144,145,146,147,148,149,150,151,152,154,156,160,161,165,170,171,172,173,174,175,185,186,187,193,194,195,196,197,198,206,208,212,213,214,216,217,218,],[-18,57,-10,-85,-11,-30,-44,-46,-50,-56,-57,-58,-59,-20,-21,-19,-61,116,118,-12,-102,-94,-95,-96,-97,-98,-99,-100,-101,-115,-116,-69,-67,-44,-86,-54,-55,-47,-48,-49,-62,160,-63,-13,-103,-117,-89,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-60,-52,-64,-70,-118,-68,185,-92,-45,-51,-53,-90,196,-106,-119,-104,-120,-91,-93,-107,-110,-109,-108,-105,-113,-111,-112,-114,]),'WHILE':([14,20,21,24,28,32,36,38,42,45,46,47,48,49,50,51,57,58,59,60,61,62,63,64,65,66,67,68,69,73,74,79,80,81,86,106,107,108,110,111,116,117,118,119,120,124,140,141,142,143,144,145,146,147,148,149,150,151,152,154,156,160,161,165,170,173,174,175,177,182,187,188,193,194,195,198,199,201,204,205,206,207,208,210,211,212,213,214,215,216,217,218,],[-18,71,-10,-85,-11,-30,-44,-46,-50,-56,-57,-58,-59,-20,-21,-19,-61,71,71,-12,-102,-94,-95,-96,-97,-98,-99,-100,-101,-115,-116,-69,-67,-44,-86,-54,-55,-47,-48,-49,-62,71,-63,-13,-103,-117,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-60,-52,-64,-70,-118,-68,-45,-51,-53,71,71,-106,71,-119,-104,-120,-107,71,71,71,71,-110,71,-109,71,71,-108,-105,-113,71,-111,-112,-114,]),'FOR':([14,20,21,24,28,32,36,38,42,45,46,47,48,49,50,51,57,58,59,60,61,62,63,64,65,66,67,68,69,73,74,79,80,81,86,106,107,108,110,111,116,117,118,119,120,124,140,141,142,143,144,145,146,147,148,149,150,151,152,154,156,160,161,165,170,173,174,175,177,182,187,188,193,194,195,198,199,201,204,205,206,207,208,210,211,212,213,214,215,216,217,218,],[-18,72,-10,-85,-11,-30,-44,-46,-50,-56,-57,-58,-59,-20,-21,-19,-61,72,72,-12,-102,-94,-95,-96,-97,-98,-99,-100,-101,-115,-116,-69,-67,-44,-86,-54,-55,-47,-48,-49,-62,72,-63,-13,-103,-117,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-60,-52,-64,-70,-118,-68,-45,-51,-53,72,72,-106,72,-119,-104,-120,-107,72,72,72,72,-110,72,-109,72,72,-108,-105,-113,72,-111,-112,-114,]),'BREAK':([14,20,21,24,28,32,36,38,42,45,46,47,48,49,50,51,57,58,59,60,61,62,63,64,65,66,67,68,69,73,74,79,80,81,86,106,107,108,110,111,116,117,118,119,120,124,140,141,142,143,144,145,146,147,148,149,150,151,152,154,156,160,161,165,170,173,174,175,177,182,187,188,193,194,195,198,199,201,204,205,206,207,208,210,211,212,213,214,215,216,217,218,],[-18,73,-10,-85,-11,-30,-44,-46,-50,-56,-57,-58,-59,-20,-21,-19,-61,73,73,-12,-102,-94,-95,-96,-97,-98,-99,-100,-101,-115,-116,-69,-67,-44,-86,-54,-55,-47,-48,-49,-62,73,-63,-13,-103,-117,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-60,-52,-64,-70,-118,-68,-45,-51,-53,73,73,-106,73,-119,-104,-120,-107,73,73,73,73,-110,73,-109,73,73,-108,-105,-113,73,-111,-112,-114,]),'RETURN':([14,20,21,24,28,32,36,38,42,45,46,47,48,49,50,51,57,58,59,60,61,62,63,64,65,66,67,68,69,73,74,79,80,81,86,106,107,108,110,111,116,117,118,119,120,124,140,141,142,143,144,145,146,147,148,149,150,151,152,154,156,160,161,165,170,173,174,175,177,182,187,188,193,194,195,198,199,201,204,205,206,207,208,210,211,212,213,214,215,216,217,218,],[-18,74,-10,-85,-11,-30,-44,-46,-50,-56,-57,-58,-59,-20,-21,-19,-61,74,74,-12,-102,-94,-95,-96,-97,-98,-99,-100,-101,-115,-116,-69,-67,-44,-86,-54,-55,-47,-48,-49,-62,74,-63,-13,-103,-117,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-60,-52,-64,-70,-118,-68,-45,-51,-53,74,74,-106,74,-119,-104,-120,-107,74,74,74,74,-110,74,-109,74,74,-108,-105,-113,74,-111,-112,-114,]),'ASSERT':([14,20,21,24,28,32,36,38,42,45,46,47,48,49,50,51,57,58,59,60,61,62,63,64,65,66,67,68,69,73,74,79,80,81,86,106,107,108,110,111,116,117,118,119,120,124,140,141,142,143,144,145,146,147,148,149,150,151,152,154,156,160,161,165,170,173,174,175,177,182,187,188,193,194,195,198,199,201,204,205,206,207,208,210,211,212,213,214,215,216,217,218,],[-18,75,-10,-85,-11,-30,-44,-46,-50,-56,-57,-58,-59,-20,-21,-19,-61,75,75,-12,-102,-94,-95,-96,-97,-98,-99,-100,-101,-115,-116,-69,-67,-44,-86,-54,-55,-47,-48,-49,-62,75,-63,-13,-103,-117,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-60,-52,-64,-70,-118,-68,-45,-51,-53,75,75,-106,75,-119,-104,-120,-107,75,75,75,75,-110,75,-109,75,75,-108,-105,-113,75,-111,-112,-114,]),'PRINT':([14,20,21,24,28,32,36,38,42,45,46,47,48,49,50,51,57,58,59,60,61,62,63,64,65,66,67,68,69,73,74,79,80,81,86,106,107,108,110,111,116,117,118,119,120,124,140,141,142,143,144,145,146,147,148,149,150,151,152,154,156,160,161,165,170,173,174,175,177,182,187,188,193,194,195,198,199,201,204,205,206,207,208,210,211,212,213,214,215,216,217,218,],[-18,76,-10,-85,-11,-30,-44,-46,-50,-56,-57,-58,-59,-20,-21,-19,-61,76,76,-12,-102,-94,-95,-96,-97,-98,-99,-100,-101,-115,-116,-69,-67,-44,-86,-54,-55,-47,-48,-49,-62,76,-63,-13,-103,-117,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-60,-52,-64,-70,-118,-68,-45,-51,-53,76,76,-106,76,-119,-104,-120,-107,76,76,76,76,-110,76,-109,76,76,-108,-105,-113,76,-111,-112,-114,]),'IF':([14,20,21,24,28,32,36,38,42,45,46,47,48,49,50,51,57,58,59,60,61,62,63,64,65,66,67,68,69,73,74,79,80,81,86,106,107,108,110,111,116,117,118,119,120,124,140,141,142,143,144,145,146,147,148,149,150,151,152,154,156,160,161,165,170,173,174,175,177,182,187,188,193,194,195,198,199,201,204,205,206,207,208,210,211,212,213,214,215,216,217,218,],[-18,77,-10,-85,-11,-30,-44,-46,-50,-56,-57,-58,-59,-20,-21,-19,-61,77,77,-12,-102,-94,-95,-96,-97,-98,-99,-100,-101,-115,-116,-69,-67,-44,-86,-54,-55,-47,-48,-49,-62,77,-63,-13,-103,-117,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-60,-52,-64,-70,-118,-68,-45,-51,-53,77,77,-106,77,-119,-104,-120,-107,77,77,77,77,-110,77,-109,77,77,-108,-105,-113,77,-111,-112,-114,]),'READ':([14,20,21,24,28,32,36,38,42,45,46,47,48,49,50,51,57,58,59,60,61,62,63,64,65,66,67,68,69,73,74,79,80,81,86,106,107,108,110,111,116,117,118,119,120,124,140,141,142,143,144,145,146,147,148,149,150,151,152,154,156,160,161,165,170,173,174,175,177,182,187,188,193,194,195,198,199,201,204,205,206,207,208,210,211,212,213,214,215,216,217,218,],[-18,78,-10,-85,-11,-30,-44,-46,-50,-56,-57,-58,-59,-20,-21,-19,-61,78,78,-12,-102,-94,-95,-96,-97,-98,-99,-100,-101,-115,-116,-69,-67,-44,-86,-54,-55,-47,-48,-49,-62,78,-63,-13,-103,-117,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-60,-52,-64,-70,-118,-68,-45,-51,-53,78,78,-106,78,-119,-104,-120,-107,78,78,78,78,-110,78,-109,78,78,-108,-105,-113,78,-111,-112,-114,]),'ADDRESS':([14,18,20,21,24,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,57,58,59,60,61,62,63,64,65,66,67,68,69,73,74,75,79,80,81,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,104,105,106,107,108,109,110,111,116,117,118,119,120,121,122,123,124,126,127,129,130,131,132,133,134,135,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,160,161,163,165,170,173,174,175,176,177,178,180,182,186,187,188,190,192,193,194,195,198,199,201,202,204,205,206,207,208,210,211,212,213,214,215,216,217,218,],[-18,43,43,-10,-85,-11,-30,-78,-80,-79,-44,43,-46,43,43,43,-50,-77,-81,-56,-57,-58,-59,-20,-21,-19,-61,43,43,-12,-102,-94,-95,-96,-97,-98,-99,-100,-101,-115,43,43,-69,-67,-44,43,-86,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-54,-55,-47,43,-48,-49,-62,43,-63,-13,-103,43,43,43,-117,43,43,43,-71,-72,-73,-74,-75,-76,43,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,43,-60,-52,43,-65,-64,-70,43,-118,-68,-45,-51,-53,-66,43,43,43,43,43,-106,43,43,43,-119,-104,-120,-107,43,43,43,43,43,-110,43,-109,43,43,-108,-105,-113,43,-111,-112,-114,]),'NOT':([14,18,20,21,24,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,57,58,59,60,61,62,63,64,65,66,67,68,69,73,74,75,79,80,81,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,104,105,106,107,108,109,110,111,116,117,118,119,120,121,122,123,124,126,127,129,130,131,132,133,134,135,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,160,161,163,165,170,173,174,175,176,177,178,180,182,186,187,188,190,192,193,194,195,198,199,201,202,204,205,206,207,208,210,211,212,213,214,215,216,217,218,],[-18,44,44,-10,-85,-11,-30,-78,-80,-79,-44,44,-46,44,44,44,-50,-77,-81,-56,-57,-58,-59,-20,-21,-19,-61,44,44,-12,-102,-94,-95,-96,-97,-98,-99,-100,-101,-115,44,44,-69,-67,-44,44,-86,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,-54,-55,-47,44,-48,-49,-62,44,-63,-13,-103,44,44,44,-117,44,44,44,-71,-72,-73,-74,-75,-76,44,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,44,-60,-52,44,-65,-64,-70,44,-118,-68,-45,-51,-53,-66,44,44,44,44,44,-106,44,44,44,-119,-104,-120,-107,44,44,44,44,44,-110,44,-109,44,44,-108,-105,-113,44,-111,-112,-114,]),'INT_CONST':([14,18,20,21,24,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,57,58,59,60,61,62,63,64,65,66,67,68,69,73,74,75,79,80,81,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,104,105,106,107,108,109,110,111,116,117,118,119,120,121,122,123,124,126,127,129,130,131,132,133,134,135,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,160,161,163,165,170,173,174,175,176,177,178,180,182,186,187,188,190,192,193,194,195,198,199,201,202,204,205,206,207,208,210,211,212,213,214,215,216,217,218,],[-18,49,49,-10,-85,-11,-30,-78,-80,-79,-44,49,-46,49,49,49,-50,-77,-81,-56,-57,-58,-59,-20,-21,-19,-61,49,49,-12,-102,-94,-95,-96,-97,-98,-99,-100,-101,-115,49,49,-69,-67,-44,49,-86,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-54,-55,-47,49,-48,-49,-62,49,-63,-13,-103,49,49,49,-117,49,49,49,-71,-72,-73,-74,-75,-76,49,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,49,-60,-52,49,-65,-64,-70,49,-118,-68,-45,-51,-53,-66,49,49,49,49,49,-106,49,49,49,-119,-104,-120,-107,49,49,49,49,49,-110,49,-109,49,49,-108,-105,-113,49,-111,-112,-114,]),'FLOAT_CONST':([14,18,20,21,24,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,57,58,59,60,61,62,63,64,65,66,67,68,69,73,74,75,79,80,81,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,104,105,106,107,108,109,110,111,116,117,118,119,120,121,122,123,124,126,127,129,130,131,132,133,134,135,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,160,161,163,165,170,173,174,175,176,177,178,180,182,186,187,188,190,192,193,194,195,198,199,201,202,204,205,206,207,208,210,211,212,213,214,215,216,217,218,],[-18,50,50,-10,-85,-11,-30,-78,-80,-79,-44,50,-46,50,50,50,-50,-77,-81,-56,-57,-58,-59,-20,-21,-19,-61,50,50,-12,-102,-94,-95,-96,-97,-98,-99,-100,-101,-115,50,50,-69,-67,-44,50,-86,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-54,-55,-47,50,-48,-49,-62,50,-63,-13,-103,50,50,50,-117,50,50,50,-71,-72,-73,-74,-75,-76,50,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,50,-60,-52,50,-65,-64,-70,50,-118,-68,-45,-51,-53,-66,50,50,50,50,50,-106,50,50,50,-119,-104,-120,-107,50,50,50,50,50,-110,50,-109,50,50,-108,-105,-113,50,-111,-112,-114,]),'STRING':([14,18,20,21,24,28,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,57,58,59,60,61,62,63,64,65,66,67,68,69,73,74,75,79,80,81,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,104,105,106,107,108,109,110,111,116,117,118,119,120,121,122,123,124,126,127,129,130,131,132,133,134,135,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,157,158,160,161,163,165,170,173,174,175,176,177,178,180,182,186,187,188,190,192,193,194,195,198,199,201,202,204,205,206,207,208,210,211,212,213,214,215,216,217,218,],[-18,51,51,-10,-85,-11,-30,-78,-80,-79,-44,51,-46,51,51,51,-50,-77,-81,-56,-57,-58,-59,-20,-21,-19,-61,51,51,-12,-102,-94,-95,-96,-97,-98,-99,-100,-101,-115,51,51,-69,-67,-44,51,-86,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-54,-55,-47,51,-48,-49,-62,51,-63,-13,-103,51,51,51,-117,51,51,51,-71,-72,-73,-74,-75,-76,51,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,51,-60,-52,51,-65,-64,-70,51,-118,-68,-45,-51,-53,-66,51,51,51,51,51,-106,51,51,51,-119,-104,-120,-107,51,51,51,51,51,-110,51,-109,51,51,-108,-105,-113,51,-111,-112,-114,]),'ELSE':([14,32,36,38,42,45,46,47,48,49,50,51,57,61,62,63,64,65,66,67,68,69,73,74,79,80,81,106,107,108,110,111,116,118,120,124,140,141,142,143,144,145,146,147,148,149,150,151,152,154,156,160,161,165,170,173,174,175,187,193,194,195,198,206,208,212,213,214,216,217,218,],[-18,-30,-44,-46,-50,-56,-57,-58,-59,-20,-21,-19,-61,-102,-94,-95,-96,-97,-98,-99,-100,-101,-115,-116,-69,-67,-44,-54,-55,-47,-48,-49,-62,-63,-103,-117,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-60,-52,-64,-70,-118,-68,-45,-51,-53,-106,-119,205,-120,-107,-110,-109,-108,-105,-113,-111,-112,-114,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'global_declaration_list':([0,],[2,]),'global_declaration':([0,2,],[3,15,]),'function_definition':([0,2,],[4,4,]),'declaration':([0,2,6,17,20,23,58,84,],[5,5,21,28,21,21,28,28,]),'declarator':([0,2,7,9,22,56,128,168,],[6,6,23,26,82,115,169,184,]),'type_specifier':([0,2,6,17,19,20,23,37,58,84,113,],[7,7,22,22,56,22,22,102,22,22,56,]),'identifier':([0,2,7,9,18,19,20,22,37,39,40,41,56,58,59,74,75,85,89,90,91,92,93,94,95,96,97,98,99,100,101,104,105,109,117,121,122,123,126,127,128,129,139,153,157,163,168,177,178,180,182,186,188,190,192,199,201,202,204,205,207,210,211,215,],[8,8,8,8,45,54,45,8,45,45,45,45,8,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,8,45,45,45,45,45,8,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'compound_statement':([6,17,20,23,58,59,84,117,177,182,188,199,201,204,205,207,210,211,215,],[16,27,64,83,64,64,136,64,64,64,64,64,64,64,64,64,64,64,64,]),'declaration_list':([6,20,23,],[17,58,84,]),'init_declarator':([7,22,],[25,25,]),'constant_expression':([18,],[30,]),'binary_expression':([18,20,37,58,59,74,75,85,89,90,91,92,93,94,95,96,97,98,99,100,101,104,105,109,117,121,122,123,126,127,129,139,157,163,177,178,180,182,186,188,190,192,199,201,202,204,205,207,210,211,215,],[31,80,80,80,80,80,80,80,140,141,142,143,144,145,146,147,148,149,150,151,152,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'cast_expression':([18,20,37,41,58,59,74,75,85,89,90,91,92,93,94,95,96,97,98,99,100,101,104,105,109,117,121,122,123,126,127,129,139,153,157,163,177,178,180,182,186,188,190,192,199,201,202,204,205,207,210,211,215,],[32,32,32,111,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,173,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'unary_expression':([18,20,37,39,40,41,58,59,74,75,85,89,90,91,92,93,94,95,96,97,98,99,100,101,104,105,109,117,121,122,123,126,127,129,139,153,157,163,177,178,180,182,186,188,190,192,199,201,202,204,205,207,210,211,215,],[36,81,81,108,110,36,81,81,81,81,81,36,36,36,36,36,36,36,36,36,36,36,36,36,81,81,81,81,81,81,81,81,81,81,81,36,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'postfix_expression':([18,20,37,39,40,41,58,59,74,75,85,89,90,91,92,93,94,95,96,97,98,99,100,101,104,105,109,117,121,122,123,126,127,129,139,153,157,163,177,178,180,182,186,188,190,192,199,201,202,204,205,207,210,211,215,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'unary_operator':([18,20,37,39,40,41,58,59,74,75,85,89,90,91,92,93,94,95,96,97,98,99,100,101,104,105,109,117,121,122,123,126,127,129,139,153,157,163,177,178,180,182,186,188,190,192,199,201,202,204,205,207,210,211,215,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'primary_expression':([18,20,37,39,40,41,58,59,74,75,85,89,90,91,92,93,94,95,96,97,98,99,100,101,104,105,109,117,121,122,123,126,127,129,139,153,157,163,177,178,180,182,186,188,190,192,199,201,202,204,205,207,210,211,215,],[42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'int_const':([18,20,37,39,40,41,58,59,74,75,85,89,90,91,92,93,94,95,96,97,98,99,100,101,104,105,109,117,121,122,123,126,127,129,139,153,157,163,177,178,180,182,186,188,190,192,199,201,202,204,205,207,210,211,215,],[46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'float_const':([18,20,37,39,40,41,58,59,74,75,85,89,90,91,92,93,94,95,96,97,98,99,100,101,104,105,109,117,121,122,123,126,127,129,139,153,157,163,177,178,180,182,186,188,190,192,199,201,202,204,205,207,210,211,215,],[47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'frase':([18,20,37,39,40,41,58,59,74,75,85,89,90,91,92,93,94,95,96,97,98,99,100,101,104,105,109,117,121,122,123,126,127,129,139,153,157,163,177,178,180,182,186,188,190,192,199,201,202,204,205,207,210,211,215,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'parameter_list':([19,],[52,]),'parameter_declaration':([19,113,],[55,159,]),'statement_list':([20,58,],[59,117,]),'statement':([20,58,59,117,177,182,188,199,201,204,205,207,210,211,215,],[60,60,119,119,187,194,198,206,208,212,213,214,216,217,218,]),'expression_statement':([20,58,59,117,177,182,188,199,201,204,205,207,210,211,215,],[62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'iteration_statement':([20,58,59,117,177,182,188,199,201,204,205,207,210,211,215,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'jump_statement':([20,58,59,117,177,182,188,199,201,204,205,207,210,211,215,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,]),'assert_statement':([20,58,59,117,177,182,188,199,201,204,205,207,210,211,215,],[66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'print_statement':([20,58,59,117,177,182,188,199,201,204,205,207,210,211,215,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,]),'selection_statement':([20,58,59,117,177,182,188,199,201,204,205,207,210,211,215,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'read_statement':([20,58,59,117,177,182,188,199,201,204,205,207,210,211,215,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'expression':([20,37,58,59,74,75,104,109,117,122,123,126,127,163,177,178,180,182,188,190,192,199,201,202,204,205,207,210,211,215,],[70,103,70,70,124,125,155,103,70,162,164,166,167,179,70,189,191,70,70,200,203,70,70,209,70,70,70,70,70,70,]),'assignment_expression':([20,37,58,59,74,75,85,104,105,109,117,121,122,123,126,127,129,139,157,163,177,178,180,182,186,188,190,192,199,201,202,204,205,207,210,211,215,],[79,79,79,79,79,79,138,79,158,79,79,161,79,79,79,79,170,138,176,79,79,79,79,79,138,79,79,79,79,79,79,79,79,79,79,79,79,]),'assignment_operator':([81,],[129,]),'initializer':([85,139,186,],[137,172,197,]),'assignment_expression_list':([105,],[157,]),'declarator_list':([128,],[168,]),'initializer_list':([139,],[171,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> global_declaration_list','program',1,'p_program','uc_parser1.py',114),
  ('global_declaration_list -> global_declaration','global_declaration_list',1,'p_global_declaration_list','uc_parser1.py',120),
  ('global_declaration_list -> global_declaration_list global_declaration','global_declaration_list',2,'p_global_declaration_list','uc_parser1.py',121),
  ('global_declaration -> function_definition','global_declaration',1,'p_global_declaration','uc_parser1.py',127),
  ('global_declaration -> declaration','global_declaration',1,'p_global_declaration','uc_parser1.py',128),
  ('function_definition -> declarator compound_statement','function_definition',2,'p_function_definition','uc_parser1.py',132),
  ('function_definition -> declarator declaration_list compound_statement','function_definition',3,'p_function_definition','uc_parser1.py',133),
  ('function_definition -> type_specifier declarator compound_statement','function_definition',3,'p_function_definition','uc_parser1.py',134),
  ('function_definition -> type_specifier declarator declaration_list compound_statement','function_definition',4,'p_function_definition','uc_parser1.py',135),
  ('declaration_list -> declaration','declaration_list',1,'p_declaration_list','uc_parser1.py',140),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','uc_parser1.py',141),
  ('statement_list -> statement','statement_list',1,'p_statement_list','uc_parser1.py',146),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','uc_parser1.py',147),
  ('type_specifier -> VOID','type_specifier',1,'p_type_specifier','uc_parser1.py',152),
  ('type_specifier -> CHAR','type_specifier',1,'p_type_specifier','uc_parser1.py',153),
  ('type_specifier -> INT','type_specifier',1,'p_type_specifier','uc_parser1.py',154),
  ('type_specifier -> FLOAT','type_specifier',1,'p_type_specifier','uc_parser1.py',155),
  ('identifier -> ID','identifier',1,'p_identifier','uc_parser1.py',160),
  ('frase -> STRING','frase',1,'p_frase','uc_parser1.py',164),
  ('int_const -> INT_CONST','int_const',1,'p_int_const','uc_parser1.py',168),
  ('float_const -> FLOAT_CONST','float_const',1,'p_float_const','uc_parser1.py',172),
  ('declarator -> identifier','declarator',1,'p_declarator','uc_parser1.py',177),
  ('declarator -> LPAREN declarator RPAREN','declarator',3,'p_declarator','uc_parser1.py',178),
  ('declarator -> declarator RBRACKET LBRACKET','declarator',3,'p_declarator','uc_parser1.py',179),
  ('declarator -> declarator RBRACKET constant_expression LBRACKET','declarator',4,'p_declarator','uc_parser1.py',180),
  ('declarator -> declarator LPAREN parameter_list RPAREN','declarator',4,'p_declarator','uc_parser1.py',181),
  ('declarator -> declarator LPAREN RPAREN','declarator',3,'p_declarator','uc_parser1.py',182),
  ('declarator -> declarator LPAREN identifier RPAREN','declarator',4,'p_declarator','uc_parser1.py',183),
  ('constant_expression -> binary_expression','constant_expression',1,'p_constant_expression','uc_parser1.py',188),
  ('binary_expression -> cast_expression','binary_expression',1,'p_binary_expression','uc_parser1.py',193),
  ('binary_expression -> binary_expression TIMES binary_expression','binary_expression',3,'p_binary_expression','uc_parser1.py',194),
  ('binary_expression -> binary_expression DIVIDE binary_expression','binary_expression',3,'p_binary_expression','uc_parser1.py',195),
  ('binary_expression -> binary_expression MOD binary_expression','binary_expression',3,'p_binary_expression','uc_parser1.py',196),
  ('binary_expression -> binary_expression MINUS binary_expression','binary_expression',3,'p_binary_expression','uc_parser1.py',197),
  ('binary_expression -> binary_expression PLUS binary_expression','binary_expression',3,'p_binary_expression','uc_parser1.py',198),
  ('binary_expression -> binary_expression LT binary_expression','binary_expression',3,'p_binary_expression','uc_parser1.py',199),
  ('binary_expression -> binary_expression LE binary_expression','binary_expression',3,'p_binary_expression','uc_parser1.py',200),
  ('binary_expression -> binary_expression HT binary_expression','binary_expression',3,'p_binary_expression','uc_parser1.py',201),
  ('binary_expression -> binary_expression HE binary_expression','binary_expression',3,'p_binary_expression','uc_parser1.py',202),
  ('binary_expression -> binary_expression EQUALS binary_expression','binary_expression',3,'p_binary_expression','uc_parser1.py',203),
  ('binary_expression -> binary_expression DIFF binary_expression','binary_expression',3,'p_binary_expression','uc_parser1.py',204),
  ('binary_expression -> binary_expression AND binary_expression','binary_expression',3,'p_binary_expression','uc_parser1.py',205),
  ('binary_expression -> binary_expression OR binary_expression','binary_expression',3,'p_binary_expression','uc_parser1.py',206),
  ('cast_expression -> unary_expression','cast_expression',1,'p_cast_expression','uc_parser1.py',236),
  ('cast_expression -> LPAREN type_specifier RPAREN cast_expression','cast_expression',4,'p_cast_expression','uc_parser1.py',237),
  ('unary_expression -> postfix_expression','unary_expression',1,'p_unary_expression','uc_parser1.py',242),
  ('unary_expression -> PLUSPLUS unary_expression','unary_expression',2,'p_unary_expression','uc_parser1.py',243),
  ('unary_expression -> MINUSMINUS unary_expression','unary_expression',2,'p_unary_expression','uc_parser1.py',244),
  ('unary_expression -> unary_operator cast_expression','unary_expression',2,'p_unary_expression','uc_parser1.py',245),
  ('postfix_expression -> primary_expression','postfix_expression',1,'p_postfix_expression','uc_parser1.py',250),
  ('postfix_expression -> postfix_expression LBRACKET expression RBRACKET','postfix_expression',4,'p_postfix_expression','uc_parser1.py',251),
  ('postfix_expression -> postfix_expression LPAREN RPAREN','postfix_expression',3,'p_postfix_expression','uc_parser1.py',252),
  ('postfix_expression -> postfix_expression LPAREN assignment_expression_list RPAREN','postfix_expression',4,'p_postfix_expression','uc_parser1.py',253),
  ('postfix_expression -> postfix_expression PLUSPLUS','postfix_expression',2,'p_postfix_expression','uc_parser1.py',254),
  ('postfix_expression -> postfix_expression MINUSMINUS','postfix_expression',2,'p_postfix_expression','uc_parser1.py',255),
  ('primary_expression -> identifier','primary_expression',1,'p_primary_expression','uc_parser1.py',260),
  ('primary_expression -> int_const','primary_expression',1,'p_primary_expression','uc_parser1.py',261),
  ('primary_expression -> float_const','primary_expression',1,'p_primary_expression','uc_parser1.py',262),
  ('primary_expression -> frase','primary_expression',1,'p_primary_expression','uc_parser1.py',263),
  ('primary_expression -> LPAREN expression RPAREN','primary_expression',3,'p_primary_expression','uc_parser1.py',264),
  ('compound_statement -> LBRACE RBRACE','compound_statement',2,'p_compound_statement','uc_parser1.py',269),
  ('compound_statement -> LBRACE declaration_list RBRACE','compound_statement',3,'p_compound_statement','uc_parser1.py',270),
  ('compound_statement -> LBRACE statement_list RBRACE','compound_statement',3,'p_compound_statement','uc_parser1.py',271),
  ('compound_statement -> LBRACE declaration_list statement_list RBRACE','compound_statement',4,'p_compound_statement','uc_parser1.py',272),
  ('assignment_expression_list -> assignment_expression','assignment_expression_list',1,'p_assignment_expression_list','uc_parser1.py',278),
  ('assignment_expression_list -> assignment_expression_list assignment_expression','assignment_expression_list',2,'p_assignment_expression_list','uc_parser1.py',279),
  ('assignment_expression -> binary_expression','assignment_expression',1,'p_assignment_expression','uc_parser1.py',284),
  ('assignment_expression -> unary_expression assignment_operator assignment_expression','assignment_expression',3,'p_assignment_expression','uc_parser1.py',285),
  ('expression -> assignment_expression','expression',1,'p_expression','uc_parser1.py',290),
  ('expression -> expression COMMA assignment_expression','expression',3,'p_expression','uc_parser1.py',291),
  ('assignment_operator -> EQ','assignment_operator',1,'p_assignment_operator','uc_parser1.py',296),
  ('assignment_operator -> ASSIGN_TIMES','assignment_operator',1,'p_assignment_operator','uc_parser1.py',297),
  ('assignment_operator -> ASSIGN_DIVIDE','assignment_operator',1,'p_assignment_operator','uc_parser1.py',298),
  ('assignment_operator -> ASSIGN_MOD','assignment_operator',1,'p_assignment_operator','uc_parser1.py',299),
  ('assignment_operator -> ASSIGN_PLUS','assignment_operator',1,'p_assignment_operator','uc_parser1.py',300),
  ('assignment_operator -> ASSIGN_MINUS','assignment_operator',1,'p_assignment_operator','uc_parser1.py',301),
  ('unary_operator -> ADDRESS','unary_operator',1,'p_unary_operator','uc_parser1.py',306),
  ('unary_operator -> TIMES','unary_operator',1,'p_unary_operator','uc_parser1.py',307),
  ('unary_operator -> PLUS','unary_operator',1,'p_unary_operator','uc_parser1.py',308),
  ('unary_operator -> MINUS','unary_operator',1,'p_unary_operator','uc_parser1.py',309),
  ('unary_operator -> NOT','unary_operator',1,'p_unary_operator','uc_parser1.py',310),
  ('parameter_list -> parameter_declaration','parameter_list',1,'p_parameter_list','uc_parser1.py',315),
  ('parameter_list -> parameter_list COMMA parameter_declaration','parameter_list',3,'p_parameter_list','uc_parser1.py',316),
  ('parameter_declaration -> type_specifier declarator','parameter_declaration',2,'p_parameter_declaration','uc_parser1.py',321),
  ('declaration -> type_specifier SEMI','declaration',2,'p_declaration','uc_parser1.py',326),
  ('declaration -> type_specifier init_declarator SEMI','declaration',3,'p_declaration','uc_parser1.py',327),
  ('init_declarator -> declarator','init_declarator',1,'p_init_declarator','uc_parser1.py',332),
  ('init_declarator -> declarator EQ initializer','init_declarator',3,'p_init_declarator','uc_parser1.py',333),
  ('initializer -> assignment_expression','initializer',1,'p_initializer','uc_parser1.py',338),
  ('initializer -> LBRACE initializer_list RBRACE','initializer',3,'p_initializer','uc_parser1.py',339),
  ('initializer -> LBRACE initializer_list COMMA RBRACE','initializer',4,'p_initializer','uc_parser1.py',340),
  ('initializer_list -> initializer','initializer_list',1,'p_initializer_list','uc_parser1.py',345),
  ('initializer_list -> initializer_list COMMA initializer','initializer_list',3,'p_initializer_list','uc_parser1.py',346),
  ('statement -> expression_statement','statement',1,'p_statement','uc_parser1.py',351),
  ('statement -> iteration_statement','statement',1,'p_statement','uc_parser1.py',352),
  ('statement -> compound_statement','statement',1,'p_statement','uc_parser1.py',353),
  ('statement -> jump_statement','statement',1,'p_statement','uc_parser1.py',354),
  ('statement -> assert_statement','statement',1,'p_statement','uc_parser1.py',355),
  ('statement -> print_statement','statement',1,'p_statement','uc_parser1.py',356),
  ('statement -> selection_statement','statement',1,'p_statement','uc_parser1.py',357),
  ('statement -> read_statement','statement',1,'p_statement','uc_parser1.py',358),
  ('expression_statement -> SEMI','expression_statement',1,'p_expression_statement','uc_parser1.py',374),
  ('expression_statement -> expression SEMI','expression_statement',2,'p_expression_statement','uc_parser1.py',375),
  ('selection_statement -> IF LPAREN expression RPAREN statement','selection_statement',5,'p_selection_statement','uc_parser1.py',379),
  ('selection_statement -> IF LPAREN expression RPAREN statement ELSE statement','selection_statement',7,'p_selection_statement','uc_parser1.py',380),
  ('iteration_statement -> WHILE LPAREN expression RPAREN statement','iteration_statement',5,'p_iteration_statement','uc_parser1.py',385),
  ('iteration_statement -> FOR LPAREN SEMI SEMI RPAREN statement','iteration_statement',6,'p_iteration_statement','uc_parser1.py',386),
  ('iteration_statement -> FOR LPAREN expression SEMI SEMI RPAREN statement','iteration_statement',7,'p_iteration_statement','uc_parser1.py',387),
  ('iteration_statement -> FOR LPAREN SEMI expression SEMI RPAREN statement','iteration_statement',7,'p_iteration_statement','uc_parser1.py',388),
  ('iteration_statement -> FOR LPAREN SEMI SEMI expression RPAREN statement','iteration_statement',7,'p_iteration_statement','uc_parser1.py',389),
  ('iteration_statement -> FOR LPAREN expression SEMI expression SEMI RPAREN statement','iteration_statement',8,'p_iteration_statement','uc_parser1.py',390),
  ('iteration_statement -> FOR LPAREN expression SEMI SEMI expression RPAREN statement','iteration_statement',8,'p_iteration_statement','uc_parser1.py',391),
  ('iteration_statement -> FOR LPAREN SEMI expression SEMI expression RPAREN statement','iteration_statement',8,'p_iteration_statement','uc_parser1.py',392),
  ('iteration_statement -> FOR LPAREN expression SEMI expression SEMI expression RPAREN statement','iteration_statement',9,'p_iteration_statement','uc_parser1.py',393),
  ('jump_statement -> BREAK','jump_statement',1,'p_jump_statement','uc_parser1.py',398),
  ('jump_statement -> RETURN','jump_statement',1,'p_jump_statement','uc_parser1.py',399),
  ('jump_statement -> RETURN expression','jump_statement',2,'p_jump_statement','uc_parser1.py',400),
  ('assert_statement -> ASSERT expression SEMI','assert_statement',3,'p_assert_statement','uc_parser1.py',409),
  ('print_statement -> PRINT LPAREN expression RPAREN SEMI','print_statement',5,'p_print_statement','uc_parser1.py',414),
  ('read_statement -> READ LPAREN declarator_list RPAREN SEMI','read_statement',5,'p_read_statement','uc_parser1.py',419),
  ('declarator_list -> declarator','declarator_list',1,'p_declarator_list','uc_parser1.py',423),
  ('declarator_list -> declarator_list declarator','declarator_list',2,'p_declarator_list','uc_parser1.py',424),
]
