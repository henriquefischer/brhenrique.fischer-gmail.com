Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> global_declaration_list
Rule 2     global_declaration_list -> global_declaration
Rule 3     global_declaration_list -> global_declaration_list global_declaration
Rule 4     global_declaration -> function_definition
Rule 5     global_declaration -> declaration
Rule 6     function_definition -> declarator compound_statement
Rule 7     function_definition -> declarator declaration_list compound_statement
Rule 8     function_definition -> type_specifier declarator compound_statement
Rule 9     function_definition -> type_specifier declarator declaration_list compound_statement
Rule 10    declaration_list -> declaration
Rule 11    declaration_list -> declaration_list declaration
Rule 12    statement_list -> statement
Rule 13    statement_list -> statement_list statement
Rule 14    type_specifier -> VOID
Rule 15    type_specifier -> CHAR
Rule 16    type_specifier -> INT
Rule 17    type_specifier -> FLOAT
Rule 18    identifier -> ID
Rule 19    frase -> STRING
Rule 20    int_const -> INT_CONST
Rule 21    float_const -> FLOAT_CONST
Rule 22    declarator -> identifier
Rule 23    declarator -> LPAREN declarator RPAREN
Rule 24    declarator -> declarator RBRACKET LBRACKET
Rule 25    declarator -> declarator RBRACKET constant_expression LBRACKET
Rule 26    declarator -> declarator LPAREN parameter_list RPAREN
Rule 27    declarator -> declarator LPAREN RPAREN
Rule 28    declarator -> declarator LPAREN identifier RPAREN
Rule 29    constant_expression -> binary_expression
Rule 30    binary_expression -> cast_expression
Rule 31    binary_expression -> binary_expression TIMES binary_expression
Rule 32    binary_expression -> binary_expression DIVIDE binary_expression
Rule 33    binary_expression -> binary_expression MOD binary_expression
Rule 34    binary_expression -> binary_expression MINUS binary_expression
Rule 35    binary_expression -> binary_expression PLUS binary_expression
Rule 36    binary_expression -> binary_expression LT binary_expression
Rule 37    binary_expression -> binary_expression LE binary_expression
Rule 38    binary_expression -> binary_expression HT binary_expression
Rule 39    binary_expression -> binary_expression HE binary_expression
Rule 40    binary_expression -> binary_expression EQUALS binary_expression
Rule 41    binary_expression -> binary_expression DIFF binary_expression
Rule 42    binary_expression -> binary_expression AND binary_expression
Rule 43    binary_expression -> binary_expression OR binary_expression
Rule 44    cast_expression -> unary_expression
Rule 45    cast_expression -> LPAREN type_specifier RPAREN cast_expression
Rule 46    unary_expression -> postfix_expression
Rule 47    unary_expression -> PLUSPLUS unary_expression
Rule 48    unary_expression -> MINUSMINUS unary_expression
Rule 49    unary_expression -> unary_operator cast_expression
Rule 50    postfix_expression -> primary_expression
Rule 51    postfix_expression -> postfix_expression LBRACKET expression RBRACKET
Rule 52    postfix_expression -> postfix_expression LPAREN RPAREN
Rule 53    postfix_expression -> postfix_expression LPAREN assignment_expression_list RPAREN
Rule 54    postfix_expression -> postfix_expression PLUSPLUS
Rule 55    postfix_expression -> postfix_expression MINUSMINUS
Rule 56    primary_expression -> identifier
Rule 57    primary_expression -> int_const
Rule 58    primary_expression -> float_const
Rule 59    primary_expression -> frase
Rule 60    primary_expression -> LPAREN expression RPAREN
Rule 61    compound_statement -> LBRACE RBRACE
Rule 62    compound_statement -> LBRACE declaration_list RBRACE
Rule 63    compound_statement -> LBRACE statement_list RBRACE
Rule 64    compound_statement -> LBRACE declaration_list statement_list RBRACE
Rule 65    assignment_expression_list -> assignment_expression
Rule 66    assignment_expression_list -> assignment_expression_list assignment_expression
Rule 67    assignment_expression -> binary_expression
Rule 68    assignment_expression -> unary_expression assignment_operator assignment_expression
Rule 69    expression -> assignment_expression
Rule 70    expression -> expression COMMA assignment_expression
Rule 71    assignment_operator -> EQ
Rule 72    assignment_operator -> ASSIGN_TIMES
Rule 73    assignment_operator -> ASSIGN_DIVIDE
Rule 74    assignment_operator -> ASSIGN_MOD
Rule 75    assignment_operator -> ASSIGN_PLUS
Rule 76    assignment_operator -> ASSIGN_MINUS
Rule 77    unary_operator -> ADDRESS
Rule 78    unary_operator -> TIMES
Rule 79    unary_operator -> PLUS
Rule 80    unary_operator -> MINUS
Rule 81    unary_operator -> NOT
Rule 82    parameter_list -> parameter_declaration
Rule 83    parameter_list -> parameter_list COMMA parameter_declaration
Rule 84    parameter_declaration -> type_specifier declarator
Rule 85    declaration -> type_specifier SEMI
Rule 86    declaration -> type_specifier init_declarator SEMI
Rule 87    init_declarator -> declarator
Rule 88    init_declarator -> declarator EQ initializer
Rule 89    initializer -> assignment_expression
Rule 90    initializer -> LBRACE initializer_list RBRACE
Rule 91    initializer -> LBRACE initializer_list COMMA RBRACE
Rule 92    initializer_list -> initializer
Rule 93    initializer_list -> initializer_list COMMA initializer
Rule 94    statement -> expression_statement
Rule 95    statement -> iteration_statement
Rule 96    statement -> compound_statement
Rule 97    statement -> jump_statement
Rule 98    statement -> assert_statement
Rule 99    statement -> print_statement
Rule 100   statement -> selection_statement
Rule 101   statement -> read_statement
Rule 102   expression_statement -> SEMI
Rule 103   expression_statement -> expression SEMI
Rule 104   selection_statement -> IF LPAREN expression RPAREN statement
Rule 105   selection_statement -> IF LPAREN expression RPAREN statement ELSE statement
Rule 106   iteration_statement -> WHILE LPAREN expression RPAREN statement
Rule 107   iteration_statement -> FOR LPAREN SEMI SEMI RPAREN statement
Rule 108   iteration_statement -> FOR LPAREN expression SEMI SEMI RPAREN statement
Rule 109   iteration_statement -> FOR LPAREN SEMI expression SEMI RPAREN statement
Rule 110   iteration_statement -> FOR LPAREN SEMI SEMI expression RPAREN statement
Rule 111   iteration_statement -> FOR LPAREN expression SEMI expression SEMI RPAREN statement
Rule 112   iteration_statement -> FOR LPAREN expression SEMI SEMI expression RPAREN statement
Rule 113   iteration_statement -> FOR LPAREN SEMI expression SEMI expression RPAREN statement
Rule 114   iteration_statement -> FOR LPAREN expression SEMI expression SEMI expression RPAREN statement
Rule 115   jump_statement -> BREAK
Rule 116   jump_statement -> RETURN
Rule 117   jump_statement -> RETURN expression
Rule 118   assert_statement -> ASSERT expression SEMI
Rule 119   print_statement -> PRINT LPAREN expression RPAREN SEMI
Rule 120   read_statement -> READ LPAREN declarator_list RPAREN SEMI
Rule 121   declarator_list -> declarator
Rule 122   declarator_list -> declarator_list declarator

Terminals, with rules where they appear

ADDRESS              : 77
AND                  : 42
ASSERT               : 118
ASSIGN_DIVIDE        : 73
ASSIGN_MINUS         : 76
ASSIGN_MOD           : 74
ASSIGN_PLUS          : 75
ASSIGN_TIMES         : 72
BREAK                : 115
CHAR                 : 15
COMMA                : 70 83 91 93
DIFF                 : 41
DIVIDE               : 32
ELSE                 : 105
EQ                   : 71 88
EQUALS               : 40
FLOAT                : 17
FLOAT_CONST          : 21
FOR                  : 107 108 109 110 111 112 113 114
HE                   : 39
HT                   : 38
ID                   : 18
IF                   : 104 105
INT                  : 16
INT_CONST            : 20
LBRACE               : 61 62 63 64 90 91
LBRACKET             : 24 25 51
LE                   : 37
LPAREN               : 23 26 27 28 45 52 53 60 104 105 106 107 108 109 110 111 112 113 114 119 120
LT                   : 36
MINUS                : 34 80
MINUSMINUS           : 48 55
MOD                  : 33
NOT                  : 81
OR                   : 43
PLUS                 : 35 79
PLUSPLUS             : 47 54
PRINT                : 119
RBRACE               : 61 62 63 64 90 91
RBRACKET             : 24 25 51
READ                 : 120
RETURN               : 116 117
RPAREN               : 23 26 27 28 45 52 53 60 104 105 106 107 108 109 110 111 112 113 114 119 120
SEMI                 : 85 86 102 103 107 107 108 108 109 109 110 110 111 111 112 112 113 113 114 114 118 119 120
STRING               : 19
TIMES                : 31 78
VOID                 : 14
WHILE                : 106
error                : 

Nonterminals, with rules where they appear

assert_statement     : 98
assignment_expression : 65 66 68 69 70 89
assignment_expression_list : 53 66
assignment_operator  : 68
binary_expression    : 29 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 41 42 42 43 43 67
cast_expression      : 30 45 49
compound_statement   : 6 7 8 9 96
constant_expression  : 25
declaration          : 5 10 11
declaration_list     : 7 9 11 62 64
declarator           : 6 7 8 9 23 24 25 26 27 28 84 87 88 121 122
declarator_list      : 120 122
expression           : 51 60 70 103 104 105 106 108 109 110 111 111 112 112 113 113 114 114 114 117 118 119
expression_statement : 94
float_const          : 58
frase                : 59
function_definition  : 4
global_declaration   : 2 3
global_declaration_list : 1 3
identifier           : 22 28 56
init_declarator      : 86
initializer          : 88 92 93
initializer_list     : 90 91 93
int_const            : 57
iteration_statement  : 95
jump_statement       : 97
parameter_declaration : 82 83
parameter_list       : 26 83
postfix_expression   : 46 51 52 53 54 55
primary_expression   : 50
print_statement      : 99
program              : 0
read_statement       : 101
selection_statement  : 100
statement            : 12 13 104 105 105 106 107 108 109 110 111 112 113 114
statement_list       : 13 63 64
type_specifier       : 8 9 45 84 85 86
unary_expression     : 44 47 48 68
unary_operator       : 49

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . global_declaration_list
    (2) global_declaration_list -> . global_declaration
    (3) global_declaration_list -> . global_declaration_list global_declaration
    (4) global_declaration -> . function_definition
    (5) global_declaration -> . declaration
    (6) function_definition -> . declarator compound_statement
    (7) function_definition -> . declarator declaration_list compound_statement
    (8) function_definition -> . type_specifier declarator compound_statement
    (9) function_definition -> . type_specifier declarator declaration_list compound_statement
    (85) declaration -> . type_specifier SEMI
    (86) declaration -> . type_specifier init_declarator SEMI
    (22) declarator -> . identifier
    (23) declarator -> . LPAREN declarator RPAREN
    (24) declarator -> . declarator RBRACKET LBRACKET
    (25) declarator -> . declarator RBRACKET constant_expression LBRACKET
    (26) declarator -> . declarator LPAREN parameter_list RPAREN
    (27) declarator -> . declarator LPAREN RPAREN
    (28) declarator -> . declarator LPAREN identifier RPAREN
    (14) type_specifier -> . VOID
    (15) type_specifier -> . CHAR
    (16) type_specifier -> . INT
    (17) type_specifier -> . FLOAT
    (18) identifier -> . ID

    LPAREN          shift and go to state 9
    VOID            shift and go to state 10
    CHAR            shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    ID              shift and go to state 14

    program                        shift and go to state 1
    global_declaration_list        shift and go to state 2
    global_declaration             shift and go to state 3
    function_definition            shift and go to state 4
    declaration                    shift and go to state 5
    declarator                     shift and go to state 6
    type_specifier                 shift and go to state 7
    identifier                     shift and go to state 8

state 1

    (0) S' -> program .



state 2

    (1) program -> global_declaration_list .
    (3) global_declaration_list -> global_declaration_list . global_declaration
    (4) global_declaration -> . function_definition
    (5) global_declaration -> . declaration
    (6) function_definition -> . declarator compound_statement
    (7) function_definition -> . declarator declaration_list compound_statement
    (8) function_definition -> . type_specifier declarator compound_statement
    (9) function_definition -> . type_specifier declarator declaration_list compound_statement
    (85) declaration -> . type_specifier SEMI
    (86) declaration -> . type_specifier init_declarator SEMI
    (22) declarator -> . identifier
    (23) declarator -> . LPAREN declarator RPAREN
    (24) declarator -> . declarator RBRACKET LBRACKET
    (25) declarator -> . declarator RBRACKET constant_expression LBRACKET
    (26) declarator -> . declarator LPAREN parameter_list RPAREN
    (27) declarator -> . declarator LPAREN RPAREN
    (28) declarator -> . declarator LPAREN identifier RPAREN
    (14) type_specifier -> . VOID
    (15) type_specifier -> . CHAR
    (16) type_specifier -> . INT
    (17) type_specifier -> . FLOAT
    (18) identifier -> . ID

    $end            reduce using rule 1 (program -> global_declaration_list .)
    LPAREN          shift and go to state 9
    VOID            shift and go to state 10
    CHAR            shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    ID              shift and go to state 14

    global_declaration             shift and go to state 15
    function_definition            shift and go to state 4
    declaration                    shift and go to state 5
    declarator                     shift and go to state 6
    type_specifier                 shift and go to state 7
    identifier                     shift and go to state 8

state 3

    (2) global_declaration_list -> global_declaration .

    LPAREN          reduce using rule 2 (global_declaration_list -> global_declaration .)
    VOID            reduce using rule 2 (global_declaration_list -> global_declaration .)
    CHAR            reduce using rule 2 (global_declaration_list -> global_declaration .)
    INT             reduce using rule 2 (global_declaration_list -> global_declaration .)
    FLOAT           reduce using rule 2 (global_declaration_list -> global_declaration .)
    ID              reduce using rule 2 (global_declaration_list -> global_declaration .)
    $end            reduce using rule 2 (global_declaration_list -> global_declaration .)


state 4

    (4) global_declaration -> function_definition .

    LPAREN          reduce using rule 4 (global_declaration -> function_definition .)
    VOID            reduce using rule 4 (global_declaration -> function_definition .)
    CHAR            reduce using rule 4 (global_declaration -> function_definition .)
    INT             reduce using rule 4 (global_declaration -> function_definition .)
    FLOAT           reduce using rule 4 (global_declaration -> function_definition .)
    ID              reduce using rule 4 (global_declaration -> function_definition .)
    $end            reduce using rule 4 (global_declaration -> function_definition .)


state 5

    (5) global_declaration -> declaration .

    LPAREN          reduce using rule 5 (global_declaration -> declaration .)
    VOID            reduce using rule 5 (global_declaration -> declaration .)
    CHAR            reduce using rule 5 (global_declaration -> declaration .)
    INT             reduce using rule 5 (global_declaration -> declaration .)
    FLOAT           reduce using rule 5 (global_declaration -> declaration .)
    ID              reduce using rule 5 (global_declaration -> declaration .)
    $end            reduce using rule 5 (global_declaration -> declaration .)


state 6

    (6) function_definition -> declarator . compound_statement
    (7) function_definition -> declarator . declaration_list compound_statement
    (24) declarator -> declarator . RBRACKET LBRACKET
    (25) declarator -> declarator . RBRACKET constant_expression LBRACKET
    (26) declarator -> declarator . LPAREN parameter_list RPAREN
    (27) declarator -> declarator . LPAREN RPAREN
    (28) declarator -> declarator . LPAREN identifier RPAREN
    (61) compound_statement -> . LBRACE RBRACE
    (62) compound_statement -> . LBRACE declaration_list RBRACE
    (63) compound_statement -> . LBRACE statement_list RBRACE
    (64) compound_statement -> . LBRACE declaration_list statement_list RBRACE
    (10) declaration_list -> . declaration
    (11) declaration_list -> . declaration_list declaration
    (85) declaration -> . type_specifier SEMI
    (86) declaration -> . type_specifier init_declarator SEMI
    (14) type_specifier -> . VOID
    (15) type_specifier -> . CHAR
    (16) type_specifier -> . INT
    (17) type_specifier -> . FLOAT

    RBRACKET        shift and go to state 18
    LPAREN          shift and go to state 19
    LBRACE          shift and go to state 20
    VOID            shift and go to state 10
    CHAR            shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13

    compound_statement             shift and go to state 16
    declaration_list               shift and go to state 17
    declaration                    shift and go to state 21
    type_specifier                 shift and go to state 22

state 7

    (8) function_definition -> type_specifier . declarator compound_statement
    (9) function_definition -> type_specifier . declarator declaration_list compound_statement
    (85) declaration -> type_specifier . SEMI
    (86) declaration -> type_specifier . init_declarator SEMI
    (22) declarator -> . identifier
    (23) declarator -> . LPAREN declarator RPAREN
    (24) declarator -> . declarator RBRACKET LBRACKET
    (25) declarator -> . declarator RBRACKET constant_expression LBRACKET
    (26) declarator -> . declarator LPAREN parameter_list RPAREN
    (27) declarator -> . declarator LPAREN RPAREN
    (28) declarator -> . declarator LPAREN identifier RPAREN
    (87) init_declarator -> . declarator
    (88) init_declarator -> . declarator EQ initializer
    (18) identifier -> . ID

    SEMI            shift and go to state 24
    LPAREN          shift and go to state 9
    ID              shift and go to state 14

    declarator                     shift and go to state 23
    init_declarator                shift and go to state 25
    identifier                     shift and go to state 8

state 8

    (22) declarator -> identifier .

    RBRACKET        reduce using rule 22 (declarator -> identifier .)
    LPAREN          reduce using rule 22 (declarator -> identifier .)
    LBRACE          reduce using rule 22 (declarator -> identifier .)
    VOID            reduce using rule 22 (declarator -> identifier .)
    CHAR            reduce using rule 22 (declarator -> identifier .)
    INT             reduce using rule 22 (declarator -> identifier .)
    FLOAT           reduce using rule 22 (declarator -> identifier .)
    EQ              reduce using rule 22 (declarator -> identifier .)
    SEMI            reduce using rule 22 (declarator -> identifier .)
    RPAREN          reduce using rule 22 (declarator -> identifier .)
    COMMA           reduce using rule 22 (declarator -> identifier .)
    ID              reduce using rule 22 (declarator -> identifier .)


state 9

    (23) declarator -> LPAREN . declarator RPAREN
    (22) declarator -> . identifier
    (23) declarator -> . LPAREN declarator RPAREN
    (24) declarator -> . declarator RBRACKET LBRACKET
    (25) declarator -> . declarator RBRACKET constant_expression LBRACKET
    (26) declarator -> . declarator LPAREN parameter_list RPAREN
    (27) declarator -> . declarator LPAREN RPAREN
    (28) declarator -> . declarator LPAREN identifier RPAREN
    (18) identifier -> . ID

    LPAREN          shift and go to state 9
    ID              shift and go to state 14

    declarator                     shift and go to state 26
    identifier                     shift and go to state 8

state 10

    (14) type_specifier -> VOID .

    SEMI            reduce using rule 14 (type_specifier -> VOID .)
    LPAREN          reduce using rule 14 (type_specifier -> VOID .)
    ID              reduce using rule 14 (type_specifier -> VOID .)
    RPAREN          reduce using rule 14 (type_specifier -> VOID .)


state 11

    (15) type_specifier -> CHAR .

    SEMI            reduce using rule 15 (type_specifier -> CHAR .)
    LPAREN          reduce using rule 15 (type_specifier -> CHAR .)
    ID              reduce using rule 15 (type_specifier -> CHAR .)
    RPAREN          reduce using rule 15 (type_specifier -> CHAR .)


state 12

    (16) type_specifier -> INT .

    SEMI            reduce using rule 16 (type_specifier -> INT .)
    LPAREN          reduce using rule 16 (type_specifier -> INT .)
    ID              reduce using rule 16 (type_specifier -> INT .)
    RPAREN          reduce using rule 16 (type_specifier -> INT .)


state 13

    (17) type_specifier -> FLOAT .

    SEMI            reduce using rule 17 (type_specifier -> FLOAT .)
    LPAREN          reduce using rule 17 (type_specifier -> FLOAT .)
    ID              reduce using rule 17 (type_specifier -> FLOAT .)
    RPAREN          reduce using rule 17 (type_specifier -> FLOAT .)


state 14

    (18) identifier -> ID .

    RBRACKET        reduce using rule 18 (identifier -> ID .)
    LPAREN          reduce using rule 18 (identifier -> ID .)
    LBRACE          reduce using rule 18 (identifier -> ID .)
    VOID            reduce using rule 18 (identifier -> ID .)
    CHAR            reduce using rule 18 (identifier -> ID .)
    INT             reduce using rule 18 (identifier -> ID .)
    FLOAT           reduce using rule 18 (identifier -> ID .)
    EQ              reduce using rule 18 (identifier -> ID .)
    SEMI            reduce using rule 18 (identifier -> ID .)
    RPAREN          reduce using rule 18 (identifier -> ID .)
    LBRACKET        reduce using rule 18 (identifier -> ID .)
    PLUSPLUS        reduce using rule 18 (identifier -> ID .)
    MINUSMINUS      reduce using rule 18 (identifier -> ID .)
    TIMES           reduce using rule 18 (identifier -> ID .)
    DIVIDE          reduce using rule 18 (identifier -> ID .)
    MOD             reduce using rule 18 (identifier -> ID .)
    MINUS           reduce using rule 18 (identifier -> ID .)
    PLUS            reduce using rule 18 (identifier -> ID .)
    LT              reduce using rule 18 (identifier -> ID .)
    LE              reduce using rule 18 (identifier -> ID .)
    HT              reduce using rule 18 (identifier -> ID .)
    HE              reduce using rule 18 (identifier -> ID .)
    EQUALS          reduce using rule 18 (identifier -> ID .)
    DIFF            reduce using rule 18 (identifier -> ID .)
    AND             reduce using rule 18 (identifier -> ID .)
    OR              reduce using rule 18 (identifier -> ID .)
    ASSIGN_TIMES    reduce using rule 18 (identifier -> ID .)
    ASSIGN_DIVIDE   reduce using rule 18 (identifier -> ID .)
    ASSIGN_MOD      reduce using rule 18 (identifier -> ID .)
    ASSIGN_PLUS     reduce using rule 18 (identifier -> ID .)
    ASSIGN_MINUS    reduce using rule 18 (identifier -> ID .)
    COMMA           reduce using rule 18 (identifier -> ID .)
    RBRACE          reduce using rule 18 (identifier -> ID .)
    WHILE           reduce using rule 18 (identifier -> ID .)
    FOR             reduce using rule 18 (identifier -> ID .)
    BREAK           reduce using rule 18 (identifier -> ID .)
    RETURN          reduce using rule 18 (identifier -> ID .)
    ASSERT          reduce using rule 18 (identifier -> ID .)
    PRINT           reduce using rule 18 (identifier -> ID .)
    IF              reduce using rule 18 (identifier -> ID .)
    READ            reduce using rule 18 (identifier -> ID .)
    ADDRESS         reduce using rule 18 (identifier -> ID .)
    NOT             reduce using rule 18 (identifier -> ID .)
    ID              reduce using rule 18 (identifier -> ID .)
    INT_CONST       reduce using rule 18 (identifier -> ID .)
    FLOAT_CONST     reduce using rule 18 (identifier -> ID .)
    STRING          reduce using rule 18 (identifier -> ID .)
    ELSE            reduce using rule 18 (identifier -> ID .)


state 15

    (3) global_declaration_list -> global_declaration_list global_declaration .

    LPAREN          reduce using rule 3 (global_declaration_list -> global_declaration_list global_declaration .)
    VOID            reduce using rule 3 (global_declaration_list -> global_declaration_list global_declaration .)
    CHAR            reduce using rule 3 (global_declaration_list -> global_declaration_list global_declaration .)
    INT             reduce using rule 3 (global_declaration_list -> global_declaration_list global_declaration .)
    FLOAT           reduce using rule 3 (global_declaration_list -> global_declaration_list global_declaration .)
    ID              reduce using rule 3 (global_declaration_list -> global_declaration_list global_declaration .)
    $end            reduce using rule 3 (global_declaration_list -> global_declaration_list global_declaration .)


state 16

    (6) function_definition -> declarator compound_statement .

    LPAREN          reduce using rule 6 (function_definition -> declarator compound_statement .)
    VOID            reduce using rule 6 (function_definition -> declarator compound_statement .)
    CHAR            reduce using rule 6 (function_definition -> declarator compound_statement .)
    INT             reduce using rule 6 (function_definition -> declarator compound_statement .)
    FLOAT           reduce using rule 6 (function_definition -> declarator compound_statement .)
    ID              reduce using rule 6 (function_definition -> declarator compound_statement .)
    $end            reduce using rule 6 (function_definition -> declarator compound_statement .)


state 17

    (7) function_definition -> declarator declaration_list . compound_statement
    (11) declaration_list -> declaration_list . declaration
    (61) compound_statement -> . LBRACE RBRACE
    (62) compound_statement -> . LBRACE declaration_list RBRACE
    (63) compound_statement -> . LBRACE statement_list RBRACE
    (64) compound_statement -> . LBRACE declaration_list statement_list RBRACE
    (85) declaration -> . type_specifier SEMI
    (86) declaration -> . type_specifier init_declarator SEMI
    (14) type_specifier -> . VOID
    (15) type_specifier -> . CHAR
    (16) type_specifier -> . INT
    (17) type_specifier -> . FLOAT

    LBRACE          shift and go to state 20
    VOID            shift and go to state 10
    CHAR            shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13

    compound_statement             shift and go to state 27
    declaration                    shift and go to state 28
    type_specifier                 shift and go to state 22

state 18

    (24) declarator -> declarator RBRACKET . LBRACKET
    (25) declarator -> declarator RBRACKET . constant_expression LBRACKET
    (29) constant_expression -> . binary_expression
    (30) binary_expression -> . cast_expression
    (31) binary_expression -> . binary_expression TIMES binary_expression
    (32) binary_expression -> . binary_expression DIVIDE binary_expression
    (33) binary_expression -> . binary_expression MOD binary_expression
    (34) binary_expression -> . binary_expression MINUS binary_expression
    (35) binary_expression -> . binary_expression PLUS binary_expression
    (36) binary_expression -> . binary_expression LT binary_expression
    (37) binary_expression -> . binary_expression LE binary_expression
    (38) binary_expression -> . binary_expression HT binary_expression
    (39) binary_expression -> . binary_expression HE binary_expression
    (40) binary_expression -> . binary_expression EQUALS binary_expression
    (41) binary_expression -> . binary_expression DIFF binary_expression
    (42) binary_expression -> . binary_expression AND binary_expression
    (43) binary_expression -> . binary_expression OR binary_expression
    (44) cast_expression -> . unary_expression
    (45) cast_expression -> . LPAREN type_specifier RPAREN cast_expression
    (46) unary_expression -> . postfix_expression
    (47) unary_expression -> . PLUSPLUS unary_expression
    (48) unary_expression -> . MINUSMINUS unary_expression
    (49) unary_expression -> . unary_operator cast_expression
    (50) postfix_expression -> . primary_expression
    (51) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (52) postfix_expression -> . postfix_expression LPAREN RPAREN
    (53) postfix_expression -> . postfix_expression LPAREN assignment_expression_list RPAREN
    (54) postfix_expression -> . postfix_expression PLUSPLUS
    (55) postfix_expression -> . postfix_expression MINUSMINUS
    (77) unary_operator -> . ADDRESS
    (78) unary_operator -> . TIMES
    (79) unary_operator -> . PLUS
    (80) unary_operator -> . MINUS
    (81) unary_operator -> . NOT
    (56) primary_expression -> . identifier
    (57) primary_expression -> . int_const
    (58) primary_expression -> . float_const
    (59) primary_expression -> . frase
    (60) primary_expression -> . LPAREN expression RPAREN
    (18) identifier -> . ID
    (20) int_const -> . INT_CONST
    (21) float_const -> . FLOAT_CONST
    (19) frase -> . STRING

    LBRACKET        shift and go to state 29
    LPAREN          shift and go to state 37
    PLUSPLUS        shift and go to state 39
    MINUSMINUS      shift and go to state 40
    ADDRESS         shift and go to state 43
    TIMES           shift and go to state 33
    PLUS            shift and go to state 35
    MINUS           shift and go to state 34
    NOT             shift and go to state 44
    ID              shift and go to state 14
    INT_CONST       shift and go to state 49
    FLOAT_CONST     shift and go to state 50
    STRING          shift and go to state 51

    constant_expression            shift and go to state 30
    binary_expression              shift and go to state 31
    cast_expression                shift and go to state 32
    unary_expression               shift and go to state 36
    postfix_expression             shift and go to state 38
    unary_operator                 shift and go to state 41
    primary_expression             shift and go to state 42
    identifier                     shift and go to state 45
    int_const                      shift and go to state 46
    float_const                    shift and go to state 47
    frase                          shift and go to state 48

state 19

    (26) declarator -> declarator LPAREN . parameter_list RPAREN
    (27) declarator -> declarator LPAREN . RPAREN
    (28) declarator -> declarator LPAREN . identifier RPAREN
    (82) parameter_list -> . parameter_declaration
    (83) parameter_list -> . parameter_list COMMA parameter_declaration
    (18) identifier -> . ID
    (84) parameter_declaration -> . type_specifier declarator
    (14) type_specifier -> . VOID
    (15) type_specifier -> . CHAR
    (16) type_specifier -> . INT
    (17) type_specifier -> . FLOAT

    RPAREN          shift and go to state 53
    ID              shift and go to state 14
    VOID            shift and go to state 10
    CHAR            shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13

    parameter_list                 shift and go to state 52
    identifier                     shift and go to state 54
    parameter_declaration          shift and go to state 55
    type_specifier                 shift and go to state 56

state 20

    (61) compound_statement -> LBRACE . RBRACE
    (62) compound_statement -> LBRACE . declaration_list RBRACE
    (63) compound_statement -> LBRACE . statement_list RBRACE
    (64) compound_statement -> LBRACE . declaration_list statement_list RBRACE
    (10) declaration_list -> . declaration
    (11) declaration_list -> . declaration_list declaration
    (12) statement_list -> . statement
    (13) statement_list -> . statement_list statement
    (85) declaration -> . type_specifier SEMI
    (86) declaration -> . type_specifier init_declarator SEMI
    (94) statement -> . expression_statement
    (95) statement -> . iteration_statement
    (96) statement -> . compound_statement
    (97) statement -> . jump_statement
    (98) statement -> . assert_statement
    (99) statement -> . print_statement
    (100) statement -> . selection_statement
    (101) statement -> . read_statement
    (14) type_specifier -> . VOID
    (15) type_specifier -> . CHAR
    (16) type_specifier -> . INT
    (17) type_specifier -> . FLOAT
    (102) expression_statement -> . SEMI
    (103) expression_statement -> . expression SEMI
    (106) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (107) iteration_statement -> . FOR LPAREN SEMI SEMI RPAREN statement
    (108) iteration_statement -> . FOR LPAREN expression SEMI SEMI RPAREN statement
    (109) iteration_statement -> . FOR LPAREN SEMI expression SEMI RPAREN statement
    (110) iteration_statement -> . FOR LPAREN SEMI SEMI expression RPAREN statement
    (111) iteration_statement -> . FOR LPAREN expression SEMI expression SEMI RPAREN statement
    (112) iteration_statement -> . FOR LPAREN expression SEMI SEMI expression RPAREN statement
    (113) iteration_statement -> . FOR LPAREN SEMI expression SEMI expression RPAREN statement
    (114) iteration_statement -> . FOR LPAREN expression SEMI expression SEMI expression RPAREN statement
    (61) compound_statement -> . LBRACE RBRACE
    (62) compound_statement -> . LBRACE declaration_list RBRACE
    (63) compound_statement -> . LBRACE statement_list RBRACE
    (64) compound_statement -> . LBRACE declaration_list statement_list RBRACE
    (115) jump_statement -> . BREAK
    (116) jump_statement -> . RETURN
    (117) jump_statement -> . RETURN expression
    (118) assert_statement -> . ASSERT expression SEMI
    (119) print_statement -> . PRINT LPAREN expression RPAREN SEMI
    (104) selection_statement -> . IF LPAREN expression RPAREN statement
    (105) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (120) read_statement -> . READ LPAREN declarator_list RPAREN SEMI
    (69) expression -> . assignment_expression
    (70) expression -> . expression COMMA assignment_expression
    (67) assignment_expression -> . binary_expression
    (68) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (30) binary_expression -> . cast_expression
    (31) binary_expression -> . binary_expression TIMES binary_expression
    (32) binary_expression -> . binary_expression DIVIDE binary_expression
    (33) binary_expression -> . binary_expression MOD binary_expression
    (34) binary_expression -> . binary_expression MINUS binary_expression
    (35) binary_expression -> . binary_expression PLUS binary_expression
    (36) binary_expression -> . binary_expression LT binary_expression
    (37) binary_expression -> . binary_expression LE binary_expression
    (38) binary_expression -> . binary_expression HT binary_expression
    (39) binary_expression -> . binary_expression HE binary_expression
    (40) binary_expression -> . binary_expression EQUALS binary_expression
    (41) binary_expression -> . binary_expression DIFF binary_expression
    (42) binary_expression -> . binary_expression AND binary_expression
    (43) binary_expression -> . binary_expression OR binary_expression
    (46) unary_expression -> . postfix_expression
    (47) unary_expression -> . PLUSPLUS unary_expression
    (48) unary_expression -> . MINUSMINUS unary_expression
    (49) unary_expression -> . unary_operator cast_expression
    (44) cast_expression -> . unary_expression
    (45) cast_expression -> . LPAREN type_specifier RPAREN cast_expression
    (50) postfix_expression -> . primary_expression
    (51) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (52) postfix_expression -> . postfix_expression LPAREN RPAREN
    (53) postfix_expression -> . postfix_expression LPAREN assignment_expression_list RPAREN
    (54) postfix_expression -> . postfix_expression PLUSPLUS
    (55) postfix_expression -> . postfix_expression MINUSMINUS
    (77) unary_operator -> . ADDRESS
    (78) unary_operator -> . TIMES
    (79) unary_operator -> . PLUS
    (80) unary_operator -> . MINUS
    (81) unary_operator -> . NOT
    (56) primary_expression -> . identifier
    (57) primary_expression -> . int_const
    (58) primary_expression -> . float_const
    (59) primary_expression -> . frase
    (60) primary_expression -> . LPAREN expression RPAREN
    (18) identifier -> . ID
    (20) int_const -> . INT_CONST
    (21) float_const -> . FLOAT_CONST
    (19) frase -> . STRING

    RBRACE          shift and go to state 57
    VOID            shift and go to state 10
    CHAR            shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    SEMI            shift and go to state 61
    WHILE           shift and go to state 71
    FOR             shift and go to state 72
    LBRACE          shift and go to state 20
    BREAK           shift and go to state 73
    RETURN          shift and go to state 74
    ASSERT          shift and go to state 75
    PRINT           shift and go to state 76
    IF              shift and go to state 77
    READ            shift and go to state 78
    PLUSPLUS        shift and go to state 39
    MINUSMINUS      shift and go to state 40
    LPAREN          shift and go to state 37
    ADDRESS         shift and go to state 43
    TIMES           shift and go to state 33
    PLUS            shift and go to state 35
    MINUS           shift and go to state 34
    NOT             shift and go to state 44
    ID              shift and go to state 14
    INT_CONST       shift and go to state 49
    FLOAT_CONST     shift and go to state 50
    STRING          shift and go to state 51

    declaration_list               shift and go to state 58
    statement_list                 shift and go to state 59
    declaration                    shift and go to state 21
    statement                      shift and go to state 60
    type_specifier                 shift and go to state 22
    expression_statement           shift and go to state 62
    iteration_statement            shift and go to state 63
    compound_statement             shift and go to state 64
    jump_statement                 shift and go to state 65
    assert_statement               shift and go to state 66
    print_statement                shift and go to state 67
    selection_statement            shift and go to state 68
    read_statement                 shift and go to state 69
    expression                     shift and go to state 70
    assignment_expression          shift and go to state 79
    binary_expression              shift and go to state 80
    unary_expression               shift and go to state 81
    cast_expression                shift and go to state 32
    postfix_expression             shift and go to state 38
    unary_operator                 shift and go to state 41
    primary_expression             shift and go to state 42
    identifier                     shift and go to state 45
    int_const                      shift and go to state 46
    float_const                    shift and go to state 47
    frase                          shift and go to state 48

state 21

    (10) declaration_list -> declaration .

    LBRACE          reduce using rule 10 (declaration_list -> declaration .)
    VOID            reduce using rule 10 (declaration_list -> declaration .)
    CHAR            reduce using rule 10 (declaration_list -> declaration .)
    INT             reduce using rule 10 (declaration_list -> declaration .)
    FLOAT           reduce using rule 10 (declaration_list -> declaration .)
    RBRACE          reduce using rule 10 (declaration_list -> declaration .)
    SEMI            reduce using rule 10 (declaration_list -> declaration .)
    WHILE           reduce using rule 10 (declaration_list -> declaration .)
    FOR             reduce using rule 10 (declaration_list -> declaration .)
    BREAK           reduce using rule 10 (declaration_list -> declaration .)
    RETURN          reduce using rule 10 (declaration_list -> declaration .)
    ASSERT          reduce using rule 10 (declaration_list -> declaration .)
    PRINT           reduce using rule 10 (declaration_list -> declaration .)
    IF              reduce using rule 10 (declaration_list -> declaration .)
    READ            reduce using rule 10 (declaration_list -> declaration .)
    PLUSPLUS        reduce using rule 10 (declaration_list -> declaration .)
    MINUSMINUS      reduce using rule 10 (declaration_list -> declaration .)
    LPAREN          reduce using rule 10 (declaration_list -> declaration .)
    ADDRESS         reduce using rule 10 (declaration_list -> declaration .)
    TIMES           reduce using rule 10 (declaration_list -> declaration .)
    PLUS            reduce using rule 10 (declaration_list -> declaration .)
    MINUS           reduce using rule 10 (declaration_list -> declaration .)
    NOT             reduce using rule 10 (declaration_list -> declaration .)
    ID              reduce using rule 10 (declaration_list -> declaration .)
    INT_CONST       reduce using rule 10 (declaration_list -> declaration .)
    FLOAT_CONST     reduce using rule 10 (declaration_list -> declaration .)
    STRING          reduce using rule 10 (declaration_list -> declaration .)


state 22

    (85) declaration -> type_specifier . SEMI
    (86) declaration -> type_specifier . init_declarator SEMI
    (87) init_declarator -> . declarator
    (88) init_declarator -> . declarator EQ initializer
    (22) declarator -> . identifier
    (23) declarator -> . LPAREN declarator RPAREN
    (24) declarator -> . declarator RBRACKET LBRACKET
    (25) declarator -> . declarator RBRACKET constant_expression LBRACKET
    (26) declarator -> . declarator LPAREN parameter_list RPAREN
    (27) declarator -> . declarator LPAREN RPAREN
    (28) declarator -> . declarator LPAREN identifier RPAREN
    (18) identifier -> . ID

    SEMI            shift and go to state 24
    LPAREN          shift and go to state 9
    ID              shift and go to state 14

    init_declarator                shift and go to state 25
    declarator                     shift and go to state 82
    identifier                     shift and go to state 8

state 23

    (8) function_definition -> type_specifier declarator . compound_statement
    (9) function_definition -> type_specifier declarator . declaration_list compound_statement
    (24) declarator -> declarator . RBRACKET LBRACKET
    (25) declarator -> declarator . RBRACKET constant_expression LBRACKET
    (26) declarator -> declarator . LPAREN parameter_list RPAREN
    (27) declarator -> declarator . LPAREN RPAREN
    (28) declarator -> declarator . LPAREN identifier RPAREN
    (87) init_declarator -> declarator .
    (88) init_declarator -> declarator . EQ initializer
    (61) compound_statement -> . LBRACE RBRACE
    (62) compound_statement -> . LBRACE declaration_list RBRACE
    (63) compound_statement -> . LBRACE statement_list RBRACE
    (64) compound_statement -> . LBRACE declaration_list statement_list RBRACE
    (10) declaration_list -> . declaration
    (11) declaration_list -> . declaration_list declaration
    (85) declaration -> . type_specifier SEMI
    (86) declaration -> . type_specifier init_declarator SEMI
    (14) type_specifier -> . VOID
    (15) type_specifier -> . CHAR
    (16) type_specifier -> . INT
    (17) type_specifier -> . FLOAT

    RBRACKET        shift and go to state 18
    LPAREN          shift and go to state 19
    SEMI            reduce using rule 87 (init_declarator -> declarator .)
    EQ              shift and go to state 85
    LBRACE          shift and go to state 20
    VOID            shift and go to state 10
    CHAR            shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13

    type_specifier                 shift and go to state 22
    compound_statement             shift and go to state 83
    declaration_list               shift and go to state 84
    declaration                    shift and go to state 21

state 24

    (85) declaration -> type_specifier SEMI .

    LPAREN          reduce using rule 85 (declaration -> type_specifier SEMI .)
    VOID            reduce using rule 85 (declaration -> type_specifier SEMI .)
    CHAR            reduce using rule 85 (declaration -> type_specifier SEMI .)
    INT             reduce using rule 85 (declaration -> type_specifier SEMI .)
    FLOAT           reduce using rule 85 (declaration -> type_specifier SEMI .)
    ID              reduce using rule 85 (declaration -> type_specifier SEMI .)
    $end            reduce using rule 85 (declaration -> type_specifier SEMI .)
    LBRACE          reduce using rule 85 (declaration -> type_specifier SEMI .)
    RBRACE          reduce using rule 85 (declaration -> type_specifier SEMI .)
    SEMI            reduce using rule 85 (declaration -> type_specifier SEMI .)
    WHILE           reduce using rule 85 (declaration -> type_specifier SEMI .)
    FOR             reduce using rule 85 (declaration -> type_specifier SEMI .)
    BREAK           reduce using rule 85 (declaration -> type_specifier SEMI .)
    RETURN          reduce using rule 85 (declaration -> type_specifier SEMI .)
    ASSERT          reduce using rule 85 (declaration -> type_specifier SEMI .)
    PRINT           reduce using rule 85 (declaration -> type_specifier SEMI .)
    IF              reduce using rule 85 (declaration -> type_specifier SEMI .)
    READ            reduce using rule 85 (declaration -> type_specifier SEMI .)
    PLUSPLUS        reduce using rule 85 (declaration -> type_specifier SEMI .)
    MINUSMINUS      reduce using rule 85 (declaration -> type_specifier SEMI .)
    ADDRESS         reduce using rule 85 (declaration -> type_specifier SEMI .)
    TIMES           reduce using rule 85 (declaration -> type_specifier SEMI .)
    PLUS            reduce using rule 85 (declaration -> type_specifier SEMI .)
    MINUS           reduce using rule 85 (declaration -> type_specifier SEMI .)
    NOT             reduce using rule 85 (declaration -> type_specifier SEMI .)
    INT_CONST       reduce using rule 85 (declaration -> type_specifier SEMI .)
    FLOAT_CONST     reduce using rule 85 (declaration -> type_specifier SEMI .)
    STRING          reduce using rule 85 (declaration -> type_specifier SEMI .)


state 25

    (86) declaration -> type_specifier init_declarator . SEMI

    SEMI            shift and go to state 86


state 26

    (23) declarator -> LPAREN declarator . RPAREN
    (24) declarator -> declarator . RBRACKET LBRACKET
    (25) declarator -> declarator . RBRACKET constant_expression LBRACKET
    (26) declarator -> declarator . LPAREN parameter_list RPAREN
    (27) declarator -> declarator . LPAREN RPAREN
    (28) declarator -> declarator . LPAREN identifier RPAREN

    RPAREN          shift and go to state 87
    RBRACKET        shift and go to state 18
    LPAREN          shift and go to state 19


state 27

    (7) function_definition -> declarator declaration_list compound_statement .

    LPAREN          reduce using rule 7 (function_definition -> declarator declaration_list compound_statement .)
    VOID            reduce using rule 7 (function_definition -> declarator declaration_list compound_statement .)
    CHAR            reduce using rule 7 (function_definition -> declarator declaration_list compound_statement .)
    INT             reduce using rule 7 (function_definition -> declarator declaration_list compound_statement .)
    FLOAT           reduce using rule 7 (function_definition -> declarator declaration_list compound_statement .)
    ID              reduce using rule 7 (function_definition -> declarator declaration_list compound_statement .)
    $end            reduce using rule 7 (function_definition -> declarator declaration_list compound_statement .)


state 28

    (11) declaration_list -> declaration_list declaration .

    LBRACE          reduce using rule 11 (declaration_list -> declaration_list declaration .)
    VOID            reduce using rule 11 (declaration_list -> declaration_list declaration .)
    CHAR            reduce using rule 11 (declaration_list -> declaration_list declaration .)
    INT             reduce using rule 11 (declaration_list -> declaration_list declaration .)
    FLOAT           reduce using rule 11 (declaration_list -> declaration_list declaration .)
    RBRACE          reduce using rule 11 (declaration_list -> declaration_list declaration .)
    SEMI            reduce using rule 11 (declaration_list -> declaration_list declaration .)
    WHILE           reduce using rule 11 (declaration_list -> declaration_list declaration .)
    FOR             reduce using rule 11 (declaration_list -> declaration_list declaration .)
    BREAK           reduce using rule 11 (declaration_list -> declaration_list declaration .)
    RETURN          reduce using rule 11 (declaration_list -> declaration_list declaration .)
    ASSERT          reduce using rule 11 (declaration_list -> declaration_list declaration .)
    PRINT           reduce using rule 11 (declaration_list -> declaration_list declaration .)
    IF              reduce using rule 11 (declaration_list -> declaration_list declaration .)
    READ            reduce using rule 11 (declaration_list -> declaration_list declaration .)
    PLUSPLUS        reduce using rule 11 (declaration_list -> declaration_list declaration .)
    MINUSMINUS      reduce using rule 11 (declaration_list -> declaration_list declaration .)
    LPAREN          reduce using rule 11 (declaration_list -> declaration_list declaration .)
    ADDRESS         reduce using rule 11 (declaration_list -> declaration_list declaration .)
    TIMES           reduce using rule 11 (declaration_list -> declaration_list declaration .)
    PLUS            reduce using rule 11 (declaration_list -> declaration_list declaration .)
    MINUS           reduce using rule 11 (declaration_list -> declaration_list declaration .)
    NOT             reduce using rule 11 (declaration_list -> declaration_list declaration .)
    ID              reduce using rule 11 (declaration_list -> declaration_list declaration .)
    INT_CONST       reduce using rule 11 (declaration_list -> declaration_list declaration .)
    FLOAT_CONST     reduce using rule 11 (declaration_list -> declaration_list declaration .)
    STRING          reduce using rule 11 (declaration_list -> declaration_list declaration .)


state 29

    (24) declarator -> declarator RBRACKET LBRACKET .

    RBRACKET        reduce using rule 24 (declarator -> declarator RBRACKET LBRACKET .)
    LPAREN          reduce using rule 24 (declarator -> declarator RBRACKET LBRACKET .)
    LBRACE          reduce using rule 24 (declarator -> declarator RBRACKET LBRACKET .)
    VOID            reduce using rule 24 (declarator -> declarator RBRACKET LBRACKET .)
    CHAR            reduce using rule 24 (declarator -> declarator RBRACKET LBRACKET .)
    INT             reduce using rule 24 (declarator -> declarator RBRACKET LBRACKET .)
    FLOAT           reduce using rule 24 (declarator -> declarator RBRACKET LBRACKET .)
    EQ              reduce using rule 24 (declarator -> declarator RBRACKET LBRACKET .)
    SEMI            reduce using rule 24 (declarator -> declarator RBRACKET LBRACKET .)
    RPAREN          reduce using rule 24 (declarator -> declarator RBRACKET LBRACKET .)
    COMMA           reduce using rule 24 (declarator -> declarator RBRACKET LBRACKET .)
    ID              reduce using rule 24 (declarator -> declarator RBRACKET LBRACKET .)


state 30

    (25) declarator -> declarator RBRACKET constant_expression . LBRACKET

    LBRACKET        shift and go to state 88


state 31

    (29) constant_expression -> binary_expression .
    (31) binary_expression -> binary_expression . TIMES binary_expression
    (32) binary_expression -> binary_expression . DIVIDE binary_expression
    (33) binary_expression -> binary_expression . MOD binary_expression
    (34) binary_expression -> binary_expression . MINUS binary_expression
    (35) binary_expression -> binary_expression . PLUS binary_expression
    (36) binary_expression -> binary_expression . LT binary_expression
    (37) binary_expression -> binary_expression . LE binary_expression
    (38) binary_expression -> binary_expression . HT binary_expression
    (39) binary_expression -> binary_expression . HE binary_expression
    (40) binary_expression -> binary_expression . EQUALS binary_expression
    (41) binary_expression -> binary_expression . DIFF binary_expression
    (42) binary_expression -> binary_expression . AND binary_expression
    (43) binary_expression -> binary_expression . OR binary_expression

    LBRACKET        reduce using rule 29 (constant_expression -> binary_expression .)
    TIMES           shift and go to state 89
    DIVIDE          shift and go to state 90
    MOD             shift and go to state 91
    MINUS           shift and go to state 92
    PLUS            shift and go to state 93
    LT              shift and go to state 94
    LE              shift and go to state 95
    HT              shift and go to state 96
    HE              shift and go to state 97
    EQUALS          shift and go to state 98
    DIFF            shift and go to state 99
    AND             shift and go to state 100
    OR              shift and go to state 101


state 32

    (30) binary_expression -> cast_expression .

    TIMES           reduce using rule 30 (binary_expression -> cast_expression .)
    DIVIDE          reduce using rule 30 (binary_expression -> cast_expression .)
    MOD             reduce using rule 30 (binary_expression -> cast_expression .)
    MINUS           reduce using rule 30 (binary_expression -> cast_expression .)
    PLUS            reduce using rule 30 (binary_expression -> cast_expression .)
    LT              reduce using rule 30 (binary_expression -> cast_expression .)
    LE              reduce using rule 30 (binary_expression -> cast_expression .)
    HT              reduce using rule 30 (binary_expression -> cast_expression .)
    HE              reduce using rule 30 (binary_expression -> cast_expression .)
    EQUALS          reduce using rule 30 (binary_expression -> cast_expression .)
    DIFF            reduce using rule 30 (binary_expression -> cast_expression .)
    AND             reduce using rule 30 (binary_expression -> cast_expression .)
    OR              reduce using rule 30 (binary_expression -> cast_expression .)
    LBRACKET        reduce using rule 30 (binary_expression -> cast_expression .)
    SEMI            reduce using rule 30 (binary_expression -> cast_expression .)
    COMMA           reduce using rule 30 (binary_expression -> cast_expression .)
    RPAREN          reduce using rule 30 (binary_expression -> cast_expression .)
    RBRACE          reduce using rule 30 (binary_expression -> cast_expression .)
    WHILE           reduce using rule 30 (binary_expression -> cast_expression .)
    FOR             reduce using rule 30 (binary_expression -> cast_expression .)
    LBRACE          reduce using rule 30 (binary_expression -> cast_expression .)
    BREAK           reduce using rule 30 (binary_expression -> cast_expression .)
    RETURN          reduce using rule 30 (binary_expression -> cast_expression .)
    ASSERT          reduce using rule 30 (binary_expression -> cast_expression .)
    PRINT           reduce using rule 30 (binary_expression -> cast_expression .)
    IF              reduce using rule 30 (binary_expression -> cast_expression .)
    READ            reduce using rule 30 (binary_expression -> cast_expression .)
    PLUSPLUS        reduce using rule 30 (binary_expression -> cast_expression .)
    MINUSMINUS      reduce using rule 30 (binary_expression -> cast_expression .)
    LPAREN          reduce using rule 30 (binary_expression -> cast_expression .)
    ADDRESS         reduce using rule 30 (binary_expression -> cast_expression .)
    NOT             reduce using rule 30 (binary_expression -> cast_expression .)
    ID              reduce using rule 30 (binary_expression -> cast_expression .)
    INT_CONST       reduce using rule 30 (binary_expression -> cast_expression .)
    FLOAT_CONST     reduce using rule 30 (binary_expression -> cast_expression .)
    STRING          reduce using rule 30 (binary_expression -> cast_expression .)
    ELSE            reduce using rule 30 (binary_expression -> cast_expression .)
    RBRACKET        reduce using rule 30 (binary_expression -> cast_expression .)


state 33

    (78) unary_operator -> TIMES .

    LPAREN          reduce using rule 78 (unary_operator -> TIMES .)
    PLUSPLUS        reduce using rule 78 (unary_operator -> TIMES .)
    MINUSMINUS      reduce using rule 78 (unary_operator -> TIMES .)
    ADDRESS         reduce using rule 78 (unary_operator -> TIMES .)
    TIMES           reduce using rule 78 (unary_operator -> TIMES .)
    PLUS            reduce using rule 78 (unary_operator -> TIMES .)
    MINUS           reduce using rule 78 (unary_operator -> TIMES .)
    NOT             reduce using rule 78 (unary_operator -> TIMES .)
    ID              reduce using rule 78 (unary_operator -> TIMES .)
    INT_CONST       reduce using rule 78 (unary_operator -> TIMES .)
    FLOAT_CONST     reduce using rule 78 (unary_operator -> TIMES .)
    STRING          reduce using rule 78 (unary_operator -> TIMES .)


state 34

    (80) unary_operator -> MINUS .

    LPAREN          reduce using rule 80 (unary_operator -> MINUS .)
    PLUSPLUS        reduce using rule 80 (unary_operator -> MINUS .)
    MINUSMINUS      reduce using rule 80 (unary_operator -> MINUS .)
    ADDRESS         reduce using rule 80 (unary_operator -> MINUS .)
    TIMES           reduce using rule 80 (unary_operator -> MINUS .)
    PLUS            reduce using rule 80 (unary_operator -> MINUS .)
    MINUS           reduce using rule 80 (unary_operator -> MINUS .)
    NOT             reduce using rule 80 (unary_operator -> MINUS .)
    ID              reduce using rule 80 (unary_operator -> MINUS .)
    INT_CONST       reduce using rule 80 (unary_operator -> MINUS .)
    FLOAT_CONST     reduce using rule 80 (unary_operator -> MINUS .)
    STRING          reduce using rule 80 (unary_operator -> MINUS .)


state 35

    (79) unary_operator -> PLUS .

    LPAREN          reduce using rule 79 (unary_operator -> PLUS .)
    PLUSPLUS        reduce using rule 79 (unary_operator -> PLUS .)
    MINUSMINUS      reduce using rule 79 (unary_operator -> PLUS .)
    ADDRESS         reduce using rule 79 (unary_operator -> PLUS .)
    TIMES           reduce using rule 79 (unary_operator -> PLUS .)
    PLUS            reduce using rule 79 (unary_operator -> PLUS .)
    MINUS           reduce using rule 79 (unary_operator -> PLUS .)
    NOT             reduce using rule 79 (unary_operator -> PLUS .)
    ID              reduce using rule 79 (unary_operator -> PLUS .)
    INT_CONST       reduce using rule 79 (unary_operator -> PLUS .)
    FLOAT_CONST     reduce using rule 79 (unary_operator -> PLUS .)
    STRING          reduce using rule 79 (unary_operator -> PLUS .)


state 36

    (44) cast_expression -> unary_expression .

    TIMES           reduce using rule 44 (cast_expression -> unary_expression .)
    DIVIDE          reduce using rule 44 (cast_expression -> unary_expression .)
    MOD             reduce using rule 44 (cast_expression -> unary_expression .)
    MINUS           reduce using rule 44 (cast_expression -> unary_expression .)
    PLUS            reduce using rule 44 (cast_expression -> unary_expression .)
    LT              reduce using rule 44 (cast_expression -> unary_expression .)
    LE              reduce using rule 44 (cast_expression -> unary_expression .)
    HT              reduce using rule 44 (cast_expression -> unary_expression .)
    HE              reduce using rule 44 (cast_expression -> unary_expression .)
    EQUALS          reduce using rule 44 (cast_expression -> unary_expression .)
    DIFF            reduce using rule 44 (cast_expression -> unary_expression .)
    AND             reduce using rule 44 (cast_expression -> unary_expression .)
    OR              reduce using rule 44 (cast_expression -> unary_expression .)
    LBRACKET        reduce using rule 44 (cast_expression -> unary_expression .)
    EQ              reduce using rule 44 (cast_expression -> unary_expression .)
    ASSIGN_TIMES    reduce using rule 44 (cast_expression -> unary_expression .)
    ASSIGN_DIVIDE   reduce using rule 44 (cast_expression -> unary_expression .)
    ASSIGN_MOD      reduce using rule 44 (cast_expression -> unary_expression .)
    ASSIGN_PLUS     reduce using rule 44 (cast_expression -> unary_expression .)
    ASSIGN_MINUS    reduce using rule 44 (cast_expression -> unary_expression .)
    SEMI            reduce using rule 44 (cast_expression -> unary_expression .)
    COMMA           reduce using rule 44 (cast_expression -> unary_expression .)
    RPAREN          reduce using rule 44 (cast_expression -> unary_expression .)
    RBRACE          reduce using rule 44 (cast_expression -> unary_expression .)
    WHILE           reduce using rule 44 (cast_expression -> unary_expression .)
    FOR             reduce using rule 44 (cast_expression -> unary_expression .)
    LBRACE          reduce using rule 44 (cast_expression -> unary_expression .)
    BREAK           reduce using rule 44 (cast_expression -> unary_expression .)
    RETURN          reduce using rule 44 (cast_expression -> unary_expression .)
    ASSERT          reduce using rule 44 (cast_expression -> unary_expression .)
    PRINT           reduce using rule 44 (cast_expression -> unary_expression .)
    IF              reduce using rule 44 (cast_expression -> unary_expression .)
    READ            reduce using rule 44 (cast_expression -> unary_expression .)
    PLUSPLUS        reduce using rule 44 (cast_expression -> unary_expression .)
    MINUSMINUS      reduce using rule 44 (cast_expression -> unary_expression .)
    LPAREN          reduce using rule 44 (cast_expression -> unary_expression .)
    ADDRESS         reduce using rule 44 (cast_expression -> unary_expression .)
    NOT             reduce using rule 44 (cast_expression -> unary_expression .)
    ID              reduce using rule 44 (cast_expression -> unary_expression .)
    INT_CONST       reduce using rule 44 (cast_expression -> unary_expression .)
    FLOAT_CONST     reduce using rule 44 (cast_expression -> unary_expression .)
    STRING          reduce using rule 44 (cast_expression -> unary_expression .)
    ELSE            reduce using rule 44 (cast_expression -> unary_expression .)
    RBRACKET        reduce using rule 44 (cast_expression -> unary_expression .)


state 37

    (45) cast_expression -> LPAREN . type_specifier RPAREN cast_expression
    (60) primary_expression -> LPAREN . expression RPAREN
    (14) type_specifier -> . VOID
    (15) type_specifier -> . CHAR
    (16) type_specifier -> . INT
    (17) type_specifier -> . FLOAT
    (69) expression -> . assignment_expression
    (70) expression -> . expression COMMA assignment_expression
    (67) assignment_expression -> . binary_expression
    (68) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (30) binary_expression -> . cast_expression
    (31) binary_expression -> . binary_expression TIMES binary_expression
    (32) binary_expression -> . binary_expression DIVIDE binary_expression
    (33) binary_expression -> . binary_expression MOD binary_expression
    (34) binary_expression -> . binary_expression MINUS binary_expression
    (35) binary_expression -> . binary_expression PLUS binary_expression
    (36) binary_expression -> . binary_expression LT binary_expression
    (37) binary_expression -> . binary_expression LE binary_expression
    (38) binary_expression -> . binary_expression HT binary_expression
    (39) binary_expression -> . binary_expression HE binary_expression
    (40) binary_expression -> . binary_expression EQUALS binary_expression
    (41) binary_expression -> . binary_expression DIFF binary_expression
    (42) binary_expression -> . binary_expression AND binary_expression
    (43) binary_expression -> . binary_expression OR binary_expression
    (46) unary_expression -> . postfix_expression
    (47) unary_expression -> . PLUSPLUS unary_expression
    (48) unary_expression -> . MINUSMINUS unary_expression
    (49) unary_expression -> . unary_operator cast_expression
    (44) cast_expression -> . unary_expression
    (45) cast_expression -> . LPAREN type_specifier RPAREN cast_expression
    (50) postfix_expression -> . primary_expression
    (51) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (52) postfix_expression -> . postfix_expression LPAREN RPAREN
    (53) postfix_expression -> . postfix_expression LPAREN assignment_expression_list RPAREN
    (54) postfix_expression -> . postfix_expression PLUSPLUS
    (55) postfix_expression -> . postfix_expression MINUSMINUS
    (77) unary_operator -> . ADDRESS
    (78) unary_operator -> . TIMES
    (79) unary_operator -> . PLUS
    (80) unary_operator -> . MINUS
    (81) unary_operator -> . NOT
    (56) primary_expression -> . identifier
    (57) primary_expression -> . int_const
    (58) primary_expression -> . float_const
    (59) primary_expression -> . frase
    (60) primary_expression -> . LPAREN expression RPAREN
    (18) identifier -> . ID
    (20) int_const -> . INT_CONST
    (21) float_const -> . FLOAT_CONST
    (19) frase -> . STRING

    VOID            shift and go to state 10
    CHAR            shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    PLUSPLUS        shift and go to state 39
    MINUSMINUS      shift and go to state 40
    LPAREN          shift and go to state 37
    ADDRESS         shift and go to state 43
    TIMES           shift and go to state 33
    PLUS            shift and go to state 35
    MINUS           shift and go to state 34
    NOT             shift and go to state 44
    ID              shift and go to state 14
    INT_CONST       shift and go to state 49
    FLOAT_CONST     shift and go to state 50
    STRING          shift and go to state 51

    type_specifier                 shift and go to state 102
    cast_expression                shift and go to state 32
    expression                     shift and go to state 103
    assignment_expression          shift and go to state 79
    binary_expression              shift and go to state 80
    unary_expression               shift and go to state 81
    postfix_expression             shift and go to state 38
    unary_operator                 shift and go to state 41
    primary_expression             shift and go to state 42
    identifier                     shift and go to state 45
    int_const                      shift and go to state 46
    float_const                    shift and go to state 47
    frase                          shift and go to state 48

state 38

    (46) unary_expression -> postfix_expression .
    (51) postfix_expression -> postfix_expression . LBRACKET expression RBRACKET
    (52) postfix_expression -> postfix_expression . LPAREN RPAREN
    (53) postfix_expression -> postfix_expression . LPAREN assignment_expression_list RPAREN
    (54) postfix_expression -> postfix_expression . PLUSPLUS
    (55) postfix_expression -> postfix_expression . MINUSMINUS

  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
    TIMES           reduce using rule 46 (unary_expression -> postfix_expression .)
    DIVIDE          reduce using rule 46 (unary_expression -> postfix_expression .)
    MOD             reduce using rule 46 (unary_expression -> postfix_expression .)
    MINUS           reduce using rule 46 (unary_expression -> postfix_expression .)
    PLUS            reduce using rule 46 (unary_expression -> postfix_expression .)
    LT              reduce using rule 46 (unary_expression -> postfix_expression .)
    LE              reduce using rule 46 (unary_expression -> postfix_expression .)
    HT              reduce using rule 46 (unary_expression -> postfix_expression .)
    HE              reduce using rule 46 (unary_expression -> postfix_expression .)
    EQUALS          reduce using rule 46 (unary_expression -> postfix_expression .)
    DIFF            reduce using rule 46 (unary_expression -> postfix_expression .)
    AND             reduce using rule 46 (unary_expression -> postfix_expression .)
    OR              reduce using rule 46 (unary_expression -> postfix_expression .)
    EQ              reduce using rule 46 (unary_expression -> postfix_expression .)
    ASSIGN_TIMES    reduce using rule 46 (unary_expression -> postfix_expression .)
    ASSIGN_DIVIDE   reduce using rule 46 (unary_expression -> postfix_expression .)
    ASSIGN_MOD      reduce using rule 46 (unary_expression -> postfix_expression .)
    ASSIGN_PLUS     reduce using rule 46 (unary_expression -> postfix_expression .)
    ASSIGN_MINUS    reduce using rule 46 (unary_expression -> postfix_expression .)
    SEMI            reduce using rule 46 (unary_expression -> postfix_expression .)
    COMMA           reduce using rule 46 (unary_expression -> postfix_expression .)
    RPAREN          reduce using rule 46 (unary_expression -> postfix_expression .)
    RBRACE          reduce using rule 46 (unary_expression -> postfix_expression .)
    WHILE           reduce using rule 46 (unary_expression -> postfix_expression .)
    FOR             reduce using rule 46 (unary_expression -> postfix_expression .)
    LBRACE          reduce using rule 46 (unary_expression -> postfix_expression .)
    BREAK           reduce using rule 46 (unary_expression -> postfix_expression .)
    RETURN          reduce using rule 46 (unary_expression -> postfix_expression .)
    ASSERT          reduce using rule 46 (unary_expression -> postfix_expression .)
    PRINT           reduce using rule 46 (unary_expression -> postfix_expression .)
    IF              reduce using rule 46 (unary_expression -> postfix_expression .)
    READ            reduce using rule 46 (unary_expression -> postfix_expression .)
    ADDRESS         reduce using rule 46 (unary_expression -> postfix_expression .)
    NOT             reduce using rule 46 (unary_expression -> postfix_expression .)
    ID              reduce using rule 46 (unary_expression -> postfix_expression .)
    INT_CONST       reduce using rule 46 (unary_expression -> postfix_expression .)
    FLOAT_CONST     reduce using rule 46 (unary_expression -> postfix_expression .)
    STRING          reduce using rule 46 (unary_expression -> postfix_expression .)
    ELSE            reduce using rule 46 (unary_expression -> postfix_expression .)
    RBRACKET        reduce using rule 46 (unary_expression -> postfix_expression .)
    LBRACKET        shift and go to state 104
    LPAREN          shift and go to state 105
    PLUSPLUS        shift and go to state 106
    MINUSMINUS      shift and go to state 107

  ! LBRACKET        [ reduce using rule 46 (unary_expression -> postfix_expression .) ]
  ! PLUSPLUS        [ reduce using rule 46 (unary_expression -> postfix_expression .) ]
  ! MINUSMINUS      [ reduce using rule 46 (unary_expression -> postfix_expression .) ]
  ! LPAREN          [ reduce using rule 46 (unary_expression -> postfix_expression .) ]


state 39

    (47) unary_expression -> PLUSPLUS . unary_expression
    (46) unary_expression -> . postfix_expression
    (47) unary_expression -> . PLUSPLUS unary_expression
    (48) unary_expression -> . MINUSMINUS unary_expression
    (49) unary_expression -> . unary_operator cast_expression
    (50) postfix_expression -> . primary_expression
    (51) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (52) postfix_expression -> . postfix_expression LPAREN RPAREN
    (53) postfix_expression -> . postfix_expression LPAREN assignment_expression_list RPAREN
    (54) postfix_expression -> . postfix_expression PLUSPLUS
    (55) postfix_expression -> . postfix_expression MINUSMINUS
    (77) unary_operator -> . ADDRESS
    (78) unary_operator -> . TIMES
    (79) unary_operator -> . PLUS
    (80) unary_operator -> . MINUS
    (81) unary_operator -> . NOT
    (56) primary_expression -> . identifier
    (57) primary_expression -> . int_const
    (58) primary_expression -> . float_const
    (59) primary_expression -> . frase
    (60) primary_expression -> . LPAREN expression RPAREN
    (18) identifier -> . ID
    (20) int_const -> . INT_CONST
    (21) float_const -> . FLOAT_CONST
    (19) frase -> . STRING

    PLUSPLUS        shift and go to state 39
    MINUSMINUS      shift and go to state 40
    ADDRESS         shift and go to state 43
    TIMES           shift and go to state 33
    PLUS            shift and go to state 35
    MINUS           shift and go to state 34
    NOT             shift and go to state 44
    LPAREN          shift and go to state 109
    ID              shift and go to state 14
    INT_CONST       shift and go to state 49
    FLOAT_CONST     shift and go to state 50
    STRING          shift and go to state 51

    unary_expression               shift and go to state 108
    postfix_expression             shift and go to state 38
    unary_operator                 shift and go to state 41
    primary_expression             shift and go to state 42
    identifier                     shift and go to state 45
    int_const                      shift and go to state 46
    float_const                    shift and go to state 47
    frase                          shift and go to state 48

state 40

    (48) unary_expression -> MINUSMINUS . unary_expression
    (46) unary_expression -> . postfix_expression
    (47) unary_expression -> . PLUSPLUS unary_expression
    (48) unary_expression -> . MINUSMINUS unary_expression
    (49) unary_expression -> . unary_operator cast_expression
    (50) postfix_expression -> . primary_expression
    (51) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (52) postfix_expression -> . postfix_expression LPAREN RPAREN
    (53) postfix_expression -> . postfix_expression LPAREN assignment_expression_list RPAREN
    (54) postfix_expression -> . postfix_expression PLUSPLUS
    (55) postfix_expression -> . postfix_expression MINUSMINUS
    (77) unary_operator -> . ADDRESS
    (78) unary_operator -> . TIMES
    (79) unary_operator -> . PLUS
    (80) unary_operator -> . MINUS
    (81) unary_operator -> . NOT
    (56) primary_expression -> . identifier
    (57) primary_expression -> . int_const
    (58) primary_expression -> . float_const
    (59) primary_expression -> . frase
    (60) primary_expression -> . LPAREN expression RPAREN
    (18) identifier -> . ID
    (20) int_const -> . INT_CONST
    (21) float_const -> . FLOAT_CONST
    (19) frase -> . STRING

    PLUSPLUS        shift and go to state 39
    MINUSMINUS      shift and go to state 40
    ADDRESS         shift and go to state 43
    TIMES           shift and go to state 33
    PLUS            shift and go to state 35
    MINUS           shift and go to state 34
    NOT             shift and go to state 44
    LPAREN          shift and go to state 109
    ID              shift and go to state 14
    INT_CONST       shift and go to state 49
    FLOAT_CONST     shift and go to state 50
    STRING          shift and go to state 51

    unary_expression               shift and go to state 110
    postfix_expression             shift and go to state 38
    unary_operator                 shift and go to state 41
    primary_expression             shift and go to state 42
    identifier                     shift and go to state 45
    int_const                      shift and go to state 46
    float_const                    shift and go to state 47
    frase                          shift and go to state 48

state 41

    (49) unary_expression -> unary_operator . cast_expression
    (44) cast_expression -> . unary_expression
    (45) cast_expression -> . LPAREN type_specifier RPAREN cast_expression
    (46) unary_expression -> . postfix_expression
    (47) unary_expression -> . PLUSPLUS unary_expression
    (48) unary_expression -> . MINUSMINUS unary_expression
    (49) unary_expression -> . unary_operator cast_expression
    (50) postfix_expression -> . primary_expression
    (51) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (52) postfix_expression -> . postfix_expression LPAREN RPAREN
    (53) postfix_expression -> . postfix_expression LPAREN assignment_expression_list RPAREN
    (54) postfix_expression -> . postfix_expression PLUSPLUS
    (55) postfix_expression -> . postfix_expression MINUSMINUS
    (77) unary_operator -> . ADDRESS
    (78) unary_operator -> . TIMES
    (79) unary_operator -> . PLUS
    (80) unary_operator -> . MINUS
    (81) unary_operator -> . NOT
    (56) primary_expression -> . identifier
    (57) primary_expression -> . int_const
    (58) primary_expression -> . float_const
    (59) primary_expression -> . frase
    (60) primary_expression -> . LPAREN expression RPAREN
    (18) identifier -> . ID
    (20) int_const -> . INT_CONST
    (21) float_const -> . FLOAT_CONST
    (19) frase -> . STRING

    LPAREN          shift and go to state 37
    PLUSPLUS        shift and go to state 39
    MINUSMINUS      shift and go to state 40
    ADDRESS         shift and go to state 43
    TIMES           shift and go to state 33
    PLUS            shift and go to state 35
    MINUS           shift and go to state 34
    NOT             shift and go to state 44
    ID              shift and go to state 14
    INT_CONST       shift and go to state 49
    FLOAT_CONST     shift and go to state 50
    STRING          shift and go to state 51

    unary_operator                 shift and go to state 41
    cast_expression                shift and go to state 111
    unary_expression               shift and go to state 36
    postfix_expression             shift and go to state 38
    primary_expression             shift and go to state 42
    identifier                     shift and go to state 45
    int_const                      shift and go to state 46
    float_const                    shift and go to state 47
    frase                          shift and go to state 48

state 42

    (50) postfix_expression -> primary_expression .

    LBRACKET        reduce using rule 50 (postfix_expression -> primary_expression .)
    LPAREN          reduce using rule 50 (postfix_expression -> primary_expression .)
    PLUSPLUS        reduce using rule 50 (postfix_expression -> primary_expression .)
    MINUSMINUS      reduce using rule 50 (postfix_expression -> primary_expression .)
    TIMES           reduce using rule 50 (postfix_expression -> primary_expression .)
    DIVIDE          reduce using rule 50 (postfix_expression -> primary_expression .)
    MOD             reduce using rule 50 (postfix_expression -> primary_expression .)
    MINUS           reduce using rule 50 (postfix_expression -> primary_expression .)
    PLUS            reduce using rule 50 (postfix_expression -> primary_expression .)
    LT              reduce using rule 50 (postfix_expression -> primary_expression .)
    LE              reduce using rule 50 (postfix_expression -> primary_expression .)
    HT              reduce using rule 50 (postfix_expression -> primary_expression .)
    HE              reduce using rule 50 (postfix_expression -> primary_expression .)
    EQUALS          reduce using rule 50 (postfix_expression -> primary_expression .)
    DIFF            reduce using rule 50 (postfix_expression -> primary_expression .)
    AND             reduce using rule 50 (postfix_expression -> primary_expression .)
    OR              reduce using rule 50 (postfix_expression -> primary_expression .)
    EQ              reduce using rule 50 (postfix_expression -> primary_expression .)
    ASSIGN_TIMES    reduce using rule 50 (postfix_expression -> primary_expression .)
    ASSIGN_DIVIDE   reduce using rule 50 (postfix_expression -> primary_expression .)
    ASSIGN_MOD      reduce using rule 50 (postfix_expression -> primary_expression .)
    ASSIGN_PLUS     reduce using rule 50 (postfix_expression -> primary_expression .)
    ASSIGN_MINUS    reduce using rule 50 (postfix_expression -> primary_expression .)
    SEMI            reduce using rule 50 (postfix_expression -> primary_expression .)
    COMMA           reduce using rule 50 (postfix_expression -> primary_expression .)
    RPAREN          reduce using rule 50 (postfix_expression -> primary_expression .)
    RBRACE          reduce using rule 50 (postfix_expression -> primary_expression .)
    WHILE           reduce using rule 50 (postfix_expression -> primary_expression .)
    FOR             reduce using rule 50 (postfix_expression -> primary_expression .)
    LBRACE          reduce using rule 50 (postfix_expression -> primary_expression .)
    BREAK           reduce using rule 50 (postfix_expression -> primary_expression .)
    RETURN          reduce using rule 50 (postfix_expression -> primary_expression .)
    ASSERT          reduce using rule 50 (postfix_expression -> primary_expression .)
    PRINT           reduce using rule 50 (postfix_expression -> primary_expression .)
    IF              reduce using rule 50 (postfix_expression -> primary_expression .)
    READ            reduce using rule 50 (postfix_expression -> primary_expression .)
    ADDRESS         reduce using rule 50 (postfix_expression -> primary_expression .)
    NOT             reduce using rule 50 (postfix_expression -> primary_expression .)
    ID              reduce using rule 50 (postfix_expression -> primary_expression .)
    INT_CONST       reduce using rule 50 (postfix_expression -> primary_expression .)
    FLOAT_CONST     reduce using rule 50 (postfix_expression -> primary_expression .)
    STRING          reduce using rule 50 (postfix_expression -> primary_expression .)
    ELSE            reduce using rule 50 (postfix_expression -> primary_expression .)
    RBRACKET        reduce using rule 50 (postfix_expression -> primary_expression .)


state 43

    (77) unary_operator -> ADDRESS .

    LPAREN          reduce using rule 77 (unary_operator -> ADDRESS .)
    PLUSPLUS        reduce using rule 77 (unary_operator -> ADDRESS .)
    MINUSMINUS      reduce using rule 77 (unary_operator -> ADDRESS .)
    ADDRESS         reduce using rule 77 (unary_operator -> ADDRESS .)
    TIMES           reduce using rule 77 (unary_operator -> ADDRESS .)
    PLUS            reduce using rule 77 (unary_operator -> ADDRESS .)
    MINUS           reduce using rule 77 (unary_operator -> ADDRESS .)
    NOT             reduce using rule 77 (unary_operator -> ADDRESS .)
    ID              reduce using rule 77 (unary_operator -> ADDRESS .)
    INT_CONST       reduce using rule 77 (unary_operator -> ADDRESS .)
    FLOAT_CONST     reduce using rule 77 (unary_operator -> ADDRESS .)
    STRING          reduce using rule 77 (unary_operator -> ADDRESS .)


state 44

    (81) unary_operator -> NOT .

    LPAREN          reduce using rule 81 (unary_operator -> NOT .)
    PLUSPLUS        reduce using rule 81 (unary_operator -> NOT .)
    MINUSMINUS      reduce using rule 81 (unary_operator -> NOT .)
    ADDRESS         reduce using rule 81 (unary_operator -> NOT .)
    TIMES           reduce using rule 81 (unary_operator -> NOT .)
    PLUS            reduce using rule 81 (unary_operator -> NOT .)
    MINUS           reduce using rule 81 (unary_operator -> NOT .)
    NOT             reduce using rule 81 (unary_operator -> NOT .)
    ID              reduce using rule 81 (unary_operator -> NOT .)
    INT_CONST       reduce using rule 81 (unary_operator -> NOT .)
    FLOAT_CONST     reduce using rule 81 (unary_operator -> NOT .)
    STRING          reduce using rule 81 (unary_operator -> NOT .)


state 45

    (56) primary_expression -> identifier .

    LBRACKET        reduce using rule 56 (primary_expression -> identifier .)
    LPAREN          reduce using rule 56 (primary_expression -> identifier .)
    PLUSPLUS        reduce using rule 56 (primary_expression -> identifier .)
    MINUSMINUS      reduce using rule 56 (primary_expression -> identifier .)
    TIMES           reduce using rule 56 (primary_expression -> identifier .)
    DIVIDE          reduce using rule 56 (primary_expression -> identifier .)
    MOD             reduce using rule 56 (primary_expression -> identifier .)
    MINUS           reduce using rule 56 (primary_expression -> identifier .)
    PLUS            reduce using rule 56 (primary_expression -> identifier .)
    LT              reduce using rule 56 (primary_expression -> identifier .)
    LE              reduce using rule 56 (primary_expression -> identifier .)
    HT              reduce using rule 56 (primary_expression -> identifier .)
    HE              reduce using rule 56 (primary_expression -> identifier .)
    EQUALS          reduce using rule 56 (primary_expression -> identifier .)
    DIFF            reduce using rule 56 (primary_expression -> identifier .)
    AND             reduce using rule 56 (primary_expression -> identifier .)
    OR              reduce using rule 56 (primary_expression -> identifier .)
    EQ              reduce using rule 56 (primary_expression -> identifier .)
    ASSIGN_TIMES    reduce using rule 56 (primary_expression -> identifier .)
    ASSIGN_DIVIDE   reduce using rule 56 (primary_expression -> identifier .)
    ASSIGN_MOD      reduce using rule 56 (primary_expression -> identifier .)
    ASSIGN_PLUS     reduce using rule 56 (primary_expression -> identifier .)
    ASSIGN_MINUS    reduce using rule 56 (primary_expression -> identifier .)
    SEMI            reduce using rule 56 (primary_expression -> identifier .)
    COMMA           reduce using rule 56 (primary_expression -> identifier .)
    RPAREN          reduce using rule 56 (primary_expression -> identifier .)
    RBRACE          reduce using rule 56 (primary_expression -> identifier .)
    WHILE           reduce using rule 56 (primary_expression -> identifier .)
    FOR             reduce using rule 56 (primary_expression -> identifier .)
    LBRACE          reduce using rule 56 (primary_expression -> identifier .)
    BREAK           reduce using rule 56 (primary_expression -> identifier .)
    RETURN          reduce using rule 56 (primary_expression -> identifier .)
    ASSERT          reduce using rule 56 (primary_expression -> identifier .)
    PRINT           reduce using rule 56 (primary_expression -> identifier .)
    IF              reduce using rule 56 (primary_expression -> identifier .)
    READ            reduce using rule 56 (primary_expression -> identifier .)
    ADDRESS         reduce using rule 56 (primary_expression -> identifier .)
    NOT             reduce using rule 56 (primary_expression -> identifier .)
    ID              reduce using rule 56 (primary_expression -> identifier .)
    INT_CONST       reduce using rule 56 (primary_expression -> identifier .)
    FLOAT_CONST     reduce using rule 56 (primary_expression -> identifier .)
    STRING          reduce using rule 56 (primary_expression -> identifier .)
    ELSE            reduce using rule 56 (primary_expression -> identifier .)
    RBRACKET        reduce using rule 56 (primary_expression -> identifier .)


state 46

    (57) primary_expression -> int_const .

    LBRACKET        reduce using rule 57 (primary_expression -> int_const .)
    LPAREN          reduce using rule 57 (primary_expression -> int_const .)
    PLUSPLUS        reduce using rule 57 (primary_expression -> int_const .)
    MINUSMINUS      reduce using rule 57 (primary_expression -> int_const .)
    TIMES           reduce using rule 57 (primary_expression -> int_const .)
    DIVIDE          reduce using rule 57 (primary_expression -> int_const .)
    MOD             reduce using rule 57 (primary_expression -> int_const .)
    MINUS           reduce using rule 57 (primary_expression -> int_const .)
    PLUS            reduce using rule 57 (primary_expression -> int_const .)
    LT              reduce using rule 57 (primary_expression -> int_const .)
    LE              reduce using rule 57 (primary_expression -> int_const .)
    HT              reduce using rule 57 (primary_expression -> int_const .)
    HE              reduce using rule 57 (primary_expression -> int_const .)
    EQUALS          reduce using rule 57 (primary_expression -> int_const .)
    DIFF            reduce using rule 57 (primary_expression -> int_const .)
    AND             reduce using rule 57 (primary_expression -> int_const .)
    OR              reduce using rule 57 (primary_expression -> int_const .)
    EQ              reduce using rule 57 (primary_expression -> int_const .)
    ASSIGN_TIMES    reduce using rule 57 (primary_expression -> int_const .)
    ASSIGN_DIVIDE   reduce using rule 57 (primary_expression -> int_const .)
    ASSIGN_MOD      reduce using rule 57 (primary_expression -> int_const .)
    ASSIGN_PLUS     reduce using rule 57 (primary_expression -> int_const .)
    ASSIGN_MINUS    reduce using rule 57 (primary_expression -> int_const .)
    SEMI            reduce using rule 57 (primary_expression -> int_const .)
    COMMA           reduce using rule 57 (primary_expression -> int_const .)
    RPAREN          reduce using rule 57 (primary_expression -> int_const .)
    RBRACE          reduce using rule 57 (primary_expression -> int_const .)
    WHILE           reduce using rule 57 (primary_expression -> int_const .)
    FOR             reduce using rule 57 (primary_expression -> int_const .)
    LBRACE          reduce using rule 57 (primary_expression -> int_const .)
    BREAK           reduce using rule 57 (primary_expression -> int_const .)
    RETURN          reduce using rule 57 (primary_expression -> int_const .)
    ASSERT          reduce using rule 57 (primary_expression -> int_const .)
    PRINT           reduce using rule 57 (primary_expression -> int_const .)
    IF              reduce using rule 57 (primary_expression -> int_const .)
    READ            reduce using rule 57 (primary_expression -> int_const .)
    ADDRESS         reduce using rule 57 (primary_expression -> int_const .)
    NOT             reduce using rule 57 (primary_expression -> int_const .)
    ID              reduce using rule 57 (primary_expression -> int_const .)
    INT_CONST       reduce using rule 57 (primary_expression -> int_const .)
    FLOAT_CONST     reduce using rule 57 (primary_expression -> int_const .)
    STRING          reduce using rule 57 (primary_expression -> int_const .)
    ELSE            reduce using rule 57 (primary_expression -> int_const .)
    RBRACKET        reduce using rule 57 (primary_expression -> int_const .)


state 47

    (58) primary_expression -> float_const .

    LBRACKET        reduce using rule 58 (primary_expression -> float_const .)
    LPAREN          reduce using rule 58 (primary_expression -> float_const .)
    PLUSPLUS        reduce using rule 58 (primary_expression -> float_const .)
    MINUSMINUS      reduce using rule 58 (primary_expression -> float_const .)
    TIMES           reduce using rule 58 (primary_expression -> float_const .)
    DIVIDE          reduce using rule 58 (primary_expression -> float_const .)
    MOD             reduce using rule 58 (primary_expression -> float_const .)
    MINUS           reduce using rule 58 (primary_expression -> float_const .)
    PLUS            reduce using rule 58 (primary_expression -> float_const .)
    LT              reduce using rule 58 (primary_expression -> float_const .)
    LE              reduce using rule 58 (primary_expression -> float_const .)
    HT              reduce using rule 58 (primary_expression -> float_const .)
    HE              reduce using rule 58 (primary_expression -> float_const .)
    EQUALS          reduce using rule 58 (primary_expression -> float_const .)
    DIFF            reduce using rule 58 (primary_expression -> float_const .)
    AND             reduce using rule 58 (primary_expression -> float_const .)
    OR              reduce using rule 58 (primary_expression -> float_const .)
    EQ              reduce using rule 58 (primary_expression -> float_const .)
    ASSIGN_TIMES    reduce using rule 58 (primary_expression -> float_const .)
    ASSIGN_DIVIDE   reduce using rule 58 (primary_expression -> float_const .)
    ASSIGN_MOD      reduce using rule 58 (primary_expression -> float_const .)
    ASSIGN_PLUS     reduce using rule 58 (primary_expression -> float_const .)
    ASSIGN_MINUS    reduce using rule 58 (primary_expression -> float_const .)
    SEMI            reduce using rule 58 (primary_expression -> float_const .)
    COMMA           reduce using rule 58 (primary_expression -> float_const .)
    RPAREN          reduce using rule 58 (primary_expression -> float_const .)
    RBRACE          reduce using rule 58 (primary_expression -> float_const .)
    WHILE           reduce using rule 58 (primary_expression -> float_const .)
    FOR             reduce using rule 58 (primary_expression -> float_const .)
    LBRACE          reduce using rule 58 (primary_expression -> float_const .)
    BREAK           reduce using rule 58 (primary_expression -> float_const .)
    RETURN          reduce using rule 58 (primary_expression -> float_const .)
    ASSERT          reduce using rule 58 (primary_expression -> float_const .)
    PRINT           reduce using rule 58 (primary_expression -> float_const .)
    IF              reduce using rule 58 (primary_expression -> float_const .)
    READ            reduce using rule 58 (primary_expression -> float_const .)
    ADDRESS         reduce using rule 58 (primary_expression -> float_const .)
    NOT             reduce using rule 58 (primary_expression -> float_const .)
    ID              reduce using rule 58 (primary_expression -> float_const .)
    INT_CONST       reduce using rule 58 (primary_expression -> float_const .)
    FLOAT_CONST     reduce using rule 58 (primary_expression -> float_const .)
    STRING          reduce using rule 58 (primary_expression -> float_const .)
    ELSE            reduce using rule 58 (primary_expression -> float_const .)
    RBRACKET        reduce using rule 58 (primary_expression -> float_const .)


state 48

    (59) primary_expression -> frase .

    LBRACKET        reduce using rule 59 (primary_expression -> frase .)
    LPAREN          reduce using rule 59 (primary_expression -> frase .)
    PLUSPLUS        reduce using rule 59 (primary_expression -> frase .)
    MINUSMINUS      reduce using rule 59 (primary_expression -> frase .)
    TIMES           reduce using rule 59 (primary_expression -> frase .)
    DIVIDE          reduce using rule 59 (primary_expression -> frase .)
    MOD             reduce using rule 59 (primary_expression -> frase .)
    MINUS           reduce using rule 59 (primary_expression -> frase .)
    PLUS            reduce using rule 59 (primary_expression -> frase .)
    LT              reduce using rule 59 (primary_expression -> frase .)
    LE              reduce using rule 59 (primary_expression -> frase .)
    HT              reduce using rule 59 (primary_expression -> frase .)
    HE              reduce using rule 59 (primary_expression -> frase .)
    EQUALS          reduce using rule 59 (primary_expression -> frase .)
    DIFF            reduce using rule 59 (primary_expression -> frase .)
    AND             reduce using rule 59 (primary_expression -> frase .)
    OR              reduce using rule 59 (primary_expression -> frase .)
    EQ              reduce using rule 59 (primary_expression -> frase .)
    ASSIGN_TIMES    reduce using rule 59 (primary_expression -> frase .)
    ASSIGN_DIVIDE   reduce using rule 59 (primary_expression -> frase .)
    ASSIGN_MOD      reduce using rule 59 (primary_expression -> frase .)
    ASSIGN_PLUS     reduce using rule 59 (primary_expression -> frase .)
    ASSIGN_MINUS    reduce using rule 59 (primary_expression -> frase .)
    SEMI            reduce using rule 59 (primary_expression -> frase .)
    COMMA           reduce using rule 59 (primary_expression -> frase .)
    RPAREN          reduce using rule 59 (primary_expression -> frase .)
    RBRACE          reduce using rule 59 (primary_expression -> frase .)
    WHILE           reduce using rule 59 (primary_expression -> frase .)
    FOR             reduce using rule 59 (primary_expression -> frase .)
    LBRACE          reduce using rule 59 (primary_expression -> frase .)
    BREAK           reduce using rule 59 (primary_expression -> frase .)
    RETURN          reduce using rule 59 (primary_expression -> frase .)
    ASSERT          reduce using rule 59 (primary_expression -> frase .)
    PRINT           reduce using rule 59 (primary_expression -> frase .)
    IF              reduce using rule 59 (primary_expression -> frase .)
    READ            reduce using rule 59 (primary_expression -> frase .)
    ADDRESS         reduce using rule 59 (primary_expression -> frase .)
    NOT             reduce using rule 59 (primary_expression -> frase .)
    ID              reduce using rule 59 (primary_expression -> frase .)
    INT_CONST       reduce using rule 59 (primary_expression -> frase .)
    FLOAT_CONST     reduce using rule 59 (primary_expression -> frase .)
    STRING          reduce using rule 59 (primary_expression -> frase .)
    ELSE            reduce using rule 59 (primary_expression -> frase .)
    RBRACKET        reduce using rule 59 (primary_expression -> frase .)


state 49

    (20) int_const -> INT_CONST .

    LBRACKET        reduce using rule 20 (int_const -> INT_CONST .)
    LPAREN          reduce using rule 20 (int_const -> INT_CONST .)
    PLUSPLUS        reduce using rule 20 (int_const -> INT_CONST .)
    MINUSMINUS      reduce using rule 20 (int_const -> INT_CONST .)
    TIMES           reduce using rule 20 (int_const -> INT_CONST .)
    DIVIDE          reduce using rule 20 (int_const -> INT_CONST .)
    MOD             reduce using rule 20 (int_const -> INT_CONST .)
    MINUS           reduce using rule 20 (int_const -> INT_CONST .)
    PLUS            reduce using rule 20 (int_const -> INT_CONST .)
    LT              reduce using rule 20 (int_const -> INT_CONST .)
    LE              reduce using rule 20 (int_const -> INT_CONST .)
    HT              reduce using rule 20 (int_const -> INT_CONST .)
    HE              reduce using rule 20 (int_const -> INT_CONST .)
    EQUALS          reduce using rule 20 (int_const -> INT_CONST .)
    DIFF            reduce using rule 20 (int_const -> INT_CONST .)
    AND             reduce using rule 20 (int_const -> INT_CONST .)
    OR              reduce using rule 20 (int_const -> INT_CONST .)
    EQ              reduce using rule 20 (int_const -> INT_CONST .)
    ASSIGN_TIMES    reduce using rule 20 (int_const -> INT_CONST .)
    ASSIGN_DIVIDE   reduce using rule 20 (int_const -> INT_CONST .)
    ASSIGN_MOD      reduce using rule 20 (int_const -> INT_CONST .)
    ASSIGN_PLUS     reduce using rule 20 (int_const -> INT_CONST .)
    ASSIGN_MINUS    reduce using rule 20 (int_const -> INT_CONST .)
    SEMI            reduce using rule 20 (int_const -> INT_CONST .)
    COMMA           reduce using rule 20 (int_const -> INT_CONST .)
    RPAREN          reduce using rule 20 (int_const -> INT_CONST .)
    RBRACE          reduce using rule 20 (int_const -> INT_CONST .)
    WHILE           reduce using rule 20 (int_const -> INT_CONST .)
    FOR             reduce using rule 20 (int_const -> INT_CONST .)
    LBRACE          reduce using rule 20 (int_const -> INT_CONST .)
    BREAK           reduce using rule 20 (int_const -> INT_CONST .)
    RETURN          reduce using rule 20 (int_const -> INT_CONST .)
    ASSERT          reduce using rule 20 (int_const -> INT_CONST .)
    PRINT           reduce using rule 20 (int_const -> INT_CONST .)
    IF              reduce using rule 20 (int_const -> INT_CONST .)
    READ            reduce using rule 20 (int_const -> INT_CONST .)
    ADDRESS         reduce using rule 20 (int_const -> INT_CONST .)
    NOT             reduce using rule 20 (int_const -> INT_CONST .)
    ID              reduce using rule 20 (int_const -> INT_CONST .)
    INT_CONST       reduce using rule 20 (int_const -> INT_CONST .)
    FLOAT_CONST     reduce using rule 20 (int_const -> INT_CONST .)
    STRING          reduce using rule 20 (int_const -> INT_CONST .)
    ELSE            reduce using rule 20 (int_const -> INT_CONST .)
    RBRACKET        reduce using rule 20 (int_const -> INT_CONST .)


state 50

    (21) float_const -> FLOAT_CONST .

    LBRACKET        reduce using rule 21 (float_const -> FLOAT_CONST .)
    LPAREN          reduce using rule 21 (float_const -> FLOAT_CONST .)
    PLUSPLUS        reduce using rule 21 (float_const -> FLOAT_CONST .)
    MINUSMINUS      reduce using rule 21 (float_const -> FLOAT_CONST .)
    TIMES           reduce using rule 21 (float_const -> FLOAT_CONST .)
    DIVIDE          reduce using rule 21 (float_const -> FLOAT_CONST .)
    MOD             reduce using rule 21 (float_const -> FLOAT_CONST .)
    MINUS           reduce using rule 21 (float_const -> FLOAT_CONST .)
    PLUS            reduce using rule 21 (float_const -> FLOAT_CONST .)
    LT              reduce using rule 21 (float_const -> FLOAT_CONST .)
    LE              reduce using rule 21 (float_const -> FLOAT_CONST .)
    HT              reduce using rule 21 (float_const -> FLOAT_CONST .)
    HE              reduce using rule 21 (float_const -> FLOAT_CONST .)
    EQUALS          reduce using rule 21 (float_const -> FLOAT_CONST .)
    DIFF            reduce using rule 21 (float_const -> FLOAT_CONST .)
    AND             reduce using rule 21 (float_const -> FLOAT_CONST .)
    OR              reduce using rule 21 (float_const -> FLOAT_CONST .)
    EQ              reduce using rule 21 (float_const -> FLOAT_CONST .)
    ASSIGN_TIMES    reduce using rule 21 (float_const -> FLOAT_CONST .)
    ASSIGN_DIVIDE   reduce using rule 21 (float_const -> FLOAT_CONST .)
    ASSIGN_MOD      reduce using rule 21 (float_const -> FLOAT_CONST .)
    ASSIGN_PLUS     reduce using rule 21 (float_const -> FLOAT_CONST .)
    ASSIGN_MINUS    reduce using rule 21 (float_const -> FLOAT_CONST .)
    SEMI            reduce using rule 21 (float_const -> FLOAT_CONST .)
    COMMA           reduce using rule 21 (float_const -> FLOAT_CONST .)
    RPAREN          reduce using rule 21 (float_const -> FLOAT_CONST .)
    RBRACE          reduce using rule 21 (float_const -> FLOAT_CONST .)
    WHILE           reduce using rule 21 (float_const -> FLOAT_CONST .)
    FOR             reduce using rule 21 (float_const -> FLOAT_CONST .)
    LBRACE          reduce using rule 21 (float_const -> FLOAT_CONST .)
    BREAK           reduce using rule 21 (float_const -> FLOAT_CONST .)
    RETURN          reduce using rule 21 (float_const -> FLOAT_CONST .)
    ASSERT          reduce using rule 21 (float_const -> FLOAT_CONST .)
    PRINT           reduce using rule 21 (float_const -> FLOAT_CONST .)
    IF              reduce using rule 21 (float_const -> FLOAT_CONST .)
    READ            reduce using rule 21 (float_const -> FLOAT_CONST .)
    ADDRESS         reduce using rule 21 (float_const -> FLOAT_CONST .)
    NOT             reduce using rule 21 (float_const -> FLOAT_CONST .)
    ID              reduce using rule 21 (float_const -> FLOAT_CONST .)
    INT_CONST       reduce using rule 21 (float_const -> FLOAT_CONST .)
    FLOAT_CONST     reduce using rule 21 (float_const -> FLOAT_CONST .)
    STRING          reduce using rule 21 (float_const -> FLOAT_CONST .)
    ELSE            reduce using rule 21 (float_const -> FLOAT_CONST .)
    RBRACKET        reduce using rule 21 (float_const -> FLOAT_CONST .)


state 51

    (19) frase -> STRING .

    LBRACKET        reduce using rule 19 (frase -> STRING .)
    LPAREN          reduce using rule 19 (frase -> STRING .)
    PLUSPLUS        reduce using rule 19 (frase -> STRING .)
    MINUSMINUS      reduce using rule 19 (frase -> STRING .)
    TIMES           reduce using rule 19 (frase -> STRING .)
    DIVIDE          reduce using rule 19 (frase -> STRING .)
    MOD             reduce using rule 19 (frase -> STRING .)
    MINUS           reduce using rule 19 (frase -> STRING .)
    PLUS            reduce using rule 19 (frase -> STRING .)
    LT              reduce using rule 19 (frase -> STRING .)
    LE              reduce using rule 19 (frase -> STRING .)
    HT              reduce using rule 19 (frase -> STRING .)
    HE              reduce using rule 19 (frase -> STRING .)
    EQUALS          reduce using rule 19 (frase -> STRING .)
    DIFF            reduce using rule 19 (frase -> STRING .)
    AND             reduce using rule 19 (frase -> STRING .)
    OR              reduce using rule 19 (frase -> STRING .)
    EQ              reduce using rule 19 (frase -> STRING .)
    ASSIGN_TIMES    reduce using rule 19 (frase -> STRING .)
    ASSIGN_DIVIDE   reduce using rule 19 (frase -> STRING .)
    ASSIGN_MOD      reduce using rule 19 (frase -> STRING .)
    ASSIGN_PLUS     reduce using rule 19 (frase -> STRING .)
    ASSIGN_MINUS    reduce using rule 19 (frase -> STRING .)
    SEMI            reduce using rule 19 (frase -> STRING .)
    COMMA           reduce using rule 19 (frase -> STRING .)
    RPAREN          reduce using rule 19 (frase -> STRING .)
    RBRACE          reduce using rule 19 (frase -> STRING .)
    WHILE           reduce using rule 19 (frase -> STRING .)
    FOR             reduce using rule 19 (frase -> STRING .)
    LBRACE          reduce using rule 19 (frase -> STRING .)
    BREAK           reduce using rule 19 (frase -> STRING .)
    RETURN          reduce using rule 19 (frase -> STRING .)
    ASSERT          reduce using rule 19 (frase -> STRING .)
    PRINT           reduce using rule 19 (frase -> STRING .)
    IF              reduce using rule 19 (frase -> STRING .)
    READ            reduce using rule 19 (frase -> STRING .)
    ADDRESS         reduce using rule 19 (frase -> STRING .)
    NOT             reduce using rule 19 (frase -> STRING .)
    ID              reduce using rule 19 (frase -> STRING .)
    INT_CONST       reduce using rule 19 (frase -> STRING .)
    FLOAT_CONST     reduce using rule 19 (frase -> STRING .)
    STRING          reduce using rule 19 (frase -> STRING .)
    ELSE            reduce using rule 19 (frase -> STRING .)
    RBRACKET        reduce using rule 19 (frase -> STRING .)


state 52

    (26) declarator -> declarator LPAREN parameter_list . RPAREN
    (83) parameter_list -> parameter_list . COMMA parameter_declaration

    RPAREN          shift and go to state 112
    COMMA           shift and go to state 113


state 53

    (27) declarator -> declarator LPAREN RPAREN .

    RBRACKET        reduce using rule 27 (declarator -> declarator LPAREN RPAREN .)
    LPAREN          reduce using rule 27 (declarator -> declarator LPAREN RPAREN .)
    LBRACE          reduce using rule 27 (declarator -> declarator LPAREN RPAREN .)
    VOID            reduce using rule 27 (declarator -> declarator LPAREN RPAREN .)
    CHAR            reduce using rule 27 (declarator -> declarator LPAREN RPAREN .)
    INT             reduce using rule 27 (declarator -> declarator LPAREN RPAREN .)
    FLOAT           reduce using rule 27 (declarator -> declarator LPAREN RPAREN .)
    EQ              reduce using rule 27 (declarator -> declarator LPAREN RPAREN .)
    SEMI            reduce using rule 27 (declarator -> declarator LPAREN RPAREN .)
    RPAREN          reduce using rule 27 (declarator -> declarator LPAREN RPAREN .)
    COMMA           reduce using rule 27 (declarator -> declarator LPAREN RPAREN .)
    ID              reduce using rule 27 (declarator -> declarator LPAREN RPAREN .)


state 54

    (28) declarator -> declarator LPAREN identifier . RPAREN

    RPAREN          shift and go to state 114


state 55

    (82) parameter_list -> parameter_declaration .

    RPAREN          reduce using rule 82 (parameter_list -> parameter_declaration .)
    COMMA           reduce using rule 82 (parameter_list -> parameter_declaration .)


state 56

    (84) parameter_declaration -> type_specifier . declarator
    (22) declarator -> . identifier
    (23) declarator -> . LPAREN declarator RPAREN
    (24) declarator -> . declarator RBRACKET LBRACKET
    (25) declarator -> . declarator RBRACKET constant_expression LBRACKET
    (26) declarator -> . declarator LPAREN parameter_list RPAREN
    (27) declarator -> . declarator LPAREN RPAREN
    (28) declarator -> . declarator LPAREN identifier RPAREN
    (18) identifier -> . ID

    LPAREN          shift and go to state 9
    ID              shift and go to state 14

    declarator                     shift and go to state 115
    identifier                     shift and go to state 8

state 57

    (61) compound_statement -> LBRACE RBRACE .

    LPAREN          reduce using rule 61 (compound_statement -> LBRACE RBRACE .)
    VOID            reduce using rule 61 (compound_statement -> LBRACE RBRACE .)
    CHAR            reduce using rule 61 (compound_statement -> LBRACE RBRACE .)
    INT             reduce using rule 61 (compound_statement -> LBRACE RBRACE .)
    FLOAT           reduce using rule 61 (compound_statement -> LBRACE RBRACE .)
    ID              reduce using rule 61 (compound_statement -> LBRACE RBRACE .)
    $end            reduce using rule 61 (compound_statement -> LBRACE RBRACE .)
    RBRACE          reduce using rule 61 (compound_statement -> LBRACE RBRACE .)
    SEMI            reduce using rule 61 (compound_statement -> LBRACE RBRACE .)
    WHILE           reduce using rule 61 (compound_statement -> LBRACE RBRACE .)
    FOR             reduce using rule 61 (compound_statement -> LBRACE RBRACE .)
    LBRACE          reduce using rule 61 (compound_statement -> LBRACE RBRACE .)
    BREAK           reduce using rule 61 (compound_statement -> LBRACE RBRACE .)
    RETURN          reduce using rule 61 (compound_statement -> LBRACE RBRACE .)
    ASSERT          reduce using rule 61 (compound_statement -> LBRACE RBRACE .)
    PRINT           reduce using rule 61 (compound_statement -> LBRACE RBRACE .)
    IF              reduce using rule 61 (compound_statement -> LBRACE RBRACE .)
    READ            reduce using rule 61 (compound_statement -> LBRACE RBRACE .)
    PLUSPLUS        reduce using rule 61 (compound_statement -> LBRACE RBRACE .)
    MINUSMINUS      reduce using rule 61 (compound_statement -> LBRACE RBRACE .)
    ADDRESS         reduce using rule 61 (compound_statement -> LBRACE RBRACE .)
    TIMES           reduce using rule 61 (compound_statement -> LBRACE RBRACE .)
    PLUS            reduce using rule 61 (compound_statement -> LBRACE RBRACE .)
    MINUS           reduce using rule 61 (compound_statement -> LBRACE RBRACE .)
    NOT             reduce using rule 61 (compound_statement -> LBRACE RBRACE .)
    INT_CONST       reduce using rule 61 (compound_statement -> LBRACE RBRACE .)
    FLOAT_CONST     reduce using rule 61 (compound_statement -> LBRACE RBRACE .)
    STRING          reduce using rule 61 (compound_statement -> LBRACE RBRACE .)
    ELSE            reduce using rule 61 (compound_statement -> LBRACE RBRACE .)


state 58

    (62) compound_statement -> LBRACE declaration_list . RBRACE
    (64) compound_statement -> LBRACE declaration_list . statement_list RBRACE
    (11) declaration_list -> declaration_list . declaration
    (12) statement_list -> . statement
    (13) statement_list -> . statement_list statement
    (85) declaration -> . type_specifier SEMI
    (86) declaration -> . type_specifier init_declarator SEMI
    (94) statement -> . expression_statement
    (95) statement -> . iteration_statement
    (96) statement -> . compound_statement
    (97) statement -> . jump_statement
    (98) statement -> . assert_statement
    (99) statement -> . print_statement
    (100) statement -> . selection_statement
    (101) statement -> . read_statement
    (14) type_specifier -> . VOID
    (15) type_specifier -> . CHAR
    (16) type_specifier -> . INT
    (17) type_specifier -> . FLOAT
    (102) expression_statement -> . SEMI
    (103) expression_statement -> . expression SEMI
    (106) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (107) iteration_statement -> . FOR LPAREN SEMI SEMI RPAREN statement
    (108) iteration_statement -> . FOR LPAREN expression SEMI SEMI RPAREN statement
    (109) iteration_statement -> . FOR LPAREN SEMI expression SEMI RPAREN statement
    (110) iteration_statement -> . FOR LPAREN SEMI SEMI expression RPAREN statement
    (111) iteration_statement -> . FOR LPAREN expression SEMI expression SEMI RPAREN statement
    (112) iteration_statement -> . FOR LPAREN expression SEMI SEMI expression RPAREN statement
    (113) iteration_statement -> . FOR LPAREN SEMI expression SEMI expression RPAREN statement
    (114) iteration_statement -> . FOR LPAREN expression SEMI expression SEMI expression RPAREN statement
    (61) compound_statement -> . LBRACE RBRACE
    (62) compound_statement -> . LBRACE declaration_list RBRACE
    (63) compound_statement -> . LBRACE statement_list RBRACE
    (64) compound_statement -> . LBRACE declaration_list statement_list RBRACE
    (115) jump_statement -> . BREAK
    (116) jump_statement -> . RETURN
    (117) jump_statement -> . RETURN expression
    (118) assert_statement -> . ASSERT expression SEMI
    (119) print_statement -> . PRINT LPAREN expression RPAREN SEMI
    (104) selection_statement -> . IF LPAREN expression RPAREN statement
    (105) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (120) read_statement -> . READ LPAREN declarator_list RPAREN SEMI
    (69) expression -> . assignment_expression
    (70) expression -> . expression COMMA assignment_expression
    (67) assignment_expression -> . binary_expression
    (68) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (30) binary_expression -> . cast_expression
    (31) binary_expression -> . binary_expression TIMES binary_expression
    (32) binary_expression -> . binary_expression DIVIDE binary_expression
    (33) binary_expression -> . binary_expression MOD binary_expression
    (34) binary_expression -> . binary_expression MINUS binary_expression
    (35) binary_expression -> . binary_expression PLUS binary_expression
    (36) binary_expression -> . binary_expression LT binary_expression
    (37) binary_expression -> . binary_expression LE binary_expression
    (38) binary_expression -> . binary_expression HT binary_expression
    (39) binary_expression -> . binary_expression HE binary_expression
    (40) binary_expression -> . binary_expression EQUALS binary_expression
    (41) binary_expression -> . binary_expression DIFF binary_expression
    (42) binary_expression -> . binary_expression AND binary_expression
    (43) binary_expression -> . binary_expression OR binary_expression
    (46) unary_expression -> . postfix_expression
    (47) unary_expression -> . PLUSPLUS unary_expression
    (48) unary_expression -> . MINUSMINUS unary_expression
    (49) unary_expression -> . unary_operator cast_expression
    (44) cast_expression -> . unary_expression
    (45) cast_expression -> . LPAREN type_specifier RPAREN cast_expression
    (50) postfix_expression -> . primary_expression
    (51) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (52) postfix_expression -> . postfix_expression LPAREN RPAREN
    (53) postfix_expression -> . postfix_expression LPAREN assignment_expression_list RPAREN
    (54) postfix_expression -> . postfix_expression PLUSPLUS
    (55) postfix_expression -> . postfix_expression MINUSMINUS
    (77) unary_operator -> . ADDRESS
    (78) unary_operator -> . TIMES
    (79) unary_operator -> . PLUS
    (80) unary_operator -> . MINUS
    (81) unary_operator -> . NOT
    (56) primary_expression -> . identifier
    (57) primary_expression -> . int_const
    (58) primary_expression -> . float_const
    (59) primary_expression -> . frase
    (60) primary_expression -> . LPAREN expression RPAREN
    (18) identifier -> . ID
    (20) int_const -> . INT_CONST
    (21) float_const -> . FLOAT_CONST
    (19) frase -> . STRING

    RBRACE          shift and go to state 116
    VOID            shift and go to state 10
    CHAR            shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    SEMI            shift and go to state 61
    WHILE           shift and go to state 71
    FOR             shift and go to state 72
    LBRACE          shift and go to state 20
    BREAK           shift and go to state 73
    RETURN          shift and go to state 74
    ASSERT          shift and go to state 75
    PRINT           shift and go to state 76
    IF              shift and go to state 77
    READ            shift and go to state 78
    PLUSPLUS        shift and go to state 39
    MINUSMINUS      shift and go to state 40
    LPAREN          shift and go to state 37
    ADDRESS         shift and go to state 43
    TIMES           shift and go to state 33
    PLUS            shift and go to state 35
    MINUS           shift and go to state 34
    NOT             shift and go to state 44
    ID              shift and go to state 14
    INT_CONST       shift and go to state 49
    FLOAT_CONST     shift and go to state 50
    STRING          shift and go to state 51

    statement_list                 shift and go to state 117
    declaration                    shift and go to state 28
    statement                      shift and go to state 60
    type_specifier                 shift and go to state 22
    expression_statement           shift and go to state 62
    iteration_statement            shift and go to state 63
    compound_statement             shift and go to state 64
    jump_statement                 shift and go to state 65
    assert_statement               shift and go to state 66
    print_statement                shift and go to state 67
    selection_statement            shift and go to state 68
    read_statement                 shift and go to state 69
    expression                     shift and go to state 70
    assignment_expression          shift and go to state 79
    binary_expression              shift and go to state 80
    unary_expression               shift and go to state 81
    cast_expression                shift and go to state 32
    postfix_expression             shift and go to state 38
    unary_operator                 shift and go to state 41
    primary_expression             shift and go to state 42
    identifier                     shift and go to state 45
    int_const                      shift and go to state 46
    float_const                    shift and go to state 47
    frase                          shift and go to state 48

state 59

    (63) compound_statement -> LBRACE statement_list . RBRACE
    (13) statement_list -> statement_list . statement
    (94) statement -> . expression_statement
    (95) statement -> . iteration_statement
    (96) statement -> . compound_statement
    (97) statement -> . jump_statement
    (98) statement -> . assert_statement
    (99) statement -> . print_statement
    (100) statement -> . selection_statement
    (101) statement -> . read_statement
    (102) expression_statement -> . SEMI
    (103) expression_statement -> . expression SEMI
    (106) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (107) iteration_statement -> . FOR LPAREN SEMI SEMI RPAREN statement
    (108) iteration_statement -> . FOR LPAREN expression SEMI SEMI RPAREN statement
    (109) iteration_statement -> . FOR LPAREN SEMI expression SEMI RPAREN statement
    (110) iteration_statement -> . FOR LPAREN SEMI SEMI expression RPAREN statement
    (111) iteration_statement -> . FOR LPAREN expression SEMI expression SEMI RPAREN statement
    (112) iteration_statement -> . FOR LPAREN expression SEMI SEMI expression RPAREN statement
    (113) iteration_statement -> . FOR LPAREN SEMI expression SEMI expression RPAREN statement
    (114) iteration_statement -> . FOR LPAREN expression SEMI expression SEMI expression RPAREN statement
    (61) compound_statement -> . LBRACE RBRACE
    (62) compound_statement -> . LBRACE declaration_list RBRACE
    (63) compound_statement -> . LBRACE statement_list RBRACE
    (64) compound_statement -> . LBRACE declaration_list statement_list RBRACE
    (115) jump_statement -> . BREAK
    (116) jump_statement -> . RETURN
    (117) jump_statement -> . RETURN expression
    (118) assert_statement -> . ASSERT expression SEMI
    (119) print_statement -> . PRINT LPAREN expression RPAREN SEMI
    (104) selection_statement -> . IF LPAREN expression RPAREN statement
    (105) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (120) read_statement -> . READ LPAREN declarator_list RPAREN SEMI
    (69) expression -> . assignment_expression
    (70) expression -> . expression COMMA assignment_expression
    (67) assignment_expression -> . binary_expression
    (68) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (30) binary_expression -> . cast_expression
    (31) binary_expression -> . binary_expression TIMES binary_expression
    (32) binary_expression -> . binary_expression DIVIDE binary_expression
    (33) binary_expression -> . binary_expression MOD binary_expression
    (34) binary_expression -> . binary_expression MINUS binary_expression
    (35) binary_expression -> . binary_expression PLUS binary_expression
    (36) binary_expression -> . binary_expression LT binary_expression
    (37) binary_expression -> . binary_expression LE binary_expression
    (38) binary_expression -> . binary_expression HT binary_expression
    (39) binary_expression -> . binary_expression HE binary_expression
    (40) binary_expression -> . binary_expression EQUALS binary_expression
    (41) binary_expression -> . binary_expression DIFF binary_expression
    (42) binary_expression -> . binary_expression AND binary_expression
    (43) binary_expression -> . binary_expression OR binary_expression
    (46) unary_expression -> . postfix_expression
    (47) unary_expression -> . PLUSPLUS unary_expression
    (48) unary_expression -> . MINUSMINUS unary_expression
    (49) unary_expression -> . unary_operator cast_expression
    (44) cast_expression -> . unary_expression
    (45) cast_expression -> . LPAREN type_specifier RPAREN cast_expression
    (50) postfix_expression -> . primary_expression
    (51) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (52) postfix_expression -> . postfix_expression LPAREN RPAREN
    (53) postfix_expression -> . postfix_expression LPAREN assignment_expression_list RPAREN
    (54) postfix_expression -> . postfix_expression PLUSPLUS
    (55) postfix_expression -> . postfix_expression MINUSMINUS
    (77) unary_operator -> . ADDRESS
    (78) unary_operator -> . TIMES
    (79) unary_operator -> . PLUS
    (80) unary_operator -> . MINUS
    (81) unary_operator -> . NOT
    (56) primary_expression -> . identifier
    (57) primary_expression -> . int_const
    (58) primary_expression -> . float_const
    (59) primary_expression -> . frase
    (60) primary_expression -> . LPAREN expression RPAREN
    (18) identifier -> . ID
    (20) int_const -> . INT_CONST
    (21) float_const -> . FLOAT_CONST
    (19) frase -> . STRING

    RBRACE          shift and go to state 118
    SEMI            shift and go to state 61
    WHILE           shift and go to state 71
    FOR             shift and go to state 72
    LBRACE          shift and go to state 20
    BREAK           shift and go to state 73
    RETURN          shift and go to state 74
    ASSERT          shift and go to state 75
    PRINT           shift and go to state 76
    IF              shift and go to state 77
    READ            shift and go to state 78
    PLUSPLUS        shift and go to state 39
    MINUSMINUS      shift and go to state 40
    LPAREN          shift and go to state 37
    ADDRESS         shift and go to state 43
    TIMES           shift and go to state 33
    PLUS            shift and go to state 35
    MINUS           shift and go to state 34
    NOT             shift and go to state 44
    ID              shift and go to state 14
    INT_CONST       shift and go to state 49
    FLOAT_CONST     shift and go to state 50
    STRING          shift and go to state 51

    statement                      shift and go to state 119
    expression_statement           shift and go to state 62
    iteration_statement            shift and go to state 63
    compound_statement             shift and go to state 64
    jump_statement                 shift and go to state 65
    assert_statement               shift and go to state 66
    print_statement                shift and go to state 67
    selection_statement            shift and go to state 68
    read_statement                 shift and go to state 69
    expression                     shift and go to state 70
    assignment_expression          shift and go to state 79
    binary_expression              shift and go to state 80
    unary_expression               shift and go to state 81
    cast_expression                shift and go to state 32
    postfix_expression             shift and go to state 38
    unary_operator                 shift and go to state 41
    primary_expression             shift and go to state 42
    identifier                     shift and go to state 45
    int_const                      shift and go to state 46
    float_const                    shift and go to state 47
    frase                          shift and go to state 48

state 60

    (12) statement_list -> statement .

    RBRACE          reduce using rule 12 (statement_list -> statement .)
    SEMI            reduce using rule 12 (statement_list -> statement .)
    WHILE           reduce using rule 12 (statement_list -> statement .)
    FOR             reduce using rule 12 (statement_list -> statement .)
    LBRACE          reduce using rule 12 (statement_list -> statement .)
    BREAK           reduce using rule 12 (statement_list -> statement .)
    RETURN          reduce using rule 12 (statement_list -> statement .)
    ASSERT          reduce using rule 12 (statement_list -> statement .)
    PRINT           reduce using rule 12 (statement_list -> statement .)
    IF              reduce using rule 12 (statement_list -> statement .)
    READ            reduce using rule 12 (statement_list -> statement .)
    PLUSPLUS        reduce using rule 12 (statement_list -> statement .)
    MINUSMINUS      reduce using rule 12 (statement_list -> statement .)
    LPAREN          reduce using rule 12 (statement_list -> statement .)
    ADDRESS         reduce using rule 12 (statement_list -> statement .)
    TIMES           reduce using rule 12 (statement_list -> statement .)
    PLUS            reduce using rule 12 (statement_list -> statement .)
    MINUS           reduce using rule 12 (statement_list -> statement .)
    NOT             reduce using rule 12 (statement_list -> statement .)
    ID              reduce using rule 12 (statement_list -> statement .)
    INT_CONST       reduce using rule 12 (statement_list -> statement .)
    FLOAT_CONST     reduce using rule 12 (statement_list -> statement .)
    STRING          reduce using rule 12 (statement_list -> statement .)


state 61

    (102) expression_statement -> SEMI .

    RBRACE          reduce using rule 102 (expression_statement -> SEMI .)
    SEMI            reduce using rule 102 (expression_statement -> SEMI .)
    WHILE           reduce using rule 102 (expression_statement -> SEMI .)
    FOR             reduce using rule 102 (expression_statement -> SEMI .)
    LBRACE          reduce using rule 102 (expression_statement -> SEMI .)
    BREAK           reduce using rule 102 (expression_statement -> SEMI .)
    RETURN          reduce using rule 102 (expression_statement -> SEMI .)
    ASSERT          reduce using rule 102 (expression_statement -> SEMI .)
    PRINT           reduce using rule 102 (expression_statement -> SEMI .)
    IF              reduce using rule 102 (expression_statement -> SEMI .)
    READ            reduce using rule 102 (expression_statement -> SEMI .)
    PLUSPLUS        reduce using rule 102 (expression_statement -> SEMI .)
    MINUSMINUS      reduce using rule 102 (expression_statement -> SEMI .)
    LPAREN          reduce using rule 102 (expression_statement -> SEMI .)
    ADDRESS         reduce using rule 102 (expression_statement -> SEMI .)
    TIMES           reduce using rule 102 (expression_statement -> SEMI .)
    PLUS            reduce using rule 102 (expression_statement -> SEMI .)
    MINUS           reduce using rule 102 (expression_statement -> SEMI .)
    NOT             reduce using rule 102 (expression_statement -> SEMI .)
    ID              reduce using rule 102 (expression_statement -> SEMI .)
    INT_CONST       reduce using rule 102 (expression_statement -> SEMI .)
    FLOAT_CONST     reduce using rule 102 (expression_statement -> SEMI .)
    STRING          reduce using rule 102 (expression_statement -> SEMI .)
    ELSE            reduce using rule 102 (expression_statement -> SEMI .)


state 62

    (94) statement -> expression_statement .

    RBRACE          reduce using rule 94 (statement -> expression_statement .)
    SEMI            reduce using rule 94 (statement -> expression_statement .)
    WHILE           reduce using rule 94 (statement -> expression_statement .)
    FOR             reduce using rule 94 (statement -> expression_statement .)
    LBRACE          reduce using rule 94 (statement -> expression_statement .)
    BREAK           reduce using rule 94 (statement -> expression_statement .)
    RETURN          reduce using rule 94 (statement -> expression_statement .)
    ASSERT          reduce using rule 94 (statement -> expression_statement .)
    PRINT           reduce using rule 94 (statement -> expression_statement .)
    IF              reduce using rule 94 (statement -> expression_statement .)
    READ            reduce using rule 94 (statement -> expression_statement .)
    PLUSPLUS        reduce using rule 94 (statement -> expression_statement .)
    MINUSMINUS      reduce using rule 94 (statement -> expression_statement .)
    LPAREN          reduce using rule 94 (statement -> expression_statement .)
    ADDRESS         reduce using rule 94 (statement -> expression_statement .)
    TIMES           reduce using rule 94 (statement -> expression_statement .)
    PLUS            reduce using rule 94 (statement -> expression_statement .)
    MINUS           reduce using rule 94 (statement -> expression_statement .)
    NOT             reduce using rule 94 (statement -> expression_statement .)
    ID              reduce using rule 94 (statement -> expression_statement .)
    INT_CONST       reduce using rule 94 (statement -> expression_statement .)
    FLOAT_CONST     reduce using rule 94 (statement -> expression_statement .)
    STRING          reduce using rule 94 (statement -> expression_statement .)
    ELSE            reduce using rule 94 (statement -> expression_statement .)


state 63

    (95) statement -> iteration_statement .

    RBRACE          reduce using rule 95 (statement -> iteration_statement .)
    SEMI            reduce using rule 95 (statement -> iteration_statement .)
    WHILE           reduce using rule 95 (statement -> iteration_statement .)
    FOR             reduce using rule 95 (statement -> iteration_statement .)
    LBRACE          reduce using rule 95 (statement -> iteration_statement .)
    BREAK           reduce using rule 95 (statement -> iteration_statement .)
    RETURN          reduce using rule 95 (statement -> iteration_statement .)
    ASSERT          reduce using rule 95 (statement -> iteration_statement .)
    PRINT           reduce using rule 95 (statement -> iteration_statement .)
    IF              reduce using rule 95 (statement -> iteration_statement .)
    READ            reduce using rule 95 (statement -> iteration_statement .)
    PLUSPLUS        reduce using rule 95 (statement -> iteration_statement .)
    MINUSMINUS      reduce using rule 95 (statement -> iteration_statement .)
    LPAREN          reduce using rule 95 (statement -> iteration_statement .)
    ADDRESS         reduce using rule 95 (statement -> iteration_statement .)
    TIMES           reduce using rule 95 (statement -> iteration_statement .)
    PLUS            reduce using rule 95 (statement -> iteration_statement .)
    MINUS           reduce using rule 95 (statement -> iteration_statement .)
    NOT             reduce using rule 95 (statement -> iteration_statement .)
    ID              reduce using rule 95 (statement -> iteration_statement .)
    INT_CONST       reduce using rule 95 (statement -> iteration_statement .)
    FLOAT_CONST     reduce using rule 95 (statement -> iteration_statement .)
    STRING          reduce using rule 95 (statement -> iteration_statement .)
    ELSE            reduce using rule 95 (statement -> iteration_statement .)


state 64

    (96) statement -> compound_statement .

    RBRACE          reduce using rule 96 (statement -> compound_statement .)
    SEMI            reduce using rule 96 (statement -> compound_statement .)
    WHILE           reduce using rule 96 (statement -> compound_statement .)
    FOR             reduce using rule 96 (statement -> compound_statement .)
    LBRACE          reduce using rule 96 (statement -> compound_statement .)
    BREAK           reduce using rule 96 (statement -> compound_statement .)
    RETURN          reduce using rule 96 (statement -> compound_statement .)
    ASSERT          reduce using rule 96 (statement -> compound_statement .)
    PRINT           reduce using rule 96 (statement -> compound_statement .)
    IF              reduce using rule 96 (statement -> compound_statement .)
    READ            reduce using rule 96 (statement -> compound_statement .)
    PLUSPLUS        reduce using rule 96 (statement -> compound_statement .)
    MINUSMINUS      reduce using rule 96 (statement -> compound_statement .)
    LPAREN          reduce using rule 96 (statement -> compound_statement .)
    ADDRESS         reduce using rule 96 (statement -> compound_statement .)
    TIMES           reduce using rule 96 (statement -> compound_statement .)
    PLUS            reduce using rule 96 (statement -> compound_statement .)
    MINUS           reduce using rule 96 (statement -> compound_statement .)
    NOT             reduce using rule 96 (statement -> compound_statement .)
    ID              reduce using rule 96 (statement -> compound_statement .)
    INT_CONST       reduce using rule 96 (statement -> compound_statement .)
    FLOAT_CONST     reduce using rule 96 (statement -> compound_statement .)
    STRING          reduce using rule 96 (statement -> compound_statement .)
    ELSE            reduce using rule 96 (statement -> compound_statement .)


state 65

    (97) statement -> jump_statement .

    RBRACE          reduce using rule 97 (statement -> jump_statement .)
    SEMI            reduce using rule 97 (statement -> jump_statement .)
    WHILE           reduce using rule 97 (statement -> jump_statement .)
    FOR             reduce using rule 97 (statement -> jump_statement .)
    LBRACE          reduce using rule 97 (statement -> jump_statement .)
    BREAK           reduce using rule 97 (statement -> jump_statement .)
    RETURN          reduce using rule 97 (statement -> jump_statement .)
    ASSERT          reduce using rule 97 (statement -> jump_statement .)
    PRINT           reduce using rule 97 (statement -> jump_statement .)
    IF              reduce using rule 97 (statement -> jump_statement .)
    READ            reduce using rule 97 (statement -> jump_statement .)
    PLUSPLUS        reduce using rule 97 (statement -> jump_statement .)
    MINUSMINUS      reduce using rule 97 (statement -> jump_statement .)
    LPAREN          reduce using rule 97 (statement -> jump_statement .)
    ADDRESS         reduce using rule 97 (statement -> jump_statement .)
    TIMES           reduce using rule 97 (statement -> jump_statement .)
    PLUS            reduce using rule 97 (statement -> jump_statement .)
    MINUS           reduce using rule 97 (statement -> jump_statement .)
    NOT             reduce using rule 97 (statement -> jump_statement .)
    ID              reduce using rule 97 (statement -> jump_statement .)
    INT_CONST       reduce using rule 97 (statement -> jump_statement .)
    FLOAT_CONST     reduce using rule 97 (statement -> jump_statement .)
    STRING          reduce using rule 97 (statement -> jump_statement .)
    ELSE            reduce using rule 97 (statement -> jump_statement .)


state 66

    (98) statement -> assert_statement .

    RBRACE          reduce using rule 98 (statement -> assert_statement .)
    SEMI            reduce using rule 98 (statement -> assert_statement .)
    WHILE           reduce using rule 98 (statement -> assert_statement .)
    FOR             reduce using rule 98 (statement -> assert_statement .)
    LBRACE          reduce using rule 98 (statement -> assert_statement .)
    BREAK           reduce using rule 98 (statement -> assert_statement .)
    RETURN          reduce using rule 98 (statement -> assert_statement .)
    ASSERT          reduce using rule 98 (statement -> assert_statement .)
    PRINT           reduce using rule 98 (statement -> assert_statement .)
    IF              reduce using rule 98 (statement -> assert_statement .)
    READ            reduce using rule 98 (statement -> assert_statement .)
    PLUSPLUS        reduce using rule 98 (statement -> assert_statement .)
    MINUSMINUS      reduce using rule 98 (statement -> assert_statement .)
    LPAREN          reduce using rule 98 (statement -> assert_statement .)
    ADDRESS         reduce using rule 98 (statement -> assert_statement .)
    TIMES           reduce using rule 98 (statement -> assert_statement .)
    PLUS            reduce using rule 98 (statement -> assert_statement .)
    MINUS           reduce using rule 98 (statement -> assert_statement .)
    NOT             reduce using rule 98 (statement -> assert_statement .)
    ID              reduce using rule 98 (statement -> assert_statement .)
    INT_CONST       reduce using rule 98 (statement -> assert_statement .)
    FLOAT_CONST     reduce using rule 98 (statement -> assert_statement .)
    STRING          reduce using rule 98 (statement -> assert_statement .)
    ELSE            reduce using rule 98 (statement -> assert_statement .)


state 67

    (99) statement -> print_statement .

    RBRACE          reduce using rule 99 (statement -> print_statement .)
    SEMI            reduce using rule 99 (statement -> print_statement .)
    WHILE           reduce using rule 99 (statement -> print_statement .)
    FOR             reduce using rule 99 (statement -> print_statement .)
    LBRACE          reduce using rule 99 (statement -> print_statement .)
    BREAK           reduce using rule 99 (statement -> print_statement .)
    RETURN          reduce using rule 99 (statement -> print_statement .)
    ASSERT          reduce using rule 99 (statement -> print_statement .)
    PRINT           reduce using rule 99 (statement -> print_statement .)
    IF              reduce using rule 99 (statement -> print_statement .)
    READ            reduce using rule 99 (statement -> print_statement .)
    PLUSPLUS        reduce using rule 99 (statement -> print_statement .)
    MINUSMINUS      reduce using rule 99 (statement -> print_statement .)
    LPAREN          reduce using rule 99 (statement -> print_statement .)
    ADDRESS         reduce using rule 99 (statement -> print_statement .)
    TIMES           reduce using rule 99 (statement -> print_statement .)
    PLUS            reduce using rule 99 (statement -> print_statement .)
    MINUS           reduce using rule 99 (statement -> print_statement .)
    NOT             reduce using rule 99 (statement -> print_statement .)
    ID              reduce using rule 99 (statement -> print_statement .)
    INT_CONST       reduce using rule 99 (statement -> print_statement .)
    FLOAT_CONST     reduce using rule 99 (statement -> print_statement .)
    STRING          reduce using rule 99 (statement -> print_statement .)
    ELSE            reduce using rule 99 (statement -> print_statement .)


state 68

    (100) statement -> selection_statement .

    RBRACE          reduce using rule 100 (statement -> selection_statement .)
    SEMI            reduce using rule 100 (statement -> selection_statement .)
    WHILE           reduce using rule 100 (statement -> selection_statement .)
    FOR             reduce using rule 100 (statement -> selection_statement .)
    LBRACE          reduce using rule 100 (statement -> selection_statement .)
    BREAK           reduce using rule 100 (statement -> selection_statement .)
    RETURN          reduce using rule 100 (statement -> selection_statement .)
    ASSERT          reduce using rule 100 (statement -> selection_statement .)
    PRINT           reduce using rule 100 (statement -> selection_statement .)
    IF              reduce using rule 100 (statement -> selection_statement .)
    READ            reduce using rule 100 (statement -> selection_statement .)
    PLUSPLUS        reduce using rule 100 (statement -> selection_statement .)
    MINUSMINUS      reduce using rule 100 (statement -> selection_statement .)
    LPAREN          reduce using rule 100 (statement -> selection_statement .)
    ADDRESS         reduce using rule 100 (statement -> selection_statement .)
    TIMES           reduce using rule 100 (statement -> selection_statement .)
    PLUS            reduce using rule 100 (statement -> selection_statement .)
    MINUS           reduce using rule 100 (statement -> selection_statement .)
    NOT             reduce using rule 100 (statement -> selection_statement .)
    ID              reduce using rule 100 (statement -> selection_statement .)
    INT_CONST       reduce using rule 100 (statement -> selection_statement .)
    FLOAT_CONST     reduce using rule 100 (statement -> selection_statement .)
    STRING          reduce using rule 100 (statement -> selection_statement .)
    ELSE            reduce using rule 100 (statement -> selection_statement .)


state 69

    (101) statement -> read_statement .

    RBRACE          reduce using rule 101 (statement -> read_statement .)
    SEMI            reduce using rule 101 (statement -> read_statement .)
    WHILE           reduce using rule 101 (statement -> read_statement .)
    FOR             reduce using rule 101 (statement -> read_statement .)
    LBRACE          reduce using rule 101 (statement -> read_statement .)
    BREAK           reduce using rule 101 (statement -> read_statement .)
    RETURN          reduce using rule 101 (statement -> read_statement .)
    ASSERT          reduce using rule 101 (statement -> read_statement .)
    PRINT           reduce using rule 101 (statement -> read_statement .)
    IF              reduce using rule 101 (statement -> read_statement .)
    READ            reduce using rule 101 (statement -> read_statement .)
    PLUSPLUS        reduce using rule 101 (statement -> read_statement .)
    MINUSMINUS      reduce using rule 101 (statement -> read_statement .)
    LPAREN          reduce using rule 101 (statement -> read_statement .)
    ADDRESS         reduce using rule 101 (statement -> read_statement .)
    TIMES           reduce using rule 101 (statement -> read_statement .)
    PLUS            reduce using rule 101 (statement -> read_statement .)
    MINUS           reduce using rule 101 (statement -> read_statement .)
    NOT             reduce using rule 101 (statement -> read_statement .)
    ID              reduce using rule 101 (statement -> read_statement .)
    INT_CONST       reduce using rule 101 (statement -> read_statement .)
    FLOAT_CONST     reduce using rule 101 (statement -> read_statement .)
    STRING          reduce using rule 101 (statement -> read_statement .)
    ELSE            reduce using rule 101 (statement -> read_statement .)


state 70

    (103) expression_statement -> expression . SEMI
    (70) expression -> expression . COMMA assignment_expression

    SEMI            shift and go to state 120
    COMMA           shift and go to state 121


state 71

    (106) iteration_statement -> WHILE . LPAREN expression RPAREN statement

    LPAREN          shift and go to state 122


state 72

    (107) iteration_statement -> FOR . LPAREN SEMI SEMI RPAREN statement
    (108) iteration_statement -> FOR . LPAREN expression SEMI SEMI RPAREN statement
    (109) iteration_statement -> FOR . LPAREN SEMI expression SEMI RPAREN statement
    (110) iteration_statement -> FOR . LPAREN SEMI SEMI expression RPAREN statement
    (111) iteration_statement -> FOR . LPAREN expression SEMI expression SEMI RPAREN statement
    (112) iteration_statement -> FOR . LPAREN expression SEMI SEMI expression RPAREN statement
    (113) iteration_statement -> FOR . LPAREN SEMI expression SEMI expression RPAREN statement
    (114) iteration_statement -> FOR . LPAREN expression SEMI expression SEMI expression RPAREN statement

    LPAREN          shift and go to state 123


state 73

    (115) jump_statement -> BREAK .

    RBRACE          reduce using rule 115 (jump_statement -> BREAK .)
    SEMI            reduce using rule 115 (jump_statement -> BREAK .)
    WHILE           reduce using rule 115 (jump_statement -> BREAK .)
    FOR             reduce using rule 115 (jump_statement -> BREAK .)
    LBRACE          reduce using rule 115 (jump_statement -> BREAK .)
    BREAK           reduce using rule 115 (jump_statement -> BREAK .)
    RETURN          reduce using rule 115 (jump_statement -> BREAK .)
    ASSERT          reduce using rule 115 (jump_statement -> BREAK .)
    PRINT           reduce using rule 115 (jump_statement -> BREAK .)
    IF              reduce using rule 115 (jump_statement -> BREAK .)
    READ            reduce using rule 115 (jump_statement -> BREAK .)
    PLUSPLUS        reduce using rule 115 (jump_statement -> BREAK .)
    MINUSMINUS      reduce using rule 115 (jump_statement -> BREAK .)
    LPAREN          reduce using rule 115 (jump_statement -> BREAK .)
    ADDRESS         reduce using rule 115 (jump_statement -> BREAK .)
    TIMES           reduce using rule 115 (jump_statement -> BREAK .)
    PLUS            reduce using rule 115 (jump_statement -> BREAK .)
    MINUS           reduce using rule 115 (jump_statement -> BREAK .)
    NOT             reduce using rule 115 (jump_statement -> BREAK .)
    ID              reduce using rule 115 (jump_statement -> BREAK .)
    INT_CONST       reduce using rule 115 (jump_statement -> BREAK .)
    FLOAT_CONST     reduce using rule 115 (jump_statement -> BREAK .)
    STRING          reduce using rule 115 (jump_statement -> BREAK .)
    ELSE            reduce using rule 115 (jump_statement -> BREAK .)


state 74

    (116) jump_statement -> RETURN .
    (117) jump_statement -> RETURN . expression
    (69) expression -> . assignment_expression
    (70) expression -> . expression COMMA assignment_expression
    (67) assignment_expression -> . binary_expression
    (68) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (30) binary_expression -> . cast_expression
    (31) binary_expression -> . binary_expression TIMES binary_expression
    (32) binary_expression -> . binary_expression DIVIDE binary_expression
    (33) binary_expression -> . binary_expression MOD binary_expression
    (34) binary_expression -> . binary_expression MINUS binary_expression
    (35) binary_expression -> . binary_expression PLUS binary_expression
    (36) binary_expression -> . binary_expression LT binary_expression
    (37) binary_expression -> . binary_expression LE binary_expression
    (38) binary_expression -> . binary_expression HT binary_expression
    (39) binary_expression -> . binary_expression HE binary_expression
    (40) binary_expression -> . binary_expression EQUALS binary_expression
    (41) binary_expression -> . binary_expression DIFF binary_expression
    (42) binary_expression -> . binary_expression AND binary_expression
    (43) binary_expression -> . binary_expression OR binary_expression
    (46) unary_expression -> . postfix_expression
    (47) unary_expression -> . PLUSPLUS unary_expression
    (48) unary_expression -> . MINUSMINUS unary_expression
    (49) unary_expression -> . unary_operator cast_expression
    (44) cast_expression -> . unary_expression
    (45) cast_expression -> . LPAREN type_specifier RPAREN cast_expression
    (50) postfix_expression -> . primary_expression
    (51) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (52) postfix_expression -> . postfix_expression LPAREN RPAREN
    (53) postfix_expression -> . postfix_expression LPAREN assignment_expression_list RPAREN
    (54) postfix_expression -> . postfix_expression PLUSPLUS
    (55) postfix_expression -> . postfix_expression MINUSMINUS
    (77) unary_operator -> . ADDRESS
    (78) unary_operator -> . TIMES
    (79) unary_operator -> . PLUS
    (80) unary_operator -> . MINUS
    (81) unary_operator -> . NOT
    (56) primary_expression -> . identifier
    (57) primary_expression -> . int_const
    (58) primary_expression -> . float_const
    (59) primary_expression -> . frase
    (60) primary_expression -> . LPAREN expression RPAREN
    (18) identifier -> . ID
    (20) int_const -> . INT_CONST
    (21) float_const -> . FLOAT_CONST
    (19) frase -> . STRING

  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for ADDRESS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for INT_CONST resolved as shift
  ! shift/reduce conflict for FLOAT_CONST resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
    RBRACE          reduce using rule 116 (jump_statement -> RETURN .)
    SEMI            reduce using rule 116 (jump_statement -> RETURN .)
    WHILE           reduce using rule 116 (jump_statement -> RETURN .)
    FOR             reduce using rule 116 (jump_statement -> RETURN .)
    LBRACE          reduce using rule 116 (jump_statement -> RETURN .)
    BREAK           reduce using rule 116 (jump_statement -> RETURN .)
    RETURN          reduce using rule 116 (jump_statement -> RETURN .)
    ASSERT          reduce using rule 116 (jump_statement -> RETURN .)
    PRINT           reduce using rule 116 (jump_statement -> RETURN .)
    IF              reduce using rule 116 (jump_statement -> RETURN .)
    READ            reduce using rule 116 (jump_statement -> RETURN .)
    ELSE            reduce using rule 116 (jump_statement -> RETURN .)
    PLUSPLUS        shift and go to state 39
    MINUSMINUS      shift and go to state 40
    LPAREN          shift and go to state 37
    ADDRESS         shift and go to state 43
    TIMES           shift and go to state 33
    PLUS            shift and go to state 35
    MINUS           shift and go to state 34
    NOT             shift and go to state 44
    ID              shift and go to state 14
    INT_CONST       shift and go to state 49
    FLOAT_CONST     shift and go to state 50
    STRING          shift and go to state 51

  ! PLUSPLUS        [ reduce using rule 116 (jump_statement -> RETURN .) ]
  ! MINUSMINUS      [ reduce using rule 116 (jump_statement -> RETURN .) ]
  ! LPAREN          [ reduce using rule 116 (jump_statement -> RETURN .) ]
  ! ADDRESS         [ reduce using rule 116 (jump_statement -> RETURN .) ]
  ! TIMES           [ reduce using rule 116 (jump_statement -> RETURN .) ]
  ! PLUS            [ reduce using rule 116 (jump_statement -> RETURN .) ]
  ! MINUS           [ reduce using rule 116 (jump_statement -> RETURN .) ]
  ! NOT             [ reduce using rule 116 (jump_statement -> RETURN .) ]
  ! ID              [ reduce using rule 116 (jump_statement -> RETURN .) ]
  ! INT_CONST       [ reduce using rule 116 (jump_statement -> RETURN .) ]
  ! FLOAT_CONST     [ reduce using rule 116 (jump_statement -> RETURN .) ]
  ! STRING          [ reduce using rule 116 (jump_statement -> RETURN .) ]

    expression                     shift and go to state 124
    assignment_expression          shift and go to state 79
    binary_expression              shift and go to state 80
    unary_expression               shift and go to state 81
    cast_expression                shift and go to state 32
    postfix_expression             shift and go to state 38
    unary_operator                 shift and go to state 41
    primary_expression             shift and go to state 42
    identifier                     shift and go to state 45
    int_const                      shift and go to state 46
    float_const                    shift and go to state 47
    frase                          shift and go to state 48

state 75

    (118) assert_statement -> ASSERT . expression SEMI
    (69) expression -> . assignment_expression
    (70) expression -> . expression COMMA assignment_expression
    (67) assignment_expression -> . binary_expression
    (68) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (30) binary_expression -> . cast_expression
    (31) binary_expression -> . binary_expression TIMES binary_expression
    (32) binary_expression -> . binary_expression DIVIDE binary_expression
    (33) binary_expression -> . binary_expression MOD binary_expression
    (34) binary_expression -> . binary_expression MINUS binary_expression
    (35) binary_expression -> . binary_expression PLUS binary_expression
    (36) binary_expression -> . binary_expression LT binary_expression
    (37) binary_expression -> . binary_expression LE binary_expression
    (38) binary_expression -> . binary_expression HT binary_expression
    (39) binary_expression -> . binary_expression HE binary_expression
    (40) binary_expression -> . binary_expression EQUALS binary_expression
    (41) binary_expression -> . binary_expression DIFF binary_expression
    (42) binary_expression -> . binary_expression AND binary_expression
    (43) binary_expression -> . binary_expression OR binary_expression
    (46) unary_expression -> . postfix_expression
    (47) unary_expression -> . PLUSPLUS unary_expression
    (48) unary_expression -> . MINUSMINUS unary_expression
    (49) unary_expression -> . unary_operator cast_expression
    (44) cast_expression -> . unary_expression
    (45) cast_expression -> . LPAREN type_specifier RPAREN cast_expression
    (50) postfix_expression -> . primary_expression
    (51) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (52) postfix_expression -> . postfix_expression LPAREN RPAREN
    (53) postfix_expression -> . postfix_expression LPAREN assignment_expression_list RPAREN
    (54) postfix_expression -> . postfix_expression PLUSPLUS
    (55) postfix_expression -> . postfix_expression MINUSMINUS
    (77) unary_operator -> . ADDRESS
    (78) unary_operator -> . TIMES
    (79) unary_operator -> . PLUS
    (80) unary_operator -> . MINUS
    (81) unary_operator -> . NOT
    (56) primary_expression -> . identifier
    (57) primary_expression -> . int_const
    (58) primary_expression -> . float_const
    (59) primary_expression -> . frase
    (60) primary_expression -> . LPAREN expression RPAREN
    (18) identifier -> . ID
    (20) int_const -> . INT_CONST
    (21) float_const -> . FLOAT_CONST
    (19) frase -> . STRING

    PLUSPLUS        shift and go to state 39
    MINUSMINUS      shift and go to state 40
    LPAREN          shift and go to state 37
    ADDRESS         shift and go to state 43
    TIMES           shift and go to state 33
    PLUS            shift and go to state 35
    MINUS           shift and go to state 34
    NOT             shift and go to state 44
    ID              shift and go to state 14
    INT_CONST       shift and go to state 49
    FLOAT_CONST     shift and go to state 50
    STRING          shift and go to state 51

    expression                     shift and go to state 125
    assignment_expression          shift and go to state 79
    binary_expression              shift and go to state 80
    unary_expression               shift and go to state 81
    cast_expression                shift and go to state 32
    postfix_expression             shift and go to state 38
    unary_operator                 shift and go to state 41
    primary_expression             shift and go to state 42
    identifier                     shift and go to state 45
    int_const                      shift and go to state 46
    float_const                    shift and go to state 47
    frase                          shift and go to state 48

state 76

    (119) print_statement -> PRINT . LPAREN expression RPAREN SEMI

    LPAREN          shift and go to state 126


state 77

    (104) selection_statement -> IF . LPAREN expression RPAREN statement
    (105) selection_statement -> IF . LPAREN expression RPAREN statement ELSE statement

    LPAREN          shift and go to state 127


state 78

    (120) read_statement -> READ . LPAREN declarator_list RPAREN SEMI

    LPAREN          shift and go to state 128


state 79

    (69) expression -> assignment_expression .

    SEMI            reduce using rule 69 (expression -> assignment_expression .)
    COMMA           reduce using rule 69 (expression -> assignment_expression .)
    RPAREN          reduce using rule 69 (expression -> assignment_expression .)
    RBRACE          reduce using rule 69 (expression -> assignment_expression .)
    WHILE           reduce using rule 69 (expression -> assignment_expression .)
    FOR             reduce using rule 69 (expression -> assignment_expression .)
    LBRACE          reduce using rule 69 (expression -> assignment_expression .)
    BREAK           reduce using rule 69 (expression -> assignment_expression .)
    RETURN          reduce using rule 69 (expression -> assignment_expression .)
    ASSERT          reduce using rule 69 (expression -> assignment_expression .)
    PRINT           reduce using rule 69 (expression -> assignment_expression .)
    IF              reduce using rule 69 (expression -> assignment_expression .)
    READ            reduce using rule 69 (expression -> assignment_expression .)
    PLUSPLUS        reduce using rule 69 (expression -> assignment_expression .)
    MINUSMINUS      reduce using rule 69 (expression -> assignment_expression .)
    LPAREN          reduce using rule 69 (expression -> assignment_expression .)
    ADDRESS         reduce using rule 69 (expression -> assignment_expression .)
    TIMES           reduce using rule 69 (expression -> assignment_expression .)
    PLUS            reduce using rule 69 (expression -> assignment_expression .)
    MINUS           reduce using rule 69 (expression -> assignment_expression .)
    NOT             reduce using rule 69 (expression -> assignment_expression .)
    ID              reduce using rule 69 (expression -> assignment_expression .)
    INT_CONST       reduce using rule 69 (expression -> assignment_expression .)
    FLOAT_CONST     reduce using rule 69 (expression -> assignment_expression .)
    STRING          reduce using rule 69 (expression -> assignment_expression .)
    ELSE            reduce using rule 69 (expression -> assignment_expression .)
    RBRACKET        reduce using rule 69 (expression -> assignment_expression .)


state 80

    (67) assignment_expression -> binary_expression .
    (31) binary_expression -> binary_expression . TIMES binary_expression
    (32) binary_expression -> binary_expression . DIVIDE binary_expression
    (33) binary_expression -> binary_expression . MOD binary_expression
    (34) binary_expression -> binary_expression . MINUS binary_expression
    (35) binary_expression -> binary_expression . PLUS binary_expression
    (36) binary_expression -> binary_expression . LT binary_expression
    (37) binary_expression -> binary_expression . LE binary_expression
    (38) binary_expression -> binary_expression . HT binary_expression
    (39) binary_expression -> binary_expression . HE binary_expression
    (40) binary_expression -> binary_expression . EQUALS binary_expression
    (41) binary_expression -> binary_expression . DIFF binary_expression
    (42) binary_expression -> binary_expression . AND binary_expression
    (43) binary_expression -> binary_expression . OR binary_expression

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
    SEMI            reduce using rule 67 (assignment_expression -> binary_expression .)
    COMMA           reduce using rule 67 (assignment_expression -> binary_expression .)
    RPAREN          reduce using rule 67 (assignment_expression -> binary_expression .)
    RBRACE          reduce using rule 67 (assignment_expression -> binary_expression .)
    WHILE           reduce using rule 67 (assignment_expression -> binary_expression .)
    FOR             reduce using rule 67 (assignment_expression -> binary_expression .)
    LBRACE          reduce using rule 67 (assignment_expression -> binary_expression .)
    BREAK           reduce using rule 67 (assignment_expression -> binary_expression .)
    RETURN          reduce using rule 67 (assignment_expression -> binary_expression .)
    ASSERT          reduce using rule 67 (assignment_expression -> binary_expression .)
    PRINT           reduce using rule 67 (assignment_expression -> binary_expression .)
    IF              reduce using rule 67 (assignment_expression -> binary_expression .)
    READ            reduce using rule 67 (assignment_expression -> binary_expression .)
    PLUSPLUS        reduce using rule 67 (assignment_expression -> binary_expression .)
    MINUSMINUS      reduce using rule 67 (assignment_expression -> binary_expression .)
    LPAREN          reduce using rule 67 (assignment_expression -> binary_expression .)
    ADDRESS         reduce using rule 67 (assignment_expression -> binary_expression .)
    NOT             reduce using rule 67 (assignment_expression -> binary_expression .)
    ID              reduce using rule 67 (assignment_expression -> binary_expression .)
    INT_CONST       reduce using rule 67 (assignment_expression -> binary_expression .)
    FLOAT_CONST     reduce using rule 67 (assignment_expression -> binary_expression .)
    STRING          reduce using rule 67 (assignment_expression -> binary_expression .)
    ELSE            reduce using rule 67 (assignment_expression -> binary_expression .)
    RBRACKET        reduce using rule 67 (assignment_expression -> binary_expression .)
    TIMES           shift and go to state 89
    DIVIDE          shift and go to state 90
    MOD             shift and go to state 91
    MINUS           shift and go to state 92
    PLUS            shift and go to state 93
    LT              shift and go to state 94
    LE              shift and go to state 95
    HT              shift and go to state 96
    HE              shift and go to state 97
    EQUALS          shift and go to state 98
    DIFF            shift and go to state 99
    AND             shift and go to state 100
    OR              shift and go to state 101

  ! TIMES           [ reduce using rule 67 (assignment_expression -> binary_expression .) ]
  ! PLUS            [ reduce using rule 67 (assignment_expression -> binary_expression .) ]
  ! MINUS           [ reduce using rule 67 (assignment_expression -> binary_expression .) ]


state 81

    (68) assignment_expression -> unary_expression . assignment_operator assignment_expression
    (44) cast_expression -> unary_expression .
    (71) assignment_operator -> . EQ
    (72) assignment_operator -> . ASSIGN_TIMES
    (73) assignment_operator -> . ASSIGN_DIVIDE
    (74) assignment_operator -> . ASSIGN_MOD
    (75) assignment_operator -> . ASSIGN_PLUS
    (76) assignment_operator -> . ASSIGN_MINUS

    TIMES           reduce using rule 44 (cast_expression -> unary_expression .)
    DIVIDE          reduce using rule 44 (cast_expression -> unary_expression .)
    MOD             reduce using rule 44 (cast_expression -> unary_expression .)
    MINUS           reduce using rule 44 (cast_expression -> unary_expression .)
    PLUS            reduce using rule 44 (cast_expression -> unary_expression .)
    LT              reduce using rule 44 (cast_expression -> unary_expression .)
    LE              reduce using rule 44 (cast_expression -> unary_expression .)
    HT              reduce using rule 44 (cast_expression -> unary_expression .)
    HE              reduce using rule 44 (cast_expression -> unary_expression .)
    EQUALS          reduce using rule 44 (cast_expression -> unary_expression .)
    DIFF            reduce using rule 44 (cast_expression -> unary_expression .)
    AND             reduce using rule 44 (cast_expression -> unary_expression .)
    OR              reduce using rule 44 (cast_expression -> unary_expression .)
    SEMI            reduce using rule 44 (cast_expression -> unary_expression .)
    COMMA           reduce using rule 44 (cast_expression -> unary_expression .)
    RPAREN          reduce using rule 44 (cast_expression -> unary_expression .)
    RBRACE          reduce using rule 44 (cast_expression -> unary_expression .)
    WHILE           reduce using rule 44 (cast_expression -> unary_expression .)
    FOR             reduce using rule 44 (cast_expression -> unary_expression .)
    LBRACE          reduce using rule 44 (cast_expression -> unary_expression .)
    BREAK           reduce using rule 44 (cast_expression -> unary_expression .)
    RETURN          reduce using rule 44 (cast_expression -> unary_expression .)
    ASSERT          reduce using rule 44 (cast_expression -> unary_expression .)
    PRINT           reduce using rule 44 (cast_expression -> unary_expression .)
    IF              reduce using rule 44 (cast_expression -> unary_expression .)
    READ            reduce using rule 44 (cast_expression -> unary_expression .)
    PLUSPLUS        reduce using rule 44 (cast_expression -> unary_expression .)
    MINUSMINUS      reduce using rule 44 (cast_expression -> unary_expression .)
    LPAREN          reduce using rule 44 (cast_expression -> unary_expression .)
    ADDRESS         reduce using rule 44 (cast_expression -> unary_expression .)
    NOT             reduce using rule 44 (cast_expression -> unary_expression .)
    ID              reduce using rule 44 (cast_expression -> unary_expression .)
    INT_CONST       reduce using rule 44 (cast_expression -> unary_expression .)
    FLOAT_CONST     reduce using rule 44 (cast_expression -> unary_expression .)
    STRING          reduce using rule 44 (cast_expression -> unary_expression .)
    ELSE            reduce using rule 44 (cast_expression -> unary_expression .)
    RBRACKET        reduce using rule 44 (cast_expression -> unary_expression .)
    EQ              shift and go to state 130
    ASSIGN_TIMES    shift and go to state 131
    ASSIGN_DIVIDE   shift and go to state 132
    ASSIGN_MOD      shift and go to state 133
    ASSIGN_PLUS     shift and go to state 134
    ASSIGN_MINUS    shift and go to state 135

    assignment_operator            shift and go to state 129

state 82

    (87) init_declarator -> declarator .
    (88) init_declarator -> declarator . EQ initializer
    (24) declarator -> declarator . RBRACKET LBRACKET
    (25) declarator -> declarator . RBRACKET constant_expression LBRACKET
    (26) declarator -> declarator . LPAREN parameter_list RPAREN
    (27) declarator -> declarator . LPAREN RPAREN
    (28) declarator -> declarator . LPAREN identifier RPAREN

    SEMI            reduce using rule 87 (init_declarator -> declarator .)
    EQ              shift and go to state 85
    RBRACKET        shift and go to state 18
    LPAREN          shift and go to state 19


state 83

    (8) function_definition -> type_specifier declarator compound_statement .

    LPAREN          reduce using rule 8 (function_definition -> type_specifier declarator compound_statement .)
    VOID            reduce using rule 8 (function_definition -> type_specifier declarator compound_statement .)
    CHAR            reduce using rule 8 (function_definition -> type_specifier declarator compound_statement .)
    INT             reduce using rule 8 (function_definition -> type_specifier declarator compound_statement .)
    FLOAT           reduce using rule 8 (function_definition -> type_specifier declarator compound_statement .)
    ID              reduce using rule 8 (function_definition -> type_specifier declarator compound_statement .)
    $end            reduce using rule 8 (function_definition -> type_specifier declarator compound_statement .)


state 84

    (9) function_definition -> type_specifier declarator declaration_list . compound_statement
    (11) declaration_list -> declaration_list . declaration
    (61) compound_statement -> . LBRACE RBRACE
    (62) compound_statement -> . LBRACE declaration_list RBRACE
    (63) compound_statement -> . LBRACE statement_list RBRACE
    (64) compound_statement -> . LBRACE declaration_list statement_list RBRACE
    (85) declaration -> . type_specifier SEMI
    (86) declaration -> . type_specifier init_declarator SEMI
    (14) type_specifier -> . VOID
    (15) type_specifier -> . CHAR
    (16) type_specifier -> . INT
    (17) type_specifier -> . FLOAT

    LBRACE          shift and go to state 20
    VOID            shift and go to state 10
    CHAR            shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13

    type_specifier                 shift and go to state 22
    compound_statement             shift and go to state 136
    declaration                    shift and go to state 28

state 85

    (88) init_declarator -> declarator EQ . initializer
    (89) initializer -> . assignment_expression
    (90) initializer -> . LBRACE initializer_list RBRACE
    (91) initializer -> . LBRACE initializer_list COMMA RBRACE
    (67) assignment_expression -> . binary_expression
    (68) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (30) binary_expression -> . cast_expression
    (31) binary_expression -> . binary_expression TIMES binary_expression
    (32) binary_expression -> . binary_expression DIVIDE binary_expression
    (33) binary_expression -> . binary_expression MOD binary_expression
    (34) binary_expression -> . binary_expression MINUS binary_expression
    (35) binary_expression -> . binary_expression PLUS binary_expression
    (36) binary_expression -> . binary_expression LT binary_expression
    (37) binary_expression -> . binary_expression LE binary_expression
    (38) binary_expression -> . binary_expression HT binary_expression
    (39) binary_expression -> . binary_expression HE binary_expression
    (40) binary_expression -> . binary_expression EQUALS binary_expression
    (41) binary_expression -> . binary_expression DIFF binary_expression
    (42) binary_expression -> . binary_expression AND binary_expression
    (43) binary_expression -> . binary_expression OR binary_expression
    (46) unary_expression -> . postfix_expression
    (47) unary_expression -> . PLUSPLUS unary_expression
    (48) unary_expression -> . MINUSMINUS unary_expression
    (49) unary_expression -> . unary_operator cast_expression
    (44) cast_expression -> . unary_expression
    (45) cast_expression -> . LPAREN type_specifier RPAREN cast_expression
    (50) postfix_expression -> . primary_expression
    (51) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (52) postfix_expression -> . postfix_expression LPAREN RPAREN
    (53) postfix_expression -> . postfix_expression LPAREN assignment_expression_list RPAREN
    (54) postfix_expression -> . postfix_expression PLUSPLUS
    (55) postfix_expression -> . postfix_expression MINUSMINUS
    (77) unary_operator -> . ADDRESS
    (78) unary_operator -> . TIMES
    (79) unary_operator -> . PLUS
    (80) unary_operator -> . MINUS
    (81) unary_operator -> . NOT
    (56) primary_expression -> . identifier
    (57) primary_expression -> . int_const
    (58) primary_expression -> . float_const
    (59) primary_expression -> . frase
    (60) primary_expression -> . LPAREN expression RPAREN
    (18) identifier -> . ID
    (20) int_const -> . INT_CONST
    (21) float_const -> . FLOAT_CONST
    (19) frase -> . STRING

    LBRACE          shift and go to state 139
    PLUSPLUS        shift and go to state 39
    MINUSMINUS      shift and go to state 40
    LPAREN          shift and go to state 37
    ADDRESS         shift and go to state 43
    TIMES           shift and go to state 33
    PLUS            shift and go to state 35
    MINUS           shift and go to state 34
    NOT             shift and go to state 44
    ID              shift and go to state 14
    INT_CONST       shift and go to state 49
    FLOAT_CONST     shift and go to state 50
    STRING          shift and go to state 51

    initializer                    shift and go to state 137
    assignment_expression          shift and go to state 138
    binary_expression              shift and go to state 80
    unary_expression               shift and go to state 81
    cast_expression                shift and go to state 32
    postfix_expression             shift and go to state 38
    unary_operator                 shift and go to state 41
    primary_expression             shift and go to state 42
    identifier                     shift and go to state 45
    int_const                      shift and go to state 46
    float_const                    shift and go to state 47
    frase                          shift and go to state 48

state 86

    (86) declaration -> type_specifier init_declarator SEMI .

    LPAREN          reduce using rule 86 (declaration -> type_specifier init_declarator SEMI .)
    VOID            reduce using rule 86 (declaration -> type_specifier init_declarator SEMI .)
    CHAR            reduce using rule 86 (declaration -> type_specifier init_declarator SEMI .)
    INT             reduce using rule 86 (declaration -> type_specifier init_declarator SEMI .)
    FLOAT           reduce using rule 86 (declaration -> type_specifier init_declarator SEMI .)
    ID              reduce using rule 86 (declaration -> type_specifier init_declarator SEMI .)
    $end            reduce using rule 86 (declaration -> type_specifier init_declarator SEMI .)
    LBRACE          reduce using rule 86 (declaration -> type_specifier init_declarator SEMI .)
    RBRACE          reduce using rule 86 (declaration -> type_specifier init_declarator SEMI .)
    SEMI            reduce using rule 86 (declaration -> type_specifier init_declarator SEMI .)
    WHILE           reduce using rule 86 (declaration -> type_specifier init_declarator SEMI .)
    FOR             reduce using rule 86 (declaration -> type_specifier init_declarator SEMI .)
    BREAK           reduce using rule 86 (declaration -> type_specifier init_declarator SEMI .)
    RETURN          reduce using rule 86 (declaration -> type_specifier init_declarator SEMI .)
    ASSERT          reduce using rule 86 (declaration -> type_specifier init_declarator SEMI .)
    PRINT           reduce using rule 86 (declaration -> type_specifier init_declarator SEMI .)
    IF              reduce using rule 86 (declaration -> type_specifier init_declarator SEMI .)
    READ            reduce using rule 86 (declaration -> type_specifier init_declarator SEMI .)
    PLUSPLUS        reduce using rule 86 (declaration -> type_specifier init_declarator SEMI .)
    MINUSMINUS      reduce using rule 86 (declaration -> type_specifier init_declarator SEMI .)
    ADDRESS         reduce using rule 86 (declaration -> type_specifier init_declarator SEMI .)
    TIMES           reduce using rule 86 (declaration -> type_specifier init_declarator SEMI .)
    PLUS            reduce using rule 86 (declaration -> type_specifier init_declarator SEMI .)
    MINUS           reduce using rule 86 (declaration -> type_specifier init_declarator SEMI .)
    NOT             reduce using rule 86 (declaration -> type_specifier init_declarator SEMI .)
    INT_CONST       reduce using rule 86 (declaration -> type_specifier init_declarator SEMI .)
    FLOAT_CONST     reduce using rule 86 (declaration -> type_specifier init_declarator SEMI .)
    STRING          reduce using rule 86 (declaration -> type_specifier init_declarator SEMI .)


state 87

    (23) declarator -> LPAREN declarator RPAREN .

    RBRACKET        reduce using rule 23 (declarator -> LPAREN declarator RPAREN .)
    LPAREN          reduce using rule 23 (declarator -> LPAREN declarator RPAREN .)
    LBRACE          reduce using rule 23 (declarator -> LPAREN declarator RPAREN .)
    VOID            reduce using rule 23 (declarator -> LPAREN declarator RPAREN .)
    CHAR            reduce using rule 23 (declarator -> LPAREN declarator RPAREN .)
    INT             reduce using rule 23 (declarator -> LPAREN declarator RPAREN .)
    FLOAT           reduce using rule 23 (declarator -> LPAREN declarator RPAREN .)
    EQ              reduce using rule 23 (declarator -> LPAREN declarator RPAREN .)
    SEMI            reduce using rule 23 (declarator -> LPAREN declarator RPAREN .)
    RPAREN          reduce using rule 23 (declarator -> LPAREN declarator RPAREN .)
    COMMA           reduce using rule 23 (declarator -> LPAREN declarator RPAREN .)
    ID              reduce using rule 23 (declarator -> LPAREN declarator RPAREN .)


state 88

    (25) declarator -> declarator RBRACKET constant_expression LBRACKET .

    RBRACKET        reduce using rule 25 (declarator -> declarator RBRACKET constant_expression LBRACKET .)
    LPAREN          reduce using rule 25 (declarator -> declarator RBRACKET constant_expression LBRACKET .)
    LBRACE          reduce using rule 25 (declarator -> declarator RBRACKET constant_expression LBRACKET .)
    VOID            reduce using rule 25 (declarator -> declarator RBRACKET constant_expression LBRACKET .)
    CHAR            reduce using rule 25 (declarator -> declarator RBRACKET constant_expression LBRACKET .)
    INT             reduce using rule 25 (declarator -> declarator RBRACKET constant_expression LBRACKET .)
    FLOAT           reduce using rule 25 (declarator -> declarator RBRACKET constant_expression LBRACKET .)
    EQ              reduce using rule 25 (declarator -> declarator RBRACKET constant_expression LBRACKET .)
    SEMI            reduce using rule 25 (declarator -> declarator RBRACKET constant_expression LBRACKET .)
    RPAREN          reduce using rule 25 (declarator -> declarator RBRACKET constant_expression LBRACKET .)
    COMMA           reduce using rule 25 (declarator -> declarator RBRACKET constant_expression LBRACKET .)
    ID              reduce using rule 25 (declarator -> declarator RBRACKET constant_expression LBRACKET .)


state 89

    (31) binary_expression -> binary_expression TIMES . binary_expression
    (30) binary_expression -> . cast_expression
    (31) binary_expression -> . binary_expression TIMES binary_expression
    (32) binary_expression -> . binary_expression DIVIDE binary_expression
    (33) binary_expression -> . binary_expression MOD binary_expression
    (34) binary_expression -> . binary_expression MINUS binary_expression
    (35) binary_expression -> . binary_expression PLUS binary_expression
    (36) binary_expression -> . binary_expression LT binary_expression
    (37) binary_expression -> . binary_expression LE binary_expression
    (38) binary_expression -> . binary_expression HT binary_expression
    (39) binary_expression -> . binary_expression HE binary_expression
    (40) binary_expression -> . binary_expression EQUALS binary_expression
    (41) binary_expression -> . binary_expression DIFF binary_expression
    (42) binary_expression -> . binary_expression AND binary_expression
    (43) binary_expression -> . binary_expression OR binary_expression
    (44) cast_expression -> . unary_expression
    (45) cast_expression -> . LPAREN type_specifier RPAREN cast_expression
    (46) unary_expression -> . postfix_expression
    (47) unary_expression -> . PLUSPLUS unary_expression
    (48) unary_expression -> . MINUSMINUS unary_expression
    (49) unary_expression -> . unary_operator cast_expression
    (50) postfix_expression -> . primary_expression
    (51) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (52) postfix_expression -> . postfix_expression LPAREN RPAREN
    (53) postfix_expression -> . postfix_expression LPAREN assignment_expression_list RPAREN
    (54) postfix_expression -> . postfix_expression PLUSPLUS
    (55) postfix_expression -> . postfix_expression MINUSMINUS
    (77) unary_operator -> . ADDRESS
    (78) unary_operator -> . TIMES
    (79) unary_operator -> . PLUS
    (80) unary_operator -> . MINUS
    (81) unary_operator -> . NOT
    (56) primary_expression -> . identifier
    (57) primary_expression -> . int_const
    (58) primary_expression -> . float_const
    (59) primary_expression -> . frase
    (60) primary_expression -> . LPAREN expression RPAREN
    (18) identifier -> . ID
    (20) int_const -> . INT_CONST
    (21) float_const -> . FLOAT_CONST
    (19) frase -> . STRING

    LPAREN          shift and go to state 37
    PLUSPLUS        shift and go to state 39
    MINUSMINUS      shift and go to state 40
    ADDRESS         shift and go to state 43
    TIMES           shift and go to state 33
    PLUS            shift and go to state 35
    MINUS           shift and go to state 34
    NOT             shift and go to state 44
    ID              shift and go to state 14
    INT_CONST       shift and go to state 49
    FLOAT_CONST     shift and go to state 50
    STRING          shift and go to state 51

    binary_expression              shift and go to state 140
    cast_expression                shift and go to state 32
    unary_expression               shift and go to state 36
    postfix_expression             shift and go to state 38
    unary_operator                 shift and go to state 41
    primary_expression             shift and go to state 42
    identifier                     shift and go to state 45
    int_const                      shift and go to state 46
    float_const                    shift and go to state 47
    frase                          shift and go to state 48

state 90

    (32) binary_expression -> binary_expression DIVIDE . binary_expression
    (30) binary_expression -> . cast_expression
    (31) binary_expression -> . binary_expression TIMES binary_expression
    (32) binary_expression -> . binary_expression DIVIDE binary_expression
    (33) binary_expression -> . binary_expression MOD binary_expression
    (34) binary_expression -> . binary_expression MINUS binary_expression
    (35) binary_expression -> . binary_expression PLUS binary_expression
    (36) binary_expression -> . binary_expression LT binary_expression
    (37) binary_expression -> . binary_expression LE binary_expression
    (38) binary_expression -> . binary_expression HT binary_expression
    (39) binary_expression -> . binary_expression HE binary_expression
    (40) binary_expression -> . binary_expression EQUALS binary_expression
    (41) binary_expression -> . binary_expression DIFF binary_expression
    (42) binary_expression -> . binary_expression AND binary_expression
    (43) binary_expression -> . binary_expression OR binary_expression
    (44) cast_expression -> . unary_expression
    (45) cast_expression -> . LPAREN type_specifier RPAREN cast_expression
    (46) unary_expression -> . postfix_expression
    (47) unary_expression -> . PLUSPLUS unary_expression
    (48) unary_expression -> . MINUSMINUS unary_expression
    (49) unary_expression -> . unary_operator cast_expression
    (50) postfix_expression -> . primary_expression
    (51) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (52) postfix_expression -> . postfix_expression LPAREN RPAREN
    (53) postfix_expression -> . postfix_expression LPAREN assignment_expression_list RPAREN
    (54) postfix_expression -> . postfix_expression PLUSPLUS
    (55) postfix_expression -> . postfix_expression MINUSMINUS
    (77) unary_operator -> . ADDRESS
    (78) unary_operator -> . TIMES
    (79) unary_operator -> . PLUS
    (80) unary_operator -> . MINUS
    (81) unary_operator -> . NOT
    (56) primary_expression -> . identifier
    (57) primary_expression -> . int_const
    (58) primary_expression -> . float_const
    (59) primary_expression -> . frase
    (60) primary_expression -> . LPAREN expression RPAREN
    (18) identifier -> . ID
    (20) int_const -> . INT_CONST
    (21) float_const -> . FLOAT_CONST
    (19) frase -> . STRING

    LPAREN          shift and go to state 37
    PLUSPLUS        shift and go to state 39
    MINUSMINUS      shift and go to state 40
    ADDRESS         shift and go to state 43
    TIMES           shift and go to state 33
    PLUS            shift and go to state 35
    MINUS           shift and go to state 34
    NOT             shift and go to state 44
    ID              shift and go to state 14
    INT_CONST       shift and go to state 49
    FLOAT_CONST     shift and go to state 50
    STRING          shift and go to state 51

    binary_expression              shift and go to state 141
    cast_expression                shift and go to state 32
    unary_expression               shift and go to state 36
    postfix_expression             shift and go to state 38
    unary_operator                 shift and go to state 41
    primary_expression             shift and go to state 42
    identifier                     shift and go to state 45
    int_const                      shift and go to state 46
    float_const                    shift and go to state 47
    frase                          shift and go to state 48

state 91

    (33) binary_expression -> binary_expression MOD . binary_expression
    (30) binary_expression -> . cast_expression
    (31) binary_expression -> . binary_expression TIMES binary_expression
    (32) binary_expression -> . binary_expression DIVIDE binary_expression
    (33) binary_expression -> . binary_expression MOD binary_expression
    (34) binary_expression -> . binary_expression MINUS binary_expression
    (35) binary_expression -> . binary_expression PLUS binary_expression
    (36) binary_expression -> . binary_expression LT binary_expression
    (37) binary_expression -> . binary_expression LE binary_expression
    (38) binary_expression -> . binary_expression HT binary_expression
    (39) binary_expression -> . binary_expression HE binary_expression
    (40) binary_expression -> . binary_expression EQUALS binary_expression
    (41) binary_expression -> . binary_expression DIFF binary_expression
    (42) binary_expression -> . binary_expression AND binary_expression
    (43) binary_expression -> . binary_expression OR binary_expression
    (44) cast_expression -> . unary_expression
    (45) cast_expression -> . LPAREN type_specifier RPAREN cast_expression
    (46) unary_expression -> . postfix_expression
    (47) unary_expression -> . PLUSPLUS unary_expression
    (48) unary_expression -> . MINUSMINUS unary_expression
    (49) unary_expression -> . unary_operator cast_expression
    (50) postfix_expression -> . primary_expression
    (51) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (52) postfix_expression -> . postfix_expression LPAREN RPAREN
    (53) postfix_expression -> . postfix_expression LPAREN assignment_expression_list RPAREN
    (54) postfix_expression -> . postfix_expression PLUSPLUS
    (55) postfix_expression -> . postfix_expression MINUSMINUS
    (77) unary_operator -> . ADDRESS
    (78) unary_operator -> . TIMES
    (79) unary_operator -> . PLUS
    (80) unary_operator -> . MINUS
    (81) unary_operator -> . NOT
    (56) primary_expression -> . identifier
    (57) primary_expression -> . int_const
    (58) primary_expression -> . float_const
    (59) primary_expression -> . frase
    (60) primary_expression -> . LPAREN expression RPAREN
    (18) identifier -> . ID
    (20) int_const -> . INT_CONST
    (21) float_const -> . FLOAT_CONST
    (19) frase -> . STRING

    LPAREN          shift and go to state 37
    PLUSPLUS        shift and go to state 39
    MINUSMINUS      shift and go to state 40
    ADDRESS         shift and go to state 43
    TIMES           shift and go to state 33
    PLUS            shift and go to state 35
    MINUS           shift and go to state 34
    NOT             shift and go to state 44
    ID              shift and go to state 14
    INT_CONST       shift and go to state 49
    FLOAT_CONST     shift and go to state 50
    STRING          shift and go to state 51

    binary_expression              shift and go to state 142
    cast_expression                shift and go to state 32
    unary_expression               shift and go to state 36
    postfix_expression             shift and go to state 38
    unary_operator                 shift and go to state 41
    primary_expression             shift and go to state 42
    identifier                     shift and go to state 45
    int_const                      shift and go to state 46
    float_const                    shift and go to state 47
    frase                          shift and go to state 48

state 92

    (34) binary_expression -> binary_expression MINUS . binary_expression
    (30) binary_expression -> . cast_expression
    (31) binary_expression -> . binary_expression TIMES binary_expression
    (32) binary_expression -> . binary_expression DIVIDE binary_expression
    (33) binary_expression -> . binary_expression MOD binary_expression
    (34) binary_expression -> . binary_expression MINUS binary_expression
    (35) binary_expression -> . binary_expression PLUS binary_expression
    (36) binary_expression -> . binary_expression LT binary_expression
    (37) binary_expression -> . binary_expression LE binary_expression
    (38) binary_expression -> . binary_expression HT binary_expression
    (39) binary_expression -> . binary_expression HE binary_expression
    (40) binary_expression -> . binary_expression EQUALS binary_expression
    (41) binary_expression -> . binary_expression DIFF binary_expression
    (42) binary_expression -> . binary_expression AND binary_expression
    (43) binary_expression -> . binary_expression OR binary_expression
    (44) cast_expression -> . unary_expression
    (45) cast_expression -> . LPAREN type_specifier RPAREN cast_expression
    (46) unary_expression -> . postfix_expression
    (47) unary_expression -> . PLUSPLUS unary_expression
    (48) unary_expression -> . MINUSMINUS unary_expression
    (49) unary_expression -> . unary_operator cast_expression
    (50) postfix_expression -> . primary_expression
    (51) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (52) postfix_expression -> . postfix_expression LPAREN RPAREN
    (53) postfix_expression -> . postfix_expression LPAREN assignment_expression_list RPAREN
    (54) postfix_expression -> . postfix_expression PLUSPLUS
    (55) postfix_expression -> . postfix_expression MINUSMINUS
    (77) unary_operator -> . ADDRESS
    (78) unary_operator -> . TIMES
    (79) unary_operator -> . PLUS
    (80) unary_operator -> . MINUS
    (81) unary_operator -> . NOT
    (56) primary_expression -> . identifier
    (57) primary_expression -> . int_const
    (58) primary_expression -> . float_const
    (59) primary_expression -> . frase
    (60) primary_expression -> . LPAREN expression RPAREN
    (18) identifier -> . ID
    (20) int_const -> . INT_CONST
    (21) float_const -> . FLOAT_CONST
    (19) frase -> . STRING

    LPAREN          shift and go to state 37
    PLUSPLUS        shift and go to state 39
    MINUSMINUS      shift and go to state 40
    ADDRESS         shift and go to state 43
    TIMES           shift and go to state 33
    PLUS            shift and go to state 35
    MINUS           shift and go to state 34
    NOT             shift and go to state 44
    ID              shift and go to state 14
    INT_CONST       shift and go to state 49
    FLOAT_CONST     shift and go to state 50
    STRING          shift and go to state 51

    binary_expression              shift and go to state 143
    cast_expression                shift and go to state 32
    unary_expression               shift and go to state 36
    postfix_expression             shift and go to state 38
    unary_operator                 shift and go to state 41
    primary_expression             shift and go to state 42
    identifier                     shift and go to state 45
    int_const                      shift and go to state 46
    float_const                    shift and go to state 47
    frase                          shift and go to state 48

state 93

    (35) binary_expression -> binary_expression PLUS . binary_expression
    (30) binary_expression -> . cast_expression
    (31) binary_expression -> . binary_expression TIMES binary_expression
    (32) binary_expression -> . binary_expression DIVIDE binary_expression
    (33) binary_expression -> . binary_expression MOD binary_expression
    (34) binary_expression -> . binary_expression MINUS binary_expression
    (35) binary_expression -> . binary_expression PLUS binary_expression
    (36) binary_expression -> . binary_expression LT binary_expression
    (37) binary_expression -> . binary_expression LE binary_expression
    (38) binary_expression -> . binary_expression HT binary_expression
    (39) binary_expression -> . binary_expression HE binary_expression
    (40) binary_expression -> . binary_expression EQUALS binary_expression
    (41) binary_expression -> . binary_expression DIFF binary_expression
    (42) binary_expression -> . binary_expression AND binary_expression
    (43) binary_expression -> . binary_expression OR binary_expression
    (44) cast_expression -> . unary_expression
    (45) cast_expression -> . LPAREN type_specifier RPAREN cast_expression
    (46) unary_expression -> . postfix_expression
    (47) unary_expression -> . PLUSPLUS unary_expression
    (48) unary_expression -> . MINUSMINUS unary_expression
    (49) unary_expression -> . unary_operator cast_expression
    (50) postfix_expression -> . primary_expression
    (51) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (52) postfix_expression -> . postfix_expression LPAREN RPAREN
    (53) postfix_expression -> . postfix_expression LPAREN assignment_expression_list RPAREN
    (54) postfix_expression -> . postfix_expression PLUSPLUS
    (55) postfix_expression -> . postfix_expression MINUSMINUS
    (77) unary_operator -> . ADDRESS
    (78) unary_operator -> . TIMES
    (79) unary_operator -> . PLUS
    (80) unary_operator -> . MINUS
    (81) unary_operator -> . NOT
    (56) primary_expression -> . identifier
    (57) primary_expression -> . int_const
    (58) primary_expression -> . float_const
    (59) primary_expression -> . frase
    (60) primary_expression -> . LPAREN expression RPAREN
    (18) identifier -> . ID
    (20) int_const -> . INT_CONST
    (21) float_const -> . FLOAT_CONST
    (19) frase -> . STRING

    LPAREN          shift and go to state 37
    PLUSPLUS        shift and go to state 39
    MINUSMINUS      shift and go to state 40
    ADDRESS         shift and go to state 43
    TIMES           shift and go to state 33
    PLUS            shift and go to state 35
    MINUS           shift and go to state 34
    NOT             shift and go to state 44
    ID              shift and go to state 14
    INT_CONST       shift and go to state 49
    FLOAT_CONST     shift and go to state 50
    STRING          shift and go to state 51

    binary_expression              shift and go to state 144
    cast_expression                shift and go to state 32
    unary_expression               shift and go to state 36
    postfix_expression             shift and go to state 38
    unary_operator                 shift and go to state 41
    primary_expression             shift and go to state 42
    identifier                     shift and go to state 45
    int_const                      shift and go to state 46
    float_const                    shift and go to state 47
    frase                          shift and go to state 48

state 94

    (36) binary_expression -> binary_expression LT . binary_expression
    (30) binary_expression -> . cast_expression
    (31) binary_expression -> . binary_expression TIMES binary_expression
    (32) binary_expression -> . binary_expression DIVIDE binary_expression
    (33) binary_expression -> . binary_expression MOD binary_expression
    (34) binary_expression -> . binary_expression MINUS binary_expression
    (35) binary_expression -> . binary_expression PLUS binary_expression
    (36) binary_expression -> . binary_expression LT binary_expression
    (37) binary_expression -> . binary_expression LE binary_expression
    (38) binary_expression -> . binary_expression HT binary_expression
    (39) binary_expression -> . binary_expression HE binary_expression
    (40) binary_expression -> . binary_expression EQUALS binary_expression
    (41) binary_expression -> . binary_expression DIFF binary_expression
    (42) binary_expression -> . binary_expression AND binary_expression
    (43) binary_expression -> . binary_expression OR binary_expression
    (44) cast_expression -> . unary_expression
    (45) cast_expression -> . LPAREN type_specifier RPAREN cast_expression
    (46) unary_expression -> . postfix_expression
    (47) unary_expression -> . PLUSPLUS unary_expression
    (48) unary_expression -> . MINUSMINUS unary_expression
    (49) unary_expression -> . unary_operator cast_expression
    (50) postfix_expression -> . primary_expression
    (51) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (52) postfix_expression -> . postfix_expression LPAREN RPAREN
    (53) postfix_expression -> . postfix_expression LPAREN assignment_expression_list RPAREN
    (54) postfix_expression -> . postfix_expression PLUSPLUS
    (55) postfix_expression -> . postfix_expression MINUSMINUS
    (77) unary_operator -> . ADDRESS
    (78) unary_operator -> . TIMES
    (79) unary_operator -> . PLUS
    (80) unary_operator -> . MINUS
    (81) unary_operator -> . NOT
    (56) primary_expression -> . identifier
    (57) primary_expression -> . int_const
    (58) primary_expression -> . float_const
    (59) primary_expression -> . frase
    (60) primary_expression -> . LPAREN expression RPAREN
    (18) identifier -> . ID
    (20) int_const -> . INT_CONST
    (21) float_const -> . FLOAT_CONST
    (19) frase -> . STRING

    LPAREN          shift and go to state 37
    PLUSPLUS        shift and go to state 39
    MINUSMINUS      shift and go to state 40
    ADDRESS         shift and go to state 43
    TIMES           shift and go to state 33
    PLUS            shift and go to state 35
    MINUS           shift and go to state 34
    NOT             shift and go to state 44
    ID              shift and go to state 14
    INT_CONST       shift and go to state 49
    FLOAT_CONST     shift and go to state 50
    STRING          shift and go to state 51

    binary_expression              shift and go to state 145
    cast_expression                shift and go to state 32
    unary_expression               shift and go to state 36
    postfix_expression             shift and go to state 38
    unary_operator                 shift and go to state 41
    primary_expression             shift and go to state 42
    identifier                     shift and go to state 45
    int_const                      shift and go to state 46
    float_const                    shift and go to state 47
    frase                          shift and go to state 48

state 95

    (37) binary_expression -> binary_expression LE . binary_expression
    (30) binary_expression -> . cast_expression
    (31) binary_expression -> . binary_expression TIMES binary_expression
    (32) binary_expression -> . binary_expression DIVIDE binary_expression
    (33) binary_expression -> . binary_expression MOD binary_expression
    (34) binary_expression -> . binary_expression MINUS binary_expression
    (35) binary_expression -> . binary_expression PLUS binary_expression
    (36) binary_expression -> . binary_expression LT binary_expression
    (37) binary_expression -> . binary_expression LE binary_expression
    (38) binary_expression -> . binary_expression HT binary_expression
    (39) binary_expression -> . binary_expression HE binary_expression
    (40) binary_expression -> . binary_expression EQUALS binary_expression
    (41) binary_expression -> . binary_expression DIFF binary_expression
    (42) binary_expression -> . binary_expression AND binary_expression
    (43) binary_expression -> . binary_expression OR binary_expression
    (44) cast_expression -> . unary_expression
    (45) cast_expression -> . LPAREN type_specifier RPAREN cast_expression
    (46) unary_expression -> . postfix_expression
    (47) unary_expression -> . PLUSPLUS unary_expression
    (48) unary_expression -> . MINUSMINUS unary_expression
    (49) unary_expression -> . unary_operator cast_expression
    (50) postfix_expression -> . primary_expression
    (51) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (52) postfix_expression -> . postfix_expression LPAREN RPAREN
    (53) postfix_expression -> . postfix_expression LPAREN assignment_expression_list RPAREN
    (54) postfix_expression -> . postfix_expression PLUSPLUS
    (55) postfix_expression -> . postfix_expression MINUSMINUS
    (77) unary_operator -> . ADDRESS
    (78) unary_operator -> . TIMES
    (79) unary_operator -> . PLUS
    (80) unary_operator -> . MINUS
    (81) unary_operator -> . NOT
    (56) primary_expression -> . identifier
    (57) primary_expression -> . int_const
    (58) primary_expression -> . float_const
    (59) primary_expression -> . frase
    (60) primary_expression -> . LPAREN expression RPAREN
    (18) identifier -> . ID
    (20) int_const -> . INT_CONST
    (21) float_const -> . FLOAT_CONST
    (19) frase -> . STRING

    LPAREN          shift and go to state 37
    PLUSPLUS        shift and go to state 39
    MINUSMINUS      shift and go to state 40
    ADDRESS         shift and go to state 43
    TIMES           shift and go to state 33
    PLUS            shift and go to state 35
    MINUS           shift and go to state 34
    NOT             shift and go to state 44
    ID              shift and go to state 14
    INT_CONST       shift and go to state 49
    FLOAT_CONST     shift and go to state 50
    STRING          shift and go to state 51

    binary_expression              shift and go to state 146
    cast_expression                shift and go to state 32
    unary_expression               shift and go to state 36
    postfix_expression             shift and go to state 38
    unary_operator                 shift and go to state 41
    primary_expression             shift and go to state 42
    identifier                     shift and go to state 45
    int_const                      shift and go to state 46
    float_const                    shift and go to state 47
    frase                          shift and go to state 48

state 96

    (38) binary_expression -> binary_expression HT . binary_expression
    (30) binary_expression -> . cast_expression
    (31) binary_expression -> . binary_expression TIMES binary_expression
    (32) binary_expression -> . binary_expression DIVIDE binary_expression
    (33) binary_expression -> . binary_expression MOD binary_expression
    (34) binary_expression -> . binary_expression MINUS binary_expression
    (35) binary_expression -> . binary_expression PLUS binary_expression
    (36) binary_expression -> . binary_expression LT binary_expression
    (37) binary_expression -> . binary_expression LE binary_expression
    (38) binary_expression -> . binary_expression HT binary_expression
    (39) binary_expression -> . binary_expression HE binary_expression
    (40) binary_expression -> . binary_expression EQUALS binary_expression
    (41) binary_expression -> . binary_expression DIFF binary_expression
    (42) binary_expression -> . binary_expression AND binary_expression
    (43) binary_expression -> . binary_expression OR binary_expression
    (44) cast_expression -> . unary_expression
    (45) cast_expression -> . LPAREN type_specifier RPAREN cast_expression
    (46) unary_expression -> . postfix_expression
    (47) unary_expression -> . PLUSPLUS unary_expression
    (48) unary_expression -> . MINUSMINUS unary_expression
    (49) unary_expression -> . unary_operator cast_expression
    (50) postfix_expression -> . primary_expression
    (51) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (52) postfix_expression -> . postfix_expression LPAREN RPAREN
    (53) postfix_expression -> . postfix_expression LPAREN assignment_expression_list RPAREN
    (54) postfix_expression -> . postfix_expression PLUSPLUS
    (55) postfix_expression -> . postfix_expression MINUSMINUS
    (77) unary_operator -> . ADDRESS
    (78) unary_operator -> . TIMES
    (79) unary_operator -> . PLUS
    (80) unary_operator -> . MINUS
    (81) unary_operator -> . NOT
    (56) primary_expression -> . identifier
    (57) primary_expression -> . int_const
    (58) primary_expression -> . float_const
    (59) primary_expression -> . frase
    (60) primary_expression -> . LPAREN expression RPAREN
    (18) identifier -> . ID
    (20) int_const -> . INT_CONST
    (21) float_const -> . FLOAT_CONST
    (19) frase -> . STRING

    LPAREN          shift and go to state 37
    PLUSPLUS        shift and go to state 39
    MINUSMINUS      shift and go to state 40
    ADDRESS         shift and go to state 43
    TIMES           shift and go to state 33
    PLUS            shift and go to state 35
    MINUS           shift and go to state 34
    NOT             shift and go to state 44
    ID              shift and go to state 14
    INT_CONST       shift and go to state 49
    FLOAT_CONST     shift and go to state 50
    STRING          shift and go to state 51

    binary_expression              shift and go to state 147
    cast_expression                shift and go to state 32
    unary_expression               shift and go to state 36
    postfix_expression             shift and go to state 38
    unary_operator                 shift and go to state 41
    primary_expression             shift and go to state 42
    identifier                     shift and go to state 45
    int_const                      shift and go to state 46
    float_const                    shift and go to state 47
    frase                          shift and go to state 48

state 97

    (39) binary_expression -> binary_expression HE . binary_expression
    (30) binary_expression -> . cast_expression
    (31) binary_expression -> . binary_expression TIMES binary_expression
    (32) binary_expression -> . binary_expression DIVIDE binary_expression
    (33) binary_expression -> . binary_expression MOD binary_expression
    (34) binary_expression -> . binary_expression MINUS binary_expression
    (35) binary_expression -> . binary_expression PLUS binary_expression
    (36) binary_expression -> . binary_expression LT binary_expression
    (37) binary_expression -> . binary_expression LE binary_expression
    (38) binary_expression -> . binary_expression HT binary_expression
    (39) binary_expression -> . binary_expression HE binary_expression
    (40) binary_expression -> . binary_expression EQUALS binary_expression
    (41) binary_expression -> . binary_expression DIFF binary_expression
    (42) binary_expression -> . binary_expression AND binary_expression
    (43) binary_expression -> . binary_expression OR binary_expression
    (44) cast_expression -> . unary_expression
    (45) cast_expression -> . LPAREN type_specifier RPAREN cast_expression
    (46) unary_expression -> . postfix_expression
    (47) unary_expression -> . PLUSPLUS unary_expression
    (48) unary_expression -> . MINUSMINUS unary_expression
    (49) unary_expression -> . unary_operator cast_expression
    (50) postfix_expression -> . primary_expression
    (51) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (52) postfix_expression -> . postfix_expression LPAREN RPAREN
    (53) postfix_expression -> . postfix_expression LPAREN assignment_expression_list RPAREN
    (54) postfix_expression -> . postfix_expression PLUSPLUS
    (55) postfix_expression -> . postfix_expression MINUSMINUS
    (77) unary_operator -> . ADDRESS
    (78) unary_operator -> . TIMES
    (79) unary_operator -> . PLUS
    (80) unary_operator -> . MINUS
    (81) unary_operator -> . NOT
    (56) primary_expression -> . identifier
    (57) primary_expression -> . int_const
    (58) primary_expression -> . float_const
    (59) primary_expression -> . frase
    (60) primary_expression -> . LPAREN expression RPAREN
    (18) identifier -> . ID
    (20) int_const -> . INT_CONST
    (21) float_const -> . FLOAT_CONST
    (19) frase -> . STRING

    LPAREN          shift and go to state 37
    PLUSPLUS        shift and go to state 39
    MINUSMINUS      shift and go to state 40
    ADDRESS         shift and go to state 43
    TIMES           shift and go to state 33
    PLUS            shift and go to state 35
    MINUS           shift and go to state 34
    NOT             shift and go to state 44
    ID              shift and go to state 14
    INT_CONST       shift and go to state 49
    FLOAT_CONST     shift and go to state 50
    STRING          shift and go to state 51

    binary_expression              shift and go to state 148
    cast_expression                shift and go to state 32
    unary_expression               shift and go to state 36
    postfix_expression             shift and go to state 38
    unary_operator                 shift and go to state 41
    primary_expression             shift and go to state 42
    identifier                     shift and go to state 45
    int_const                      shift and go to state 46
    float_const                    shift and go to state 47
    frase                          shift and go to state 48

state 98

    (40) binary_expression -> binary_expression EQUALS . binary_expression
    (30) binary_expression -> . cast_expression
    (31) binary_expression -> . binary_expression TIMES binary_expression
    (32) binary_expression -> . binary_expression DIVIDE binary_expression
    (33) binary_expression -> . binary_expression MOD binary_expression
    (34) binary_expression -> . binary_expression MINUS binary_expression
    (35) binary_expression -> . binary_expression PLUS binary_expression
    (36) binary_expression -> . binary_expression LT binary_expression
    (37) binary_expression -> . binary_expression LE binary_expression
    (38) binary_expression -> . binary_expression HT binary_expression
    (39) binary_expression -> . binary_expression HE binary_expression
    (40) binary_expression -> . binary_expression EQUALS binary_expression
    (41) binary_expression -> . binary_expression DIFF binary_expression
    (42) binary_expression -> . binary_expression AND binary_expression
    (43) binary_expression -> . binary_expression OR binary_expression
    (44) cast_expression -> . unary_expression
    (45) cast_expression -> . LPAREN type_specifier RPAREN cast_expression
    (46) unary_expression -> . postfix_expression
    (47) unary_expression -> . PLUSPLUS unary_expression
    (48) unary_expression -> . MINUSMINUS unary_expression
    (49) unary_expression -> . unary_operator cast_expression
    (50) postfix_expression -> . primary_expression
    (51) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (52) postfix_expression -> . postfix_expression LPAREN RPAREN
    (53) postfix_expression -> . postfix_expression LPAREN assignment_expression_list RPAREN
    (54) postfix_expression -> . postfix_expression PLUSPLUS
    (55) postfix_expression -> . postfix_expression MINUSMINUS
    (77) unary_operator -> . ADDRESS
    (78) unary_operator -> . TIMES
    (79) unary_operator -> . PLUS
    (80) unary_operator -> . MINUS
    (81) unary_operator -> . NOT
    (56) primary_expression -> . identifier
    (57) primary_expression -> . int_const
    (58) primary_expression -> . float_const
    (59) primary_expression -> . frase
    (60) primary_expression -> . LPAREN expression RPAREN
    (18) identifier -> . ID
    (20) int_const -> . INT_CONST
    (21) float_const -> . FLOAT_CONST
    (19) frase -> . STRING

    LPAREN          shift and go to state 37
    PLUSPLUS        shift and go to state 39
    MINUSMINUS      shift and go to state 40
    ADDRESS         shift and go to state 43
    TIMES           shift and go to state 33
    PLUS            shift and go to state 35
    MINUS           shift and go to state 34
    NOT             shift and go to state 44
    ID              shift and go to state 14
    INT_CONST       shift and go to state 49
    FLOAT_CONST     shift and go to state 50
    STRING          shift and go to state 51

    binary_expression              shift and go to state 149
    cast_expression                shift and go to state 32
    unary_expression               shift and go to state 36
    postfix_expression             shift and go to state 38
    unary_operator                 shift and go to state 41
    primary_expression             shift and go to state 42
    identifier                     shift and go to state 45
    int_const                      shift and go to state 46
    float_const                    shift and go to state 47
    frase                          shift and go to state 48

state 99

    (41) binary_expression -> binary_expression DIFF . binary_expression
    (30) binary_expression -> . cast_expression
    (31) binary_expression -> . binary_expression TIMES binary_expression
    (32) binary_expression -> . binary_expression DIVIDE binary_expression
    (33) binary_expression -> . binary_expression MOD binary_expression
    (34) binary_expression -> . binary_expression MINUS binary_expression
    (35) binary_expression -> . binary_expression PLUS binary_expression
    (36) binary_expression -> . binary_expression LT binary_expression
    (37) binary_expression -> . binary_expression LE binary_expression
    (38) binary_expression -> . binary_expression HT binary_expression
    (39) binary_expression -> . binary_expression HE binary_expression
    (40) binary_expression -> . binary_expression EQUALS binary_expression
    (41) binary_expression -> . binary_expression DIFF binary_expression
    (42) binary_expression -> . binary_expression AND binary_expression
    (43) binary_expression -> . binary_expression OR binary_expression
    (44) cast_expression -> . unary_expression
    (45) cast_expression -> . LPAREN type_specifier RPAREN cast_expression
    (46) unary_expression -> . postfix_expression
    (47) unary_expression -> . PLUSPLUS unary_expression
    (48) unary_expression -> . MINUSMINUS unary_expression
    (49) unary_expression -> . unary_operator cast_expression
    (50) postfix_expression -> . primary_expression
    (51) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (52) postfix_expression -> . postfix_expression LPAREN RPAREN
    (53) postfix_expression -> . postfix_expression LPAREN assignment_expression_list RPAREN
    (54) postfix_expression -> . postfix_expression PLUSPLUS
    (55) postfix_expression -> . postfix_expression MINUSMINUS
    (77) unary_operator -> . ADDRESS
    (78) unary_operator -> . TIMES
    (79) unary_operator -> . PLUS
    (80) unary_operator -> . MINUS
    (81) unary_operator -> . NOT
    (56) primary_expression -> . identifier
    (57) primary_expression -> . int_const
    (58) primary_expression -> . float_const
    (59) primary_expression -> . frase
    (60) primary_expression -> . LPAREN expression RPAREN
    (18) identifier -> . ID
    (20) int_const -> . INT_CONST
    (21) float_const -> . FLOAT_CONST
    (19) frase -> . STRING

    LPAREN          shift and go to state 37
    PLUSPLUS        shift and go to state 39
    MINUSMINUS      shift and go to state 40
    ADDRESS         shift and go to state 43
    TIMES           shift and go to state 33
    PLUS            shift and go to state 35
    MINUS           shift and go to state 34
    NOT             shift and go to state 44
    ID              shift and go to state 14
    INT_CONST       shift and go to state 49
    FLOAT_CONST     shift and go to state 50
    STRING          shift and go to state 51

    binary_expression              shift and go to state 150
    cast_expression                shift and go to state 32
    unary_expression               shift and go to state 36
    postfix_expression             shift and go to state 38
    unary_operator                 shift and go to state 41
    primary_expression             shift and go to state 42
    identifier                     shift and go to state 45
    int_const                      shift and go to state 46
    float_const                    shift and go to state 47
    frase                          shift and go to state 48

state 100

    (42) binary_expression -> binary_expression AND . binary_expression
    (30) binary_expression -> . cast_expression
    (31) binary_expression -> . binary_expression TIMES binary_expression
    (32) binary_expression -> . binary_expression DIVIDE binary_expression
    (33) binary_expression -> . binary_expression MOD binary_expression
    (34) binary_expression -> . binary_expression MINUS binary_expression
    (35) binary_expression -> . binary_expression PLUS binary_expression
    (36) binary_expression -> . binary_expression LT binary_expression
    (37) binary_expression -> . binary_expression LE binary_expression
    (38) binary_expression -> . binary_expression HT binary_expression
    (39) binary_expression -> . binary_expression HE binary_expression
    (40) binary_expression -> . binary_expression EQUALS binary_expression
    (41) binary_expression -> . binary_expression DIFF binary_expression
    (42) binary_expression -> . binary_expression AND binary_expression
    (43) binary_expression -> . binary_expression OR binary_expression
    (44) cast_expression -> . unary_expression
    (45) cast_expression -> . LPAREN type_specifier RPAREN cast_expression
    (46) unary_expression -> . postfix_expression
    (47) unary_expression -> . PLUSPLUS unary_expression
    (48) unary_expression -> . MINUSMINUS unary_expression
    (49) unary_expression -> . unary_operator cast_expression
    (50) postfix_expression -> . primary_expression
    (51) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (52) postfix_expression -> . postfix_expression LPAREN RPAREN
    (53) postfix_expression -> . postfix_expression LPAREN assignment_expression_list RPAREN
    (54) postfix_expression -> . postfix_expression PLUSPLUS
    (55) postfix_expression -> . postfix_expression MINUSMINUS
    (77) unary_operator -> . ADDRESS
    (78) unary_operator -> . TIMES
    (79) unary_operator -> . PLUS
    (80) unary_operator -> . MINUS
    (81) unary_operator -> . NOT
    (56) primary_expression -> . identifier
    (57) primary_expression -> . int_const
    (58) primary_expression -> . float_const
    (59) primary_expression -> . frase
    (60) primary_expression -> . LPAREN expression RPAREN
    (18) identifier -> . ID
    (20) int_const -> . INT_CONST
    (21) float_const -> . FLOAT_CONST
    (19) frase -> . STRING

    LPAREN          shift and go to state 37
    PLUSPLUS        shift and go to state 39
    MINUSMINUS      shift and go to state 40
    ADDRESS         shift and go to state 43
    TIMES           shift and go to state 33
    PLUS            shift and go to state 35
    MINUS           shift and go to state 34
    NOT             shift and go to state 44
    ID              shift and go to state 14
    INT_CONST       shift and go to state 49
    FLOAT_CONST     shift and go to state 50
    STRING          shift and go to state 51

    binary_expression              shift and go to state 151
    cast_expression                shift and go to state 32
    unary_expression               shift and go to state 36
    postfix_expression             shift and go to state 38
    unary_operator                 shift and go to state 41
    primary_expression             shift and go to state 42
    identifier                     shift and go to state 45
    int_const                      shift and go to state 46
    float_const                    shift and go to state 47
    frase                          shift and go to state 48

state 101

    (43) binary_expression -> binary_expression OR . binary_expression
    (30) binary_expression -> . cast_expression
    (31) binary_expression -> . binary_expression TIMES binary_expression
    (32) binary_expression -> . binary_expression DIVIDE binary_expression
    (33) binary_expression -> . binary_expression MOD binary_expression
    (34) binary_expression -> . binary_expression MINUS binary_expression
    (35) binary_expression -> . binary_expression PLUS binary_expression
    (36) binary_expression -> . binary_expression LT binary_expression
    (37) binary_expression -> . binary_expression LE binary_expression
    (38) binary_expression -> . binary_expression HT binary_expression
    (39) binary_expression -> . binary_expression HE binary_expression
    (40) binary_expression -> . binary_expression EQUALS binary_expression
    (41) binary_expression -> . binary_expression DIFF binary_expression
    (42) binary_expression -> . binary_expression AND binary_expression
    (43) binary_expression -> . binary_expression OR binary_expression
    (44) cast_expression -> . unary_expression
    (45) cast_expression -> . LPAREN type_specifier RPAREN cast_expression
    (46) unary_expression -> . postfix_expression
    (47) unary_expression -> . PLUSPLUS unary_expression
    (48) unary_expression -> . MINUSMINUS unary_expression
    (49) unary_expression -> . unary_operator cast_expression
    (50) postfix_expression -> . primary_expression
    (51) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (52) postfix_expression -> . postfix_expression LPAREN RPAREN
    (53) postfix_expression -> . postfix_expression LPAREN assignment_expression_list RPAREN
    (54) postfix_expression -> . postfix_expression PLUSPLUS
    (55) postfix_expression -> . postfix_expression MINUSMINUS
    (77) unary_operator -> . ADDRESS
    (78) unary_operator -> . TIMES
    (79) unary_operator -> . PLUS
    (80) unary_operator -> . MINUS
    (81) unary_operator -> . NOT
    (56) primary_expression -> . identifier
    (57) primary_expression -> . int_const
    (58) primary_expression -> . float_const
    (59) primary_expression -> . frase
    (60) primary_expression -> . LPAREN expression RPAREN
    (18) identifier -> . ID
    (20) int_const -> . INT_CONST
    (21) float_const -> . FLOAT_CONST
    (19) frase -> . STRING

    LPAREN          shift and go to state 37
    PLUSPLUS        shift and go to state 39
    MINUSMINUS      shift and go to state 40
    ADDRESS         shift and go to state 43
    TIMES           shift and go to state 33
    PLUS            shift and go to state 35
    MINUS           shift and go to state 34
    NOT             shift and go to state 44
    ID              shift and go to state 14
    INT_CONST       shift and go to state 49
    FLOAT_CONST     shift and go to state 50
    STRING          shift and go to state 51

    binary_expression              shift and go to state 152
    cast_expression                shift and go to state 32
    unary_expression               shift and go to state 36
    postfix_expression             shift and go to state 38
    unary_operator                 shift and go to state 41
    primary_expression             shift and go to state 42
    identifier                     shift and go to state 45
    int_const                      shift and go to state 46
    float_const                    shift and go to state 47
    frase                          shift and go to state 48

state 102

    (45) cast_expression -> LPAREN type_specifier . RPAREN cast_expression

    RPAREN          shift and go to state 153


state 103

    (60) primary_expression -> LPAREN expression . RPAREN
    (70) expression -> expression . COMMA assignment_expression

    RPAREN          shift and go to state 154
    COMMA           shift and go to state 121


state 104

    (51) postfix_expression -> postfix_expression LBRACKET . expression RBRACKET
    (69) expression -> . assignment_expression
    (70) expression -> . expression COMMA assignment_expression
    (67) assignment_expression -> . binary_expression
    (68) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (30) binary_expression -> . cast_expression
    (31) binary_expression -> . binary_expression TIMES binary_expression
    (32) binary_expression -> . binary_expression DIVIDE binary_expression
    (33) binary_expression -> . binary_expression MOD binary_expression
    (34) binary_expression -> . binary_expression MINUS binary_expression
    (35) binary_expression -> . binary_expression PLUS binary_expression
    (36) binary_expression -> . binary_expression LT binary_expression
    (37) binary_expression -> . binary_expression LE binary_expression
    (38) binary_expression -> . binary_expression HT binary_expression
    (39) binary_expression -> . binary_expression HE binary_expression
    (40) binary_expression -> . binary_expression EQUALS binary_expression
    (41) binary_expression -> . binary_expression DIFF binary_expression
    (42) binary_expression -> . binary_expression AND binary_expression
    (43) binary_expression -> . binary_expression OR binary_expression
    (46) unary_expression -> . postfix_expression
    (47) unary_expression -> . PLUSPLUS unary_expression
    (48) unary_expression -> . MINUSMINUS unary_expression
    (49) unary_expression -> . unary_operator cast_expression
    (44) cast_expression -> . unary_expression
    (45) cast_expression -> . LPAREN type_specifier RPAREN cast_expression
    (50) postfix_expression -> . primary_expression
    (51) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (52) postfix_expression -> . postfix_expression LPAREN RPAREN
    (53) postfix_expression -> . postfix_expression LPAREN assignment_expression_list RPAREN
    (54) postfix_expression -> . postfix_expression PLUSPLUS
    (55) postfix_expression -> . postfix_expression MINUSMINUS
    (77) unary_operator -> . ADDRESS
    (78) unary_operator -> . TIMES
    (79) unary_operator -> . PLUS
    (80) unary_operator -> . MINUS
    (81) unary_operator -> . NOT
    (56) primary_expression -> . identifier
    (57) primary_expression -> . int_const
    (58) primary_expression -> . float_const
    (59) primary_expression -> . frase
    (60) primary_expression -> . LPAREN expression RPAREN
    (18) identifier -> . ID
    (20) int_const -> . INT_CONST
    (21) float_const -> . FLOAT_CONST
    (19) frase -> . STRING

    PLUSPLUS        shift and go to state 39
    MINUSMINUS      shift and go to state 40
    LPAREN          shift and go to state 37
    ADDRESS         shift and go to state 43
    TIMES           shift and go to state 33
    PLUS            shift and go to state 35
    MINUS           shift and go to state 34
    NOT             shift and go to state 44
    ID              shift and go to state 14
    INT_CONST       shift and go to state 49
    FLOAT_CONST     shift and go to state 50
    STRING          shift and go to state 51

    postfix_expression             shift and go to state 38
    expression                     shift and go to state 155
    assignment_expression          shift and go to state 79
    binary_expression              shift and go to state 80
    unary_expression               shift and go to state 81
    cast_expression                shift and go to state 32
    unary_operator                 shift and go to state 41
    primary_expression             shift and go to state 42
    identifier                     shift and go to state 45
    int_const                      shift and go to state 46
    float_const                    shift and go to state 47
    frase                          shift and go to state 48

state 105

    (52) postfix_expression -> postfix_expression LPAREN . RPAREN
    (53) postfix_expression -> postfix_expression LPAREN . assignment_expression_list RPAREN
    (65) assignment_expression_list -> . assignment_expression
    (66) assignment_expression_list -> . assignment_expression_list assignment_expression
    (67) assignment_expression -> . binary_expression
    (68) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (30) binary_expression -> . cast_expression
    (31) binary_expression -> . binary_expression TIMES binary_expression
    (32) binary_expression -> . binary_expression DIVIDE binary_expression
    (33) binary_expression -> . binary_expression MOD binary_expression
    (34) binary_expression -> . binary_expression MINUS binary_expression
    (35) binary_expression -> . binary_expression PLUS binary_expression
    (36) binary_expression -> . binary_expression LT binary_expression
    (37) binary_expression -> . binary_expression LE binary_expression
    (38) binary_expression -> . binary_expression HT binary_expression
    (39) binary_expression -> . binary_expression HE binary_expression
    (40) binary_expression -> . binary_expression EQUALS binary_expression
    (41) binary_expression -> . binary_expression DIFF binary_expression
    (42) binary_expression -> . binary_expression AND binary_expression
    (43) binary_expression -> . binary_expression OR binary_expression
    (46) unary_expression -> . postfix_expression
    (47) unary_expression -> . PLUSPLUS unary_expression
    (48) unary_expression -> . MINUSMINUS unary_expression
    (49) unary_expression -> . unary_operator cast_expression
    (44) cast_expression -> . unary_expression
    (45) cast_expression -> . LPAREN type_specifier RPAREN cast_expression
    (50) postfix_expression -> . primary_expression
    (51) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (52) postfix_expression -> . postfix_expression LPAREN RPAREN
    (53) postfix_expression -> . postfix_expression LPAREN assignment_expression_list RPAREN
    (54) postfix_expression -> . postfix_expression PLUSPLUS
    (55) postfix_expression -> . postfix_expression MINUSMINUS
    (77) unary_operator -> . ADDRESS
    (78) unary_operator -> . TIMES
    (79) unary_operator -> . PLUS
    (80) unary_operator -> . MINUS
    (81) unary_operator -> . NOT
    (56) primary_expression -> . identifier
    (57) primary_expression -> . int_const
    (58) primary_expression -> . float_const
    (59) primary_expression -> . frase
    (60) primary_expression -> . LPAREN expression RPAREN
    (18) identifier -> . ID
    (20) int_const -> . INT_CONST
    (21) float_const -> . FLOAT_CONST
    (19) frase -> . STRING

    RPAREN          shift and go to state 156
    PLUSPLUS        shift and go to state 39
    MINUSMINUS      shift and go to state 40
    LPAREN          shift and go to state 37
    ADDRESS         shift and go to state 43
    TIMES           shift and go to state 33
    PLUS            shift and go to state 35
    MINUS           shift and go to state 34
    NOT             shift and go to state 44
    ID              shift and go to state 14
    INT_CONST       shift and go to state 49
    FLOAT_CONST     shift and go to state 50
    STRING          shift and go to state 51

    postfix_expression             shift and go to state 38
    assignment_expression_list     shift and go to state 157
    assignment_expression          shift and go to state 158
    binary_expression              shift and go to state 80
    unary_expression               shift and go to state 81
    cast_expression                shift and go to state 32
    unary_operator                 shift and go to state 41
    primary_expression             shift and go to state 42
    identifier                     shift and go to state 45
    int_const                      shift and go to state 46
    float_const                    shift and go to state 47
    frase                          shift and go to state 48

state 106

    (54) postfix_expression -> postfix_expression PLUSPLUS .

    LBRACKET        reduce using rule 54 (postfix_expression -> postfix_expression PLUSPLUS .)
    LPAREN          reduce using rule 54 (postfix_expression -> postfix_expression PLUSPLUS .)
    PLUSPLUS        reduce using rule 54 (postfix_expression -> postfix_expression PLUSPLUS .)
    MINUSMINUS      reduce using rule 54 (postfix_expression -> postfix_expression PLUSPLUS .)
    TIMES           reduce using rule 54 (postfix_expression -> postfix_expression PLUSPLUS .)
    DIVIDE          reduce using rule 54 (postfix_expression -> postfix_expression PLUSPLUS .)
    MOD             reduce using rule 54 (postfix_expression -> postfix_expression PLUSPLUS .)
    MINUS           reduce using rule 54 (postfix_expression -> postfix_expression PLUSPLUS .)
    PLUS            reduce using rule 54 (postfix_expression -> postfix_expression PLUSPLUS .)
    LT              reduce using rule 54 (postfix_expression -> postfix_expression PLUSPLUS .)
    LE              reduce using rule 54 (postfix_expression -> postfix_expression PLUSPLUS .)
    HT              reduce using rule 54 (postfix_expression -> postfix_expression PLUSPLUS .)
    HE              reduce using rule 54 (postfix_expression -> postfix_expression PLUSPLUS .)
    EQUALS          reduce using rule 54 (postfix_expression -> postfix_expression PLUSPLUS .)
    DIFF            reduce using rule 54 (postfix_expression -> postfix_expression PLUSPLUS .)
    AND             reduce using rule 54 (postfix_expression -> postfix_expression PLUSPLUS .)
    OR              reduce using rule 54 (postfix_expression -> postfix_expression PLUSPLUS .)
    EQ              reduce using rule 54 (postfix_expression -> postfix_expression PLUSPLUS .)
    ASSIGN_TIMES    reduce using rule 54 (postfix_expression -> postfix_expression PLUSPLUS .)
    ASSIGN_DIVIDE   reduce using rule 54 (postfix_expression -> postfix_expression PLUSPLUS .)
    ASSIGN_MOD      reduce using rule 54 (postfix_expression -> postfix_expression PLUSPLUS .)
    ASSIGN_PLUS     reduce using rule 54 (postfix_expression -> postfix_expression PLUSPLUS .)
    ASSIGN_MINUS    reduce using rule 54 (postfix_expression -> postfix_expression PLUSPLUS .)
    SEMI            reduce using rule 54 (postfix_expression -> postfix_expression PLUSPLUS .)
    COMMA           reduce using rule 54 (postfix_expression -> postfix_expression PLUSPLUS .)
    RPAREN          reduce using rule 54 (postfix_expression -> postfix_expression PLUSPLUS .)
    RBRACE          reduce using rule 54 (postfix_expression -> postfix_expression PLUSPLUS .)
    WHILE           reduce using rule 54 (postfix_expression -> postfix_expression PLUSPLUS .)
    FOR             reduce using rule 54 (postfix_expression -> postfix_expression PLUSPLUS .)
    LBRACE          reduce using rule 54 (postfix_expression -> postfix_expression PLUSPLUS .)
    BREAK           reduce using rule 54 (postfix_expression -> postfix_expression PLUSPLUS .)
    RETURN          reduce using rule 54 (postfix_expression -> postfix_expression PLUSPLUS .)
    ASSERT          reduce using rule 54 (postfix_expression -> postfix_expression PLUSPLUS .)
    PRINT           reduce using rule 54 (postfix_expression -> postfix_expression PLUSPLUS .)
    IF              reduce using rule 54 (postfix_expression -> postfix_expression PLUSPLUS .)
    READ            reduce using rule 54 (postfix_expression -> postfix_expression PLUSPLUS .)
    ADDRESS         reduce using rule 54 (postfix_expression -> postfix_expression PLUSPLUS .)
    NOT             reduce using rule 54 (postfix_expression -> postfix_expression PLUSPLUS .)
    ID              reduce using rule 54 (postfix_expression -> postfix_expression PLUSPLUS .)
    INT_CONST       reduce using rule 54 (postfix_expression -> postfix_expression PLUSPLUS .)
    FLOAT_CONST     reduce using rule 54 (postfix_expression -> postfix_expression PLUSPLUS .)
    STRING          reduce using rule 54 (postfix_expression -> postfix_expression PLUSPLUS .)
    ELSE            reduce using rule 54 (postfix_expression -> postfix_expression PLUSPLUS .)
    RBRACKET        reduce using rule 54 (postfix_expression -> postfix_expression PLUSPLUS .)


state 107

    (55) postfix_expression -> postfix_expression MINUSMINUS .

    LBRACKET        reduce using rule 55 (postfix_expression -> postfix_expression MINUSMINUS .)
    LPAREN          reduce using rule 55 (postfix_expression -> postfix_expression MINUSMINUS .)
    PLUSPLUS        reduce using rule 55 (postfix_expression -> postfix_expression MINUSMINUS .)
    MINUSMINUS      reduce using rule 55 (postfix_expression -> postfix_expression MINUSMINUS .)
    TIMES           reduce using rule 55 (postfix_expression -> postfix_expression MINUSMINUS .)
    DIVIDE          reduce using rule 55 (postfix_expression -> postfix_expression MINUSMINUS .)
    MOD             reduce using rule 55 (postfix_expression -> postfix_expression MINUSMINUS .)
    MINUS           reduce using rule 55 (postfix_expression -> postfix_expression MINUSMINUS .)
    PLUS            reduce using rule 55 (postfix_expression -> postfix_expression MINUSMINUS .)
    LT              reduce using rule 55 (postfix_expression -> postfix_expression MINUSMINUS .)
    LE              reduce using rule 55 (postfix_expression -> postfix_expression MINUSMINUS .)
    HT              reduce using rule 55 (postfix_expression -> postfix_expression MINUSMINUS .)
    HE              reduce using rule 55 (postfix_expression -> postfix_expression MINUSMINUS .)
    EQUALS          reduce using rule 55 (postfix_expression -> postfix_expression MINUSMINUS .)
    DIFF            reduce using rule 55 (postfix_expression -> postfix_expression MINUSMINUS .)
    AND             reduce using rule 55 (postfix_expression -> postfix_expression MINUSMINUS .)
    OR              reduce using rule 55 (postfix_expression -> postfix_expression MINUSMINUS .)
    EQ              reduce using rule 55 (postfix_expression -> postfix_expression MINUSMINUS .)
    ASSIGN_TIMES    reduce using rule 55 (postfix_expression -> postfix_expression MINUSMINUS .)
    ASSIGN_DIVIDE   reduce using rule 55 (postfix_expression -> postfix_expression MINUSMINUS .)
    ASSIGN_MOD      reduce using rule 55 (postfix_expression -> postfix_expression MINUSMINUS .)
    ASSIGN_PLUS     reduce using rule 55 (postfix_expression -> postfix_expression MINUSMINUS .)
    ASSIGN_MINUS    reduce using rule 55 (postfix_expression -> postfix_expression MINUSMINUS .)
    SEMI            reduce using rule 55 (postfix_expression -> postfix_expression MINUSMINUS .)
    COMMA           reduce using rule 55 (postfix_expression -> postfix_expression MINUSMINUS .)
    RPAREN          reduce using rule 55 (postfix_expression -> postfix_expression MINUSMINUS .)
    RBRACE          reduce using rule 55 (postfix_expression -> postfix_expression MINUSMINUS .)
    WHILE           reduce using rule 55 (postfix_expression -> postfix_expression MINUSMINUS .)
    FOR             reduce using rule 55 (postfix_expression -> postfix_expression MINUSMINUS .)
    LBRACE          reduce using rule 55 (postfix_expression -> postfix_expression MINUSMINUS .)
    BREAK           reduce using rule 55 (postfix_expression -> postfix_expression MINUSMINUS .)
    RETURN          reduce using rule 55 (postfix_expression -> postfix_expression MINUSMINUS .)
    ASSERT          reduce using rule 55 (postfix_expression -> postfix_expression MINUSMINUS .)
    PRINT           reduce using rule 55 (postfix_expression -> postfix_expression MINUSMINUS .)
    IF              reduce using rule 55 (postfix_expression -> postfix_expression MINUSMINUS .)
    READ            reduce using rule 55 (postfix_expression -> postfix_expression MINUSMINUS .)
    ADDRESS         reduce using rule 55 (postfix_expression -> postfix_expression MINUSMINUS .)
    NOT             reduce using rule 55 (postfix_expression -> postfix_expression MINUSMINUS .)
    ID              reduce using rule 55 (postfix_expression -> postfix_expression MINUSMINUS .)
    INT_CONST       reduce using rule 55 (postfix_expression -> postfix_expression MINUSMINUS .)
    FLOAT_CONST     reduce using rule 55 (postfix_expression -> postfix_expression MINUSMINUS .)
    STRING          reduce using rule 55 (postfix_expression -> postfix_expression MINUSMINUS .)
    ELSE            reduce using rule 55 (postfix_expression -> postfix_expression MINUSMINUS .)
    RBRACKET        reduce using rule 55 (postfix_expression -> postfix_expression MINUSMINUS .)


state 108

    (47) unary_expression -> PLUSPLUS unary_expression .

    TIMES           reduce using rule 47 (unary_expression -> PLUSPLUS unary_expression .)
    DIVIDE          reduce using rule 47 (unary_expression -> PLUSPLUS unary_expression .)
    MOD             reduce using rule 47 (unary_expression -> PLUSPLUS unary_expression .)
    MINUS           reduce using rule 47 (unary_expression -> PLUSPLUS unary_expression .)
    PLUS            reduce using rule 47 (unary_expression -> PLUSPLUS unary_expression .)
    LT              reduce using rule 47 (unary_expression -> PLUSPLUS unary_expression .)
    LE              reduce using rule 47 (unary_expression -> PLUSPLUS unary_expression .)
    HT              reduce using rule 47 (unary_expression -> PLUSPLUS unary_expression .)
    HE              reduce using rule 47 (unary_expression -> PLUSPLUS unary_expression .)
    EQUALS          reduce using rule 47 (unary_expression -> PLUSPLUS unary_expression .)
    DIFF            reduce using rule 47 (unary_expression -> PLUSPLUS unary_expression .)
    AND             reduce using rule 47 (unary_expression -> PLUSPLUS unary_expression .)
    OR              reduce using rule 47 (unary_expression -> PLUSPLUS unary_expression .)
    LBRACKET        reduce using rule 47 (unary_expression -> PLUSPLUS unary_expression .)
    EQ              reduce using rule 47 (unary_expression -> PLUSPLUS unary_expression .)
    ASSIGN_TIMES    reduce using rule 47 (unary_expression -> PLUSPLUS unary_expression .)
    ASSIGN_DIVIDE   reduce using rule 47 (unary_expression -> PLUSPLUS unary_expression .)
    ASSIGN_MOD      reduce using rule 47 (unary_expression -> PLUSPLUS unary_expression .)
    ASSIGN_PLUS     reduce using rule 47 (unary_expression -> PLUSPLUS unary_expression .)
    ASSIGN_MINUS    reduce using rule 47 (unary_expression -> PLUSPLUS unary_expression .)
    SEMI            reduce using rule 47 (unary_expression -> PLUSPLUS unary_expression .)
    COMMA           reduce using rule 47 (unary_expression -> PLUSPLUS unary_expression .)
    RPAREN          reduce using rule 47 (unary_expression -> PLUSPLUS unary_expression .)
    RBRACE          reduce using rule 47 (unary_expression -> PLUSPLUS unary_expression .)
    WHILE           reduce using rule 47 (unary_expression -> PLUSPLUS unary_expression .)
    FOR             reduce using rule 47 (unary_expression -> PLUSPLUS unary_expression .)
    LBRACE          reduce using rule 47 (unary_expression -> PLUSPLUS unary_expression .)
    BREAK           reduce using rule 47 (unary_expression -> PLUSPLUS unary_expression .)
    RETURN          reduce using rule 47 (unary_expression -> PLUSPLUS unary_expression .)
    ASSERT          reduce using rule 47 (unary_expression -> PLUSPLUS unary_expression .)
    PRINT           reduce using rule 47 (unary_expression -> PLUSPLUS unary_expression .)
    IF              reduce using rule 47 (unary_expression -> PLUSPLUS unary_expression .)
    READ            reduce using rule 47 (unary_expression -> PLUSPLUS unary_expression .)
    PLUSPLUS        reduce using rule 47 (unary_expression -> PLUSPLUS unary_expression .)
    MINUSMINUS      reduce using rule 47 (unary_expression -> PLUSPLUS unary_expression .)
    LPAREN          reduce using rule 47 (unary_expression -> PLUSPLUS unary_expression .)
    ADDRESS         reduce using rule 47 (unary_expression -> PLUSPLUS unary_expression .)
    NOT             reduce using rule 47 (unary_expression -> PLUSPLUS unary_expression .)
    ID              reduce using rule 47 (unary_expression -> PLUSPLUS unary_expression .)
    INT_CONST       reduce using rule 47 (unary_expression -> PLUSPLUS unary_expression .)
    FLOAT_CONST     reduce using rule 47 (unary_expression -> PLUSPLUS unary_expression .)
    STRING          reduce using rule 47 (unary_expression -> PLUSPLUS unary_expression .)
    ELSE            reduce using rule 47 (unary_expression -> PLUSPLUS unary_expression .)
    RBRACKET        reduce using rule 47 (unary_expression -> PLUSPLUS unary_expression .)


state 109

    (60) primary_expression -> LPAREN . expression RPAREN
    (69) expression -> . assignment_expression
    (70) expression -> . expression COMMA assignment_expression
    (67) assignment_expression -> . binary_expression
    (68) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (30) binary_expression -> . cast_expression
    (31) binary_expression -> . binary_expression TIMES binary_expression
    (32) binary_expression -> . binary_expression DIVIDE binary_expression
    (33) binary_expression -> . binary_expression MOD binary_expression
    (34) binary_expression -> . binary_expression MINUS binary_expression
    (35) binary_expression -> . binary_expression PLUS binary_expression
    (36) binary_expression -> . binary_expression LT binary_expression
    (37) binary_expression -> . binary_expression LE binary_expression
    (38) binary_expression -> . binary_expression HT binary_expression
    (39) binary_expression -> . binary_expression HE binary_expression
    (40) binary_expression -> . binary_expression EQUALS binary_expression
    (41) binary_expression -> . binary_expression DIFF binary_expression
    (42) binary_expression -> . binary_expression AND binary_expression
    (43) binary_expression -> . binary_expression OR binary_expression
    (46) unary_expression -> . postfix_expression
    (47) unary_expression -> . PLUSPLUS unary_expression
    (48) unary_expression -> . MINUSMINUS unary_expression
    (49) unary_expression -> . unary_operator cast_expression
    (44) cast_expression -> . unary_expression
    (45) cast_expression -> . LPAREN type_specifier RPAREN cast_expression
    (50) postfix_expression -> . primary_expression
    (51) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (52) postfix_expression -> . postfix_expression LPAREN RPAREN
    (53) postfix_expression -> . postfix_expression LPAREN assignment_expression_list RPAREN
    (54) postfix_expression -> . postfix_expression PLUSPLUS
    (55) postfix_expression -> . postfix_expression MINUSMINUS
    (77) unary_operator -> . ADDRESS
    (78) unary_operator -> . TIMES
    (79) unary_operator -> . PLUS
    (80) unary_operator -> . MINUS
    (81) unary_operator -> . NOT
    (56) primary_expression -> . identifier
    (57) primary_expression -> . int_const
    (58) primary_expression -> . float_const
    (59) primary_expression -> . frase
    (60) primary_expression -> . LPAREN expression RPAREN
    (18) identifier -> . ID
    (20) int_const -> . INT_CONST
    (21) float_const -> . FLOAT_CONST
    (19) frase -> . STRING

    PLUSPLUS        shift and go to state 39
    MINUSMINUS      shift and go to state 40
    LPAREN          shift and go to state 37
    ADDRESS         shift and go to state 43
    TIMES           shift and go to state 33
    PLUS            shift and go to state 35
    MINUS           shift and go to state 34
    NOT             shift and go to state 44
    ID              shift and go to state 14
    INT_CONST       shift and go to state 49
    FLOAT_CONST     shift and go to state 50
    STRING          shift and go to state 51

    expression                     shift and go to state 103
    assignment_expression          shift and go to state 79
    binary_expression              shift and go to state 80
    unary_expression               shift and go to state 81
    cast_expression                shift and go to state 32
    postfix_expression             shift and go to state 38
    unary_operator                 shift and go to state 41
    primary_expression             shift and go to state 42
    identifier                     shift and go to state 45
    int_const                      shift and go to state 46
    float_const                    shift and go to state 47
    frase                          shift and go to state 48

state 110

    (48) unary_expression -> MINUSMINUS unary_expression .

    TIMES           reduce using rule 48 (unary_expression -> MINUSMINUS unary_expression .)
    DIVIDE          reduce using rule 48 (unary_expression -> MINUSMINUS unary_expression .)
    MOD             reduce using rule 48 (unary_expression -> MINUSMINUS unary_expression .)
    MINUS           reduce using rule 48 (unary_expression -> MINUSMINUS unary_expression .)
    PLUS            reduce using rule 48 (unary_expression -> MINUSMINUS unary_expression .)
    LT              reduce using rule 48 (unary_expression -> MINUSMINUS unary_expression .)
    LE              reduce using rule 48 (unary_expression -> MINUSMINUS unary_expression .)
    HT              reduce using rule 48 (unary_expression -> MINUSMINUS unary_expression .)
    HE              reduce using rule 48 (unary_expression -> MINUSMINUS unary_expression .)
    EQUALS          reduce using rule 48 (unary_expression -> MINUSMINUS unary_expression .)
    DIFF            reduce using rule 48 (unary_expression -> MINUSMINUS unary_expression .)
    AND             reduce using rule 48 (unary_expression -> MINUSMINUS unary_expression .)
    OR              reduce using rule 48 (unary_expression -> MINUSMINUS unary_expression .)
    LBRACKET        reduce using rule 48 (unary_expression -> MINUSMINUS unary_expression .)
    EQ              reduce using rule 48 (unary_expression -> MINUSMINUS unary_expression .)
    ASSIGN_TIMES    reduce using rule 48 (unary_expression -> MINUSMINUS unary_expression .)
    ASSIGN_DIVIDE   reduce using rule 48 (unary_expression -> MINUSMINUS unary_expression .)
    ASSIGN_MOD      reduce using rule 48 (unary_expression -> MINUSMINUS unary_expression .)
    ASSIGN_PLUS     reduce using rule 48 (unary_expression -> MINUSMINUS unary_expression .)
    ASSIGN_MINUS    reduce using rule 48 (unary_expression -> MINUSMINUS unary_expression .)
    SEMI            reduce using rule 48 (unary_expression -> MINUSMINUS unary_expression .)
    COMMA           reduce using rule 48 (unary_expression -> MINUSMINUS unary_expression .)
    RPAREN          reduce using rule 48 (unary_expression -> MINUSMINUS unary_expression .)
    RBRACE          reduce using rule 48 (unary_expression -> MINUSMINUS unary_expression .)
    WHILE           reduce using rule 48 (unary_expression -> MINUSMINUS unary_expression .)
    FOR             reduce using rule 48 (unary_expression -> MINUSMINUS unary_expression .)
    LBRACE          reduce using rule 48 (unary_expression -> MINUSMINUS unary_expression .)
    BREAK           reduce using rule 48 (unary_expression -> MINUSMINUS unary_expression .)
    RETURN          reduce using rule 48 (unary_expression -> MINUSMINUS unary_expression .)
    ASSERT          reduce using rule 48 (unary_expression -> MINUSMINUS unary_expression .)
    PRINT           reduce using rule 48 (unary_expression -> MINUSMINUS unary_expression .)
    IF              reduce using rule 48 (unary_expression -> MINUSMINUS unary_expression .)
    READ            reduce using rule 48 (unary_expression -> MINUSMINUS unary_expression .)
    PLUSPLUS        reduce using rule 48 (unary_expression -> MINUSMINUS unary_expression .)
    MINUSMINUS      reduce using rule 48 (unary_expression -> MINUSMINUS unary_expression .)
    LPAREN          reduce using rule 48 (unary_expression -> MINUSMINUS unary_expression .)
    ADDRESS         reduce using rule 48 (unary_expression -> MINUSMINUS unary_expression .)
    NOT             reduce using rule 48 (unary_expression -> MINUSMINUS unary_expression .)
    ID              reduce using rule 48 (unary_expression -> MINUSMINUS unary_expression .)
    INT_CONST       reduce using rule 48 (unary_expression -> MINUSMINUS unary_expression .)
    FLOAT_CONST     reduce using rule 48 (unary_expression -> MINUSMINUS unary_expression .)
    STRING          reduce using rule 48 (unary_expression -> MINUSMINUS unary_expression .)
    ELSE            reduce using rule 48 (unary_expression -> MINUSMINUS unary_expression .)
    RBRACKET        reduce using rule 48 (unary_expression -> MINUSMINUS unary_expression .)


state 111

    (49) unary_expression -> unary_operator cast_expression .

    TIMES           reduce using rule 49 (unary_expression -> unary_operator cast_expression .)
    DIVIDE          reduce using rule 49 (unary_expression -> unary_operator cast_expression .)
    MOD             reduce using rule 49 (unary_expression -> unary_operator cast_expression .)
    MINUS           reduce using rule 49 (unary_expression -> unary_operator cast_expression .)
    PLUS            reduce using rule 49 (unary_expression -> unary_operator cast_expression .)
    LT              reduce using rule 49 (unary_expression -> unary_operator cast_expression .)
    LE              reduce using rule 49 (unary_expression -> unary_operator cast_expression .)
    HT              reduce using rule 49 (unary_expression -> unary_operator cast_expression .)
    HE              reduce using rule 49 (unary_expression -> unary_operator cast_expression .)
    EQUALS          reduce using rule 49 (unary_expression -> unary_operator cast_expression .)
    DIFF            reduce using rule 49 (unary_expression -> unary_operator cast_expression .)
    AND             reduce using rule 49 (unary_expression -> unary_operator cast_expression .)
    OR              reduce using rule 49 (unary_expression -> unary_operator cast_expression .)
    LBRACKET        reduce using rule 49 (unary_expression -> unary_operator cast_expression .)
    EQ              reduce using rule 49 (unary_expression -> unary_operator cast_expression .)
    ASSIGN_TIMES    reduce using rule 49 (unary_expression -> unary_operator cast_expression .)
    ASSIGN_DIVIDE   reduce using rule 49 (unary_expression -> unary_operator cast_expression .)
    ASSIGN_MOD      reduce using rule 49 (unary_expression -> unary_operator cast_expression .)
    ASSIGN_PLUS     reduce using rule 49 (unary_expression -> unary_operator cast_expression .)
    ASSIGN_MINUS    reduce using rule 49 (unary_expression -> unary_operator cast_expression .)
    SEMI            reduce using rule 49 (unary_expression -> unary_operator cast_expression .)
    COMMA           reduce using rule 49 (unary_expression -> unary_operator cast_expression .)
    RPAREN          reduce using rule 49 (unary_expression -> unary_operator cast_expression .)
    RBRACE          reduce using rule 49 (unary_expression -> unary_operator cast_expression .)
    WHILE           reduce using rule 49 (unary_expression -> unary_operator cast_expression .)
    FOR             reduce using rule 49 (unary_expression -> unary_operator cast_expression .)
    LBRACE          reduce using rule 49 (unary_expression -> unary_operator cast_expression .)
    BREAK           reduce using rule 49 (unary_expression -> unary_operator cast_expression .)
    RETURN          reduce using rule 49 (unary_expression -> unary_operator cast_expression .)
    ASSERT          reduce using rule 49 (unary_expression -> unary_operator cast_expression .)
    PRINT           reduce using rule 49 (unary_expression -> unary_operator cast_expression .)
    IF              reduce using rule 49 (unary_expression -> unary_operator cast_expression .)
    READ            reduce using rule 49 (unary_expression -> unary_operator cast_expression .)
    PLUSPLUS        reduce using rule 49 (unary_expression -> unary_operator cast_expression .)
    MINUSMINUS      reduce using rule 49 (unary_expression -> unary_operator cast_expression .)
    LPAREN          reduce using rule 49 (unary_expression -> unary_operator cast_expression .)
    ADDRESS         reduce using rule 49 (unary_expression -> unary_operator cast_expression .)
    NOT             reduce using rule 49 (unary_expression -> unary_operator cast_expression .)
    ID              reduce using rule 49 (unary_expression -> unary_operator cast_expression .)
    INT_CONST       reduce using rule 49 (unary_expression -> unary_operator cast_expression .)
    FLOAT_CONST     reduce using rule 49 (unary_expression -> unary_operator cast_expression .)
    STRING          reduce using rule 49 (unary_expression -> unary_operator cast_expression .)
    ELSE            reduce using rule 49 (unary_expression -> unary_operator cast_expression .)
    RBRACKET        reduce using rule 49 (unary_expression -> unary_operator cast_expression .)


state 112

    (26) declarator -> declarator LPAREN parameter_list RPAREN .

    RBRACKET        reduce using rule 26 (declarator -> declarator LPAREN parameter_list RPAREN .)
    LPAREN          reduce using rule 26 (declarator -> declarator LPAREN parameter_list RPAREN .)
    LBRACE          reduce using rule 26 (declarator -> declarator LPAREN parameter_list RPAREN .)
    VOID            reduce using rule 26 (declarator -> declarator LPAREN parameter_list RPAREN .)
    CHAR            reduce using rule 26 (declarator -> declarator LPAREN parameter_list RPAREN .)
    INT             reduce using rule 26 (declarator -> declarator LPAREN parameter_list RPAREN .)
    FLOAT           reduce using rule 26 (declarator -> declarator LPAREN parameter_list RPAREN .)
    EQ              reduce using rule 26 (declarator -> declarator LPAREN parameter_list RPAREN .)
    SEMI            reduce using rule 26 (declarator -> declarator LPAREN parameter_list RPAREN .)
    RPAREN          reduce using rule 26 (declarator -> declarator LPAREN parameter_list RPAREN .)
    COMMA           reduce using rule 26 (declarator -> declarator LPAREN parameter_list RPAREN .)
    ID              reduce using rule 26 (declarator -> declarator LPAREN parameter_list RPAREN .)


state 113

    (83) parameter_list -> parameter_list COMMA . parameter_declaration
    (84) parameter_declaration -> . type_specifier declarator
    (14) type_specifier -> . VOID
    (15) type_specifier -> . CHAR
    (16) type_specifier -> . INT
    (17) type_specifier -> . FLOAT

    VOID            shift and go to state 10
    CHAR            shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13

    parameter_declaration          shift and go to state 159
    type_specifier                 shift and go to state 56

state 114

    (28) declarator -> declarator LPAREN identifier RPAREN .

    RBRACKET        reduce using rule 28 (declarator -> declarator LPAREN identifier RPAREN .)
    LPAREN          reduce using rule 28 (declarator -> declarator LPAREN identifier RPAREN .)
    LBRACE          reduce using rule 28 (declarator -> declarator LPAREN identifier RPAREN .)
    VOID            reduce using rule 28 (declarator -> declarator LPAREN identifier RPAREN .)
    CHAR            reduce using rule 28 (declarator -> declarator LPAREN identifier RPAREN .)
    INT             reduce using rule 28 (declarator -> declarator LPAREN identifier RPAREN .)
    FLOAT           reduce using rule 28 (declarator -> declarator LPAREN identifier RPAREN .)
    EQ              reduce using rule 28 (declarator -> declarator LPAREN identifier RPAREN .)
    SEMI            reduce using rule 28 (declarator -> declarator LPAREN identifier RPAREN .)
    RPAREN          reduce using rule 28 (declarator -> declarator LPAREN identifier RPAREN .)
    COMMA           reduce using rule 28 (declarator -> declarator LPAREN identifier RPAREN .)
    ID              reduce using rule 28 (declarator -> declarator LPAREN identifier RPAREN .)


state 115

    (84) parameter_declaration -> type_specifier declarator .
    (24) declarator -> declarator . RBRACKET LBRACKET
    (25) declarator -> declarator . RBRACKET constant_expression LBRACKET
    (26) declarator -> declarator . LPAREN parameter_list RPAREN
    (27) declarator -> declarator . LPAREN RPAREN
    (28) declarator -> declarator . LPAREN identifier RPAREN

    RPAREN          reduce using rule 84 (parameter_declaration -> type_specifier declarator .)
    COMMA           reduce using rule 84 (parameter_declaration -> type_specifier declarator .)
    RBRACKET        shift and go to state 18
    LPAREN          shift and go to state 19


state 116

    (62) compound_statement -> LBRACE declaration_list RBRACE .

    LPAREN          reduce using rule 62 (compound_statement -> LBRACE declaration_list RBRACE .)
    VOID            reduce using rule 62 (compound_statement -> LBRACE declaration_list RBRACE .)
    CHAR            reduce using rule 62 (compound_statement -> LBRACE declaration_list RBRACE .)
    INT             reduce using rule 62 (compound_statement -> LBRACE declaration_list RBRACE .)
    FLOAT           reduce using rule 62 (compound_statement -> LBRACE declaration_list RBRACE .)
    ID              reduce using rule 62 (compound_statement -> LBRACE declaration_list RBRACE .)
    $end            reduce using rule 62 (compound_statement -> LBRACE declaration_list RBRACE .)
    RBRACE          reduce using rule 62 (compound_statement -> LBRACE declaration_list RBRACE .)
    SEMI            reduce using rule 62 (compound_statement -> LBRACE declaration_list RBRACE .)
    WHILE           reduce using rule 62 (compound_statement -> LBRACE declaration_list RBRACE .)
    FOR             reduce using rule 62 (compound_statement -> LBRACE declaration_list RBRACE .)
    LBRACE          reduce using rule 62 (compound_statement -> LBRACE declaration_list RBRACE .)
    BREAK           reduce using rule 62 (compound_statement -> LBRACE declaration_list RBRACE .)
    RETURN          reduce using rule 62 (compound_statement -> LBRACE declaration_list RBRACE .)
    ASSERT          reduce using rule 62 (compound_statement -> LBRACE declaration_list RBRACE .)
    PRINT           reduce using rule 62 (compound_statement -> LBRACE declaration_list RBRACE .)
    IF              reduce using rule 62 (compound_statement -> LBRACE declaration_list RBRACE .)
    READ            reduce using rule 62 (compound_statement -> LBRACE declaration_list RBRACE .)
    PLUSPLUS        reduce using rule 62 (compound_statement -> LBRACE declaration_list RBRACE .)
    MINUSMINUS      reduce using rule 62 (compound_statement -> LBRACE declaration_list RBRACE .)
    ADDRESS         reduce using rule 62 (compound_statement -> LBRACE declaration_list RBRACE .)
    TIMES           reduce using rule 62 (compound_statement -> LBRACE declaration_list RBRACE .)
    PLUS            reduce using rule 62 (compound_statement -> LBRACE declaration_list RBRACE .)
    MINUS           reduce using rule 62 (compound_statement -> LBRACE declaration_list RBRACE .)
    NOT             reduce using rule 62 (compound_statement -> LBRACE declaration_list RBRACE .)
    INT_CONST       reduce using rule 62 (compound_statement -> LBRACE declaration_list RBRACE .)
    FLOAT_CONST     reduce using rule 62 (compound_statement -> LBRACE declaration_list RBRACE .)
    STRING          reduce using rule 62 (compound_statement -> LBRACE declaration_list RBRACE .)
    ELSE            reduce using rule 62 (compound_statement -> LBRACE declaration_list RBRACE .)


state 117

    (64) compound_statement -> LBRACE declaration_list statement_list . RBRACE
    (13) statement_list -> statement_list . statement
    (94) statement -> . expression_statement
    (95) statement -> . iteration_statement
    (96) statement -> . compound_statement
    (97) statement -> . jump_statement
    (98) statement -> . assert_statement
    (99) statement -> . print_statement
    (100) statement -> . selection_statement
    (101) statement -> . read_statement
    (102) expression_statement -> . SEMI
    (103) expression_statement -> . expression SEMI
    (106) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (107) iteration_statement -> . FOR LPAREN SEMI SEMI RPAREN statement
    (108) iteration_statement -> . FOR LPAREN expression SEMI SEMI RPAREN statement
    (109) iteration_statement -> . FOR LPAREN SEMI expression SEMI RPAREN statement
    (110) iteration_statement -> . FOR LPAREN SEMI SEMI expression RPAREN statement
    (111) iteration_statement -> . FOR LPAREN expression SEMI expression SEMI RPAREN statement
    (112) iteration_statement -> . FOR LPAREN expression SEMI SEMI expression RPAREN statement
    (113) iteration_statement -> . FOR LPAREN SEMI expression SEMI expression RPAREN statement
    (114) iteration_statement -> . FOR LPAREN expression SEMI expression SEMI expression RPAREN statement
    (61) compound_statement -> . LBRACE RBRACE
    (62) compound_statement -> . LBRACE declaration_list RBRACE
    (63) compound_statement -> . LBRACE statement_list RBRACE
    (64) compound_statement -> . LBRACE declaration_list statement_list RBRACE
    (115) jump_statement -> . BREAK
    (116) jump_statement -> . RETURN
    (117) jump_statement -> . RETURN expression
    (118) assert_statement -> . ASSERT expression SEMI
    (119) print_statement -> . PRINT LPAREN expression RPAREN SEMI
    (104) selection_statement -> . IF LPAREN expression RPAREN statement
    (105) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (120) read_statement -> . READ LPAREN declarator_list RPAREN SEMI
    (69) expression -> . assignment_expression
    (70) expression -> . expression COMMA assignment_expression
    (67) assignment_expression -> . binary_expression
    (68) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (30) binary_expression -> . cast_expression
    (31) binary_expression -> . binary_expression TIMES binary_expression
    (32) binary_expression -> . binary_expression DIVIDE binary_expression
    (33) binary_expression -> . binary_expression MOD binary_expression
    (34) binary_expression -> . binary_expression MINUS binary_expression
    (35) binary_expression -> . binary_expression PLUS binary_expression
    (36) binary_expression -> . binary_expression LT binary_expression
    (37) binary_expression -> . binary_expression LE binary_expression
    (38) binary_expression -> . binary_expression HT binary_expression
    (39) binary_expression -> . binary_expression HE binary_expression
    (40) binary_expression -> . binary_expression EQUALS binary_expression
    (41) binary_expression -> . binary_expression DIFF binary_expression
    (42) binary_expression -> . binary_expression AND binary_expression
    (43) binary_expression -> . binary_expression OR binary_expression
    (46) unary_expression -> . postfix_expression
    (47) unary_expression -> . PLUSPLUS unary_expression
    (48) unary_expression -> . MINUSMINUS unary_expression
    (49) unary_expression -> . unary_operator cast_expression
    (44) cast_expression -> . unary_expression
    (45) cast_expression -> . LPAREN type_specifier RPAREN cast_expression
    (50) postfix_expression -> . primary_expression
    (51) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (52) postfix_expression -> . postfix_expression LPAREN RPAREN
    (53) postfix_expression -> . postfix_expression LPAREN assignment_expression_list RPAREN
    (54) postfix_expression -> . postfix_expression PLUSPLUS
    (55) postfix_expression -> . postfix_expression MINUSMINUS
    (77) unary_operator -> . ADDRESS
    (78) unary_operator -> . TIMES
    (79) unary_operator -> . PLUS
    (80) unary_operator -> . MINUS
    (81) unary_operator -> . NOT
    (56) primary_expression -> . identifier
    (57) primary_expression -> . int_const
    (58) primary_expression -> . float_const
    (59) primary_expression -> . frase
    (60) primary_expression -> . LPAREN expression RPAREN
    (18) identifier -> . ID
    (20) int_const -> . INT_CONST
    (21) float_const -> . FLOAT_CONST
    (19) frase -> . STRING

    RBRACE          shift and go to state 160
    SEMI            shift and go to state 61
    WHILE           shift and go to state 71
    FOR             shift and go to state 72
    LBRACE          shift and go to state 20
    BREAK           shift and go to state 73
    RETURN          shift and go to state 74
    ASSERT          shift and go to state 75
    PRINT           shift and go to state 76
    IF              shift and go to state 77
    READ            shift and go to state 78
    PLUSPLUS        shift and go to state 39
    MINUSMINUS      shift and go to state 40
    LPAREN          shift and go to state 37
    ADDRESS         shift and go to state 43
    TIMES           shift and go to state 33
    PLUS            shift and go to state 35
    MINUS           shift and go to state 34
    NOT             shift and go to state 44
    ID              shift and go to state 14
    INT_CONST       shift and go to state 49
    FLOAT_CONST     shift and go to state 50
    STRING          shift and go to state 51

    statement                      shift and go to state 119
    expression_statement           shift and go to state 62
    iteration_statement            shift and go to state 63
    compound_statement             shift and go to state 64
    jump_statement                 shift and go to state 65
    assert_statement               shift and go to state 66
    print_statement                shift and go to state 67
    selection_statement            shift and go to state 68
    read_statement                 shift and go to state 69
    expression                     shift and go to state 70
    assignment_expression          shift and go to state 79
    binary_expression              shift and go to state 80
    unary_expression               shift and go to state 81
    cast_expression                shift and go to state 32
    postfix_expression             shift and go to state 38
    unary_operator                 shift and go to state 41
    primary_expression             shift and go to state 42
    identifier                     shift and go to state 45
    int_const                      shift and go to state 46
    float_const                    shift and go to state 47
    frase                          shift and go to state 48

state 118

    (63) compound_statement -> LBRACE statement_list RBRACE .

    LPAREN          reduce using rule 63 (compound_statement -> LBRACE statement_list RBRACE .)
    VOID            reduce using rule 63 (compound_statement -> LBRACE statement_list RBRACE .)
    CHAR            reduce using rule 63 (compound_statement -> LBRACE statement_list RBRACE .)
    INT             reduce using rule 63 (compound_statement -> LBRACE statement_list RBRACE .)
    FLOAT           reduce using rule 63 (compound_statement -> LBRACE statement_list RBRACE .)
    ID              reduce using rule 63 (compound_statement -> LBRACE statement_list RBRACE .)
    $end            reduce using rule 63 (compound_statement -> LBRACE statement_list RBRACE .)
    RBRACE          reduce using rule 63 (compound_statement -> LBRACE statement_list RBRACE .)
    SEMI            reduce using rule 63 (compound_statement -> LBRACE statement_list RBRACE .)
    WHILE           reduce using rule 63 (compound_statement -> LBRACE statement_list RBRACE .)
    FOR             reduce using rule 63 (compound_statement -> LBRACE statement_list RBRACE .)
    LBRACE          reduce using rule 63 (compound_statement -> LBRACE statement_list RBRACE .)
    BREAK           reduce using rule 63 (compound_statement -> LBRACE statement_list RBRACE .)
    RETURN          reduce using rule 63 (compound_statement -> LBRACE statement_list RBRACE .)
    ASSERT          reduce using rule 63 (compound_statement -> LBRACE statement_list RBRACE .)
    PRINT           reduce using rule 63 (compound_statement -> LBRACE statement_list RBRACE .)
    IF              reduce using rule 63 (compound_statement -> LBRACE statement_list RBRACE .)
    READ            reduce using rule 63 (compound_statement -> LBRACE statement_list RBRACE .)
    PLUSPLUS        reduce using rule 63 (compound_statement -> LBRACE statement_list RBRACE .)
    MINUSMINUS      reduce using rule 63 (compound_statement -> LBRACE statement_list RBRACE .)
    ADDRESS         reduce using rule 63 (compound_statement -> LBRACE statement_list RBRACE .)
    TIMES           reduce using rule 63 (compound_statement -> LBRACE statement_list RBRACE .)
    PLUS            reduce using rule 63 (compound_statement -> LBRACE statement_list RBRACE .)
    MINUS           reduce using rule 63 (compound_statement -> LBRACE statement_list RBRACE .)
    NOT             reduce using rule 63 (compound_statement -> LBRACE statement_list RBRACE .)
    INT_CONST       reduce using rule 63 (compound_statement -> LBRACE statement_list RBRACE .)
    FLOAT_CONST     reduce using rule 63 (compound_statement -> LBRACE statement_list RBRACE .)
    STRING          reduce using rule 63 (compound_statement -> LBRACE statement_list RBRACE .)
    ELSE            reduce using rule 63 (compound_statement -> LBRACE statement_list RBRACE .)


state 119

    (13) statement_list -> statement_list statement .

    RBRACE          reduce using rule 13 (statement_list -> statement_list statement .)
    SEMI            reduce using rule 13 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 13 (statement_list -> statement_list statement .)
    FOR             reduce using rule 13 (statement_list -> statement_list statement .)
    LBRACE          reduce using rule 13 (statement_list -> statement_list statement .)
    BREAK           reduce using rule 13 (statement_list -> statement_list statement .)
    RETURN          reduce using rule 13 (statement_list -> statement_list statement .)
    ASSERT          reduce using rule 13 (statement_list -> statement_list statement .)
    PRINT           reduce using rule 13 (statement_list -> statement_list statement .)
    IF              reduce using rule 13 (statement_list -> statement_list statement .)
    READ            reduce using rule 13 (statement_list -> statement_list statement .)
    PLUSPLUS        reduce using rule 13 (statement_list -> statement_list statement .)
    MINUSMINUS      reduce using rule 13 (statement_list -> statement_list statement .)
    LPAREN          reduce using rule 13 (statement_list -> statement_list statement .)
    ADDRESS         reduce using rule 13 (statement_list -> statement_list statement .)
    TIMES           reduce using rule 13 (statement_list -> statement_list statement .)
    PLUS            reduce using rule 13 (statement_list -> statement_list statement .)
    MINUS           reduce using rule 13 (statement_list -> statement_list statement .)
    NOT             reduce using rule 13 (statement_list -> statement_list statement .)
    ID              reduce using rule 13 (statement_list -> statement_list statement .)
    INT_CONST       reduce using rule 13 (statement_list -> statement_list statement .)
    FLOAT_CONST     reduce using rule 13 (statement_list -> statement_list statement .)
    STRING          reduce using rule 13 (statement_list -> statement_list statement .)


state 120

    (103) expression_statement -> expression SEMI .

    RBRACE          reduce using rule 103 (expression_statement -> expression SEMI .)
    SEMI            reduce using rule 103 (expression_statement -> expression SEMI .)
    WHILE           reduce using rule 103 (expression_statement -> expression SEMI .)
    FOR             reduce using rule 103 (expression_statement -> expression SEMI .)
    LBRACE          reduce using rule 103 (expression_statement -> expression SEMI .)
    BREAK           reduce using rule 103 (expression_statement -> expression SEMI .)
    RETURN          reduce using rule 103 (expression_statement -> expression SEMI .)
    ASSERT          reduce using rule 103 (expression_statement -> expression SEMI .)
    PRINT           reduce using rule 103 (expression_statement -> expression SEMI .)
    IF              reduce using rule 103 (expression_statement -> expression SEMI .)
    READ            reduce using rule 103 (expression_statement -> expression SEMI .)
    PLUSPLUS        reduce using rule 103 (expression_statement -> expression SEMI .)
    MINUSMINUS      reduce using rule 103 (expression_statement -> expression SEMI .)
    LPAREN          reduce using rule 103 (expression_statement -> expression SEMI .)
    ADDRESS         reduce using rule 103 (expression_statement -> expression SEMI .)
    TIMES           reduce using rule 103 (expression_statement -> expression SEMI .)
    PLUS            reduce using rule 103 (expression_statement -> expression SEMI .)
    MINUS           reduce using rule 103 (expression_statement -> expression SEMI .)
    NOT             reduce using rule 103 (expression_statement -> expression SEMI .)
    ID              reduce using rule 103 (expression_statement -> expression SEMI .)
    INT_CONST       reduce using rule 103 (expression_statement -> expression SEMI .)
    FLOAT_CONST     reduce using rule 103 (expression_statement -> expression SEMI .)
    STRING          reduce using rule 103 (expression_statement -> expression SEMI .)
    ELSE            reduce using rule 103 (expression_statement -> expression SEMI .)


state 121

    (70) expression -> expression COMMA . assignment_expression
    (67) assignment_expression -> . binary_expression
    (68) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (30) binary_expression -> . cast_expression
    (31) binary_expression -> . binary_expression TIMES binary_expression
    (32) binary_expression -> . binary_expression DIVIDE binary_expression
    (33) binary_expression -> . binary_expression MOD binary_expression
    (34) binary_expression -> . binary_expression MINUS binary_expression
    (35) binary_expression -> . binary_expression PLUS binary_expression
    (36) binary_expression -> . binary_expression LT binary_expression
    (37) binary_expression -> . binary_expression LE binary_expression
    (38) binary_expression -> . binary_expression HT binary_expression
    (39) binary_expression -> . binary_expression HE binary_expression
    (40) binary_expression -> . binary_expression EQUALS binary_expression
    (41) binary_expression -> . binary_expression DIFF binary_expression
    (42) binary_expression -> . binary_expression AND binary_expression
    (43) binary_expression -> . binary_expression OR binary_expression
    (46) unary_expression -> . postfix_expression
    (47) unary_expression -> . PLUSPLUS unary_expression
    (48) unary_expression -> . MINUSMINUS unary_expression
    (49) unary_expression -> . unary_operator cast_expression
    (44) cast_expression -> . unary_expression
    (45) cast_expression -> . LPAREN type_specifier RPAREN cast_expression
    (50) postfix_expression -> . primary_expression
    (51) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (52) postfix_expression -> . postfix_expression LPAREN RPAREN
    (53) postfix_expression -> . postfix_expression LPAREN assignment_expression_list RPAREN
    (54) postfix_expression -> . postfix_expression PLUSPLUS
    (55) postfix_expression -> . postfix_expression MINUSMINUS
    (77) unary_operator -> . ADDRESS
    (78) unary_operator -> . TIMES
    (79) unary_operator -> . PLUS
    (80) unary_operator -> . MINUS
    (81) unary_operator -> . NOT
    (56) primary_expression -> . identifier
    (57) primary_expression -> . int_const
    (58) primary_expression -> . float_const
    (59) primary_expression -> . frase
    (60) primary_expression -> . LPAREN expression RPAREN
    (18) identifier -> . ID
    (20) int_const -> . INT_CONST
    (21) float_const -> . FLOAT_CONST
    (19) frase -> . STRING

    PLUSPLUS        shift and go to state 39
    MINUSMINUS      shift and go to state 40
    LPAREN          shift and go to state 37
    ADDRESS         shift and go to state 43
    TIMES           shift and go to state 33
    PLUS            shift and go to state 35
    MINUS           shift and go to state 34
    NOT             shift and go to state 44
    ID              shift and go to state 14
    INT_CONST       shift and go to state 49
    FLOAT_CONST     shift and go to state 50
    STRING          shift and go to state 51

    assignment_expression          shift and go to state 161
    binary_expression              shift and go to state 80
    unary_expression               shift and go to state 81
    cast_expression                shift and go to state 32
    postfix_expression             shift and go to state 38
    unary_operator                 shift and go to state 41
    primary_expression             shift and go to state 42
    identifier                     shift and go to state 45
    int_const                      shift and go to state 46
    float_const                    shift and go to state 47
    frase                          shift and go to state 48

state 122

    (106) iteration_statement -> WHILE LPAREN . expression RPAREN statement
    (69) expression -> . assignment_expression
    (70) expression -> . expression COMMA assignment_expression
    (67) assignment_expression -> . binary_expression
    (68) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (30) binary_expression -> . cast_expression
    (31) binary_expression -> . binary_expression TIMES binary_expression
    (32) binary_expression -> . binary_expression DIVIDE binary_expression
    (33) binary_expression -> . binary_expression MOD binary_expression
    (34) binary_expression -> . binary_expression MINUS binary_expression
    (35) binary_expression -> . binary_expression PLUS binary_expression
    (36) binary_expression -> . binary_expression LT binary_expression
    (37) binary_expression -> . binary_expression LE binary_expression
    (38) binary_expression -> . binary_expression HT binary_expression
    (39) binary_expression -> . binary_expression HE binary_expression
    (40) binary_expression -> . binary_expression EQUALS binary_expression
    (41) binary_expression -> . binary_expression DIFF binary_expression
    (42) binary_expression -> . binary_expression AND binary_expression
    (43) binary_expression -> . binary_expression OR binary_expression
    (46) unary_expression -> . postfix_expression
    (47) unary_expression -> . PLUSPLUS unary_expression
    (48) unary_expression -> . MINUSMINUS unary_expression
    (49) unary_expression -> . unary_operator cast_expression
    (44) cast_expression -> . unary_expression
    (45) cast_expression -> . LPAREN type_specifier RPAREN cast_expression
    (50) postfix_expression -> . primary_expression
    (51) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (52) postfix_expression -> . postfix_expression LPAREN RPAREN
    (53) postfix_expression -> . postfix_expression LPAREN assignment_expression_list RPAREN
    (54) postfix_expression -> . postfix_expression PLUSPLUS
    (55) postfix_expression -> . postfix_expression MINUSMINUS
    (77) unary_operator -> . ADDRESS
    (78) unary_operator -> . TIMES
    (79) unary_operator -> . PLUS
    (80) unary_operator -> . MINUS
    (81) unary_operator -> . NOT
    (56) primary_expression -> . identifier
    (57) primary_expression -> . int_const
    (58) primary_expression -> . float_const
    (59) primary_expression -> . frase
    (60) primary_expression -> . LPAREN expression RPAREN
    (18) identifier -> . ID
    (20) int_const -> . INT_CONST
    (21) float_const -> . FLOAT_CONST
    (19) frase -> . STRING

    PLUSPLUS        shift and go to state 39
    MINUSMINUS      shift and go to state 40
    LPAREN          shift and go to state 37
    ADDRESS         shift and go to state 43
    TIMES           shift and go to state 33
    PLUS            shift and go to state 35
    MINUS           shift and go to state 34
    NOT             shift and go to state 44
    ID              shift and go to state 14
    INT_CONST       shift and go to state 49
    FLOAT_CONST     shift and go to state 50
    STRING          shift and go to state 51

    expression                     shift and go to state 162
    assignment_expression          shift and go to state 79
    binary_expression              shift and go to state 80
    unary_expression               shift and go to state 81
    cast_expression                shift and go to state 32
    postfix_expression             shift and go to state 38
    unary_operator                 shift and go to state 41
    primary_expression             shift and go to state 42
    identifier                     shift and go to state 45
    int_const                      shift and go to state 46
    float_const                    shift and go to state 47
    frase                          shift and go to state 48

state 123

    (107) iteration_statement -> FOR LPAREN . SEMI SEMI RPAREN statement
    (108) iteration_statement -> FOR LPAREN . expression SEMI SEMI RPAREN statement
    (109) iteration_statement -> FOR LPAREN . SEMI expression SEMI RPAREN statement
    (110) iteration_statement -> FOR LPAREN . SEMI SEMI expression RPAREN statement
    (111) iteration_statement -> FOR LPAREN . expression SEMI expression SEMI RPAREN statement
    (112) iteration_statement -> FOR LPAREN . expression SEMI SEMI expression RPAREN statement
    (113) iteration_statement -> FOR LPAREN . SEMI expression SEMI expression RPAREN statement
    (114) iteration_statement -> FOR LPAREN . expression SEMI expression SEMI expression RPAREN statement
    (69) expression -> . assignment_expression
    (70) expression -> . expression COMMA assignment_expression
    (67) assignment_expression -> . binary_expression
    (68) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (30) binary_expression -> . cast_expression
    (31) binary_expression -> . binary_expression TIMES binary_expression
    (32) binary_expression -> . binary_expression DIVIDE binary_expression
    (33) binary_expression -> . binary_expression MOD binary_expression
    (34) binary_expression -> . binary_expression MINUS binary_expression
    (35) binary_expression -> . binary_expression PLUS binary_expression
    (36) binary_expression -> . binary_expression LT binary_expression
    (37) binary_expression -> . binary_expression LE binary_expression
    (38) binary_expression -> . binary_expression HT binary_expression
    (39) binary_expression -> . binary_expression HE binary_expression
    (40) binary_expression -> . binary_expression EQUALS binary_expression
    (41) binary_expression -> . binary_expression DIFF binary_expression
    (42) binary_expression -> . binary_expression AND binary_expression
    (43) binary_expression -> . binary_expression OR binary_expression
    (46) unary_expression -> . postfix_expression
    (47) unary_expression -> . PLUSPLUS unary_expression
    (48) unary_expression -> . MINUSMINUS unary_expression
    (49) unary_expression -> . unary_operator cast_expression
    (44) cast_expression -> . unary_expression
    (45) cast_expression -> . LPAREN type_specifier RPAREN cast_expression
    (50) postfix_expression -> . primary_expression
    (51) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (52) postfix_expression -> . postfix_expression LPAREN RPAREN
    (53) postfix_expression -> . postfix_expression LPAREN assignment_expression_list RPAREN
    (54) postfix_expression -> . postfix_expression PLUSPLUS
    (55) postfix_expression -> . postfix_expression MINUSMINUS
    (77) unary_operator -> . ADDRESS
    (78) unary_operator -> . TIMES
    (79) unary_operator -> . PLUS
    (80) unary_operator -> . MINUS
    (81) unary_operator -> . NOT
    (56) primary_expression -> . identifier
    (57) primary_expression -> . int_const
    (58) primary_expression -> . float_const
    (59) primary_expression -> . frase
    (60) primary_expression -> . LPAREN expression RPAREN
    (18) identifier -> . ID
    (20) int_const -> . INT_CONST
    (21) float_const -> . FLOAT_CONST
    (19) frase -> . STRING

    SEMI            shift and go to state 163
    PLUSPLUS        shift and go to state 39
    MINUSMINUS      shift and go to state 40
    LPAREN          shift and go to state 37
    ADDRESS         shift and go to state 43
    TIMES           shift and go to state 33
    PLUS            shift and go to state 35
    MINUS           shift and go to state 34
    NOT             shift and go to state 44
    ID              shift and go to state 14
    INT_CONST       shift and go to state 49
    FLOAT_CONST     shift and go to state 50
    STRING          shift and go to state 51

    expression                     shift and go to state 164
    assignment_expression          shift and go to state 79
    binary_expression              shift and go to state 80
    unary_expression               shift and go to state 81
    cast_expression                shift and go to state 32
    postfix_expression             shift and go to state 38
    unary_operator                 shift and go to state 41
    primary_expression             shift and go to state 42
    identifier                     shift and go to state 45
    int_const                      shift and go to state 46
    float_const                    shift and go to state 47
    frase                          shift and go to state 48

state 124

    (117) jump_statement -> RETURN expression .
    (70) expression -> expression . COMMA assignment_expression

    RBRACE          reduce using rule 117 (jump_statement -> RETURN expression .)
    SEMI            reduce using rule 117 (jump_statement -> RETURN expression .)
    WHILE           reduce using rule 117 (jump_statement -> RETURN expression .)
    FOR             reduce using rule 117 (jump_statement -> RETURN expression .)
    LBRACE          reduce using rule 117 (jump_statement -> RETURN expression .)
    BREAK           reduce using rule 117 (jump_statement -> RETURN expression .)
    RETURN          reduce using rule 117 (jump_statement -> RETURN expression .)
    ASSERT          reduce using rule 117 (jump_statement -> RETURN expression .)
    PRINT           reduce using rule 117 (jump_statement -> RETURN expression .)
    IF              reduce using rule 117 (jump_statement -> RETURN expression .)
    READ            reduce using rule 117 (jump_statement -> RETURN expression .)
    PLUSPLUS        reduce using rule 117 (jump_statement -> RETURN expression .)
    MINUSMINUS      reduce using rule 117 (jump_statement -> RETURN expression .)
    LPAREN          reduce using rule 117 (jump_statement -> RETURN expression .)
    ADDRESS         reduce using rule 117 (jump_statement -> RETURN expression .)
    TIMES           reduce using rule 117 (jump_statement -> RETURN expression .)
    PLUS            reduce using rule 117 (jump_statement -> RETURN expression .)
    MINUS           reduce using rule 117 (jump_statement -> RETURN expression .)
    NOT             reduce using rule 117 (jump_statement -> RETURN expression .)
    ID              reduce using rule 117 (jump_statement -> RETURN expression .)
    INT_CONST       reduce using rule 117 (jump_statement -> RETURN expression .)
    FLOAT_CONST     reduce using rule 117 (jump_statement -> RETURN expression .)
    STRING          reduce using rule 117 (jump_statement -> RETURN expression .)
    ELSE            reduce using rule 117 (jump_statement -> RETURN expression .)
    COMMA           shift and go to state 121


state 125

    (118) assert_statement -> ASSERT expression . SEMI
    (70) expression -> expression . COMMA assignment_expression

    SEMI            shift and go to state 165
    COMMA           shift and go to state 121


state 126

    (119) print_statement -> PRINT LPAREN . expression RPAREN SEMI
    (69) expression -> . assignment_expression
    (70) expression -> . expression COMMA assignment_expression
    (67) assignment_expression -> . binary_expression
    (68) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (30) binary_expression -> . cast_expression
    (31) binary_expression -> . binary_expression TIMES binary_expression
    (32) binary_expression -> . binary_expression DIVIDE binary_expression
    (33) binary_expression -> . binary_expression MOD binary_expression
    (34) binary_expression -> . binary_expression MINUS binary_expression
    (35) binary_expression -> . binary_expression PLUS binary_expression
    (36) binary_expression -> . binary_expression LT binary_expression
    (37) binary_expression -> . binary_expression LE binary_expression
    (38) binary_expression -> . binary_expression HT binary_expression
    (39) binary_expression -> . binary_expression HE binary_expression
    (40) binary_expression -> . binary_expression EQUALS binary_expression
    (41) binary_expression -> . binary_expression DIFF binary_expression
    (42) binary_expression -> . binary_expression AND binary_expression
    (43) binary_expression -> . binary_expression OR binary_expression
    (46) unary_expression -> . postfix_expression
    (47) unary_expression -> . PLUSPLUS unary_expression
    (48) unary_expression -> . MINUSMINUS unary_expression
    (49) unary_expression -> . unary_operator cast_expression
    (44) cast_expression -> . unary_expression
    (45) cast_expression -> . LPAREN type_specifier RPAREN cast_expression
    (50) postfix_expression -> . primary_expression
    (51) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (52) postfix_expression -> . postfix_expression LPAREN RPAREN
    (53) postfix_expression -> . postfix_expression LPAREN assignment_expression_list RPAREN
    (54) postfix_expression -> . postfix_expression PLUSPLUS
    (55) postfix_expression -> . postfix_expression MINUSMINUS
    (77) unary_operator -> . ADDRESS
    (78) unary_operator -> . TIMES
    (79) unary_operator -> . PLUS
    (80) unary_operator -> . MINUS
    (81) unary_operator -> . NOT
    (56) primary_expression -> . identifier
    (57) primary_expression -> . int_const
    (58) primary_expression -> . float_const
    (59) primary_expression -> . frase
    (60) primary_expression -> . LPAREN expression RPAREN
    (18) identifier -> . ID
    (20) int_const -> . INT_CONST
    (21) float_const -> . FLOAT_CONST
    (19) frase -> . STRING

    PLUSPLUS        shift and go to state 39
    MINUSMINUS      shift and go to state 40
    LPAREN          shift and go to state 37
    ADDRESS         shift and go to state 43
    TIMES           shift and go to state 33
    PLUS            shift and go to state 35
    MINUS           shift and go to state 34
    NOT             shift and go to state 44
    ID              shift and go to state 14
    INT_CONST       shift and go to state 49
    FLOAT_CONST     shift and go to state 50
    STRING          shift and go to state 51

    expression                     shift and go to state 166
    assignment_expression          shift and go to state 79
    binary_expression              shift and go to state 80
    unary_expression               shift and go to state 81
    cast_expression                shift and go to state 32
    postfix_expression             shift and go to state 38
    unary_operator                 shift and go to state 41
    primary_expression             shift and go to state 42
    identifier                     shift and go to state 45
    int_const                      shift and go to state 46
    float_const                    shift and go to state 47
    frase                          shift and go to state 48

state 127

    (104) selection_statement -> IF LPAREN . expression RPAREN statement
    (105) selection_statement -> IF LPAREN . expression RPAREN statement ELSE statement
    (69) expression -> . assignment_expression
    (70) expression -> . expression COMMA assignment_expression
    (67) assignment_expression -> . binary_expression
    (68) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (30) binary_expression -> . cast_expression
    (31) binary_expression -> . binary_expression TIMES binary_expression
    (32) binary_expression -> . binary_expression DIVIDE binary_expression
    (33) binary_expression -> . binary_expression MOD binary_expression
    (34) binary_expression -> . binary_expression MINUS binary_expression
    (35) binary_expression -> . binary_expression PLUS binary_expression
    (36) binary_expression -> . binary_expression LT binary_expression
    (37) binary_expression -> . binary_expression LE binary_expression
    (38) binary_expression -> . binary_expression HT binary_expression
    (39) binary_expression -> . binary_expression HE binary_expression
    (40) binary_expression -> . binary_expression EQUALS binary_expression
    (41) binary_expression -> . binary_expression DIFF binary_expression
    (42) binary_expression -> . binary_expression AND binary_expression
    (43) binary_expression -> . binary_expression OR binary_expression
    (46) unary_expression -> . postfix_expression
    (47) unary_expression -> . PLUSPLUS unary_expression
    (48) unary_expression -> . MINUSMINUS unary_expression
    (49) unary_expression -> . unary_operator cast_expression
    (44) cast_expression -> . unary_expression
    (45) cast_expression -> . LPAREN type_specifier RPAREN cast_expression
    (50) postfix_expression -> . primary_expression
    (51) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (52) postfix_expression -> . postfix_expression LPAREN RPAREN
    (53) postfix_expression -> . postfix_expression LPAREN assignment_expression_list RPAREN
    (54) postfix_expression -> . postfix_expression PLUSPLUS
    (55) postfix_expression -> . postfix_expression MINUSMINUS
    (77) unary_operator -> . ADDRESS
    (78) unary_operator -> . TIMES
    (79) unary_operator -> . PLUS
    (80) unary_operator -> . MINUS
    (81) unary_operator -> . NOT
    (56) primary_expression -> . identifier
    (57) primary_expression -> . int_const
    (58) primary_expression -> . float_const
    (59) primary_expression -> . frase
    (60) primary_expression -> . LPAREN expression RPAREN
    (18) identifier -> . ID
    (20) int_const -> . INT_CONST
    (21) float_const -> . FLOAT_CONST
    (19) frase -> . STRING

    PLUSPLUS        shift and go to state 39
    MINUSMINUS      shift and go to state 40
    LPAREN          shift and go to state 37
    ADDRESS         shift and go to state 43
    TIMES           shift and go to state 33
    PLUS            shift and go to state 35
    MINUS           shift and go to state 34
    NOT             shift and go to state 44
    ID              shift and go to state 14
    INT_CONST       shift and go to state 49
    FLOAT_CONST     shift and go to state 50
    STRING          shift and go to state 51

    expression                     shift and go to state 167
    assignment_expression          shift and go to state 79
    binary_expression              shift and go to state 80
    unary_expression               shift and go to state 81
    cast_expression                shift and go to state 32
    postfix_expression             shift and go to state 38
    unary_operator                 shift and go to state 41
    primary_expression             shift and go to state 42
    identifier                     shift and go to state 45
    int_const                      shift and go to state 46
    float_const                    shift and go to state 47
    frase                          shift and go to state 48

state 128

    (120) read_statement -> READ LPAREN . declarator_list RPAREN SEMI
    (121) declarator_list -> . declarator
    (122) declarator_list -> . declarator_list declarator
    (22) declarator -> . identifier
    (23) declarator -> . LPAREN declarator RPAREN
    (24) declarator -> . declarator RBRACKET LBRACKET
    (25) declarator -> . declarator RBRACKET constant_expression LBRACKET
    (26) declarator -> . declarator LPAREN parameter_list RPAREN
    (27) declarator -> . declarator LPAREN RPAREN
    (28) declarator -> . declarator LPAREN identifier RPAREN
    (18) identifier -> . ID

    LPAREN          shift and go to state 9
    ID              shift and go to state 14

    declarator_list                shift and go to state 168
    declarator                     shift and go to state 169
    identifier                     shift and go to state 8

state 129

    (68) assignment_expression -> unary_expression assignment_operator . assignment_expression
    (67) assignment_expression -> . binary_expression
    (68) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (30) binary_expression -> . cast_expression
    (31) binary_expression -> . binary_expression TIMES binary_expression
    (32) binary_expression -> . binary_expression DIVIDE binary_expression
    (33) binary_expression -> . binary_expression MOD binary_expression
    (34) binary_expression -> . binary_expression MINUS binary_expression
    (35) binary_expression -> . binary_expression PLUS binary_expression
    (36) binary_expression -> . binary_expression LT binary_expression
    (37) binary_expression -> . binary_expression LE binary_expression
    (38) binary_expression -> . binary_expression HT binary_expression
    (39) binary_expression -> . binary_expression HE binary_expression
    (40) binary_expression -> . binary_expression EQUALS binary_expression
    (41) binary_expression -> . binary_expression DIFF binary_expression
    (42) binary_expression -> . binary_expression AND binary_expression
    (43) binary_expression -> . binary_expression OR binary_expression
    (46) unary_expression -> . postfix_expression
    (47) unary_expression -> . PLUSPLUS unary_expression
    (48) unary_expression -> . MINUSMINUS unary_expression
    (49) unary_expression -> . unary_operator cast_expression
    (44) cast_expression -> . unary_expression
    (45) cast_expression -> . LPAREN type_specifier RPAREN cast_expression
    (50) postfix_expression -> . primary_expression
    (51) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (52) postfix_expression -> . postfix_expression LPAREN RPAREN
    (53) postfix_expression -> . postfix_expression LPAREN assignment_expression_list RPAREN
    (54) postfix_expression -> . postfix_expression PLUSPLUS
    (55) postfix_expression -> . postfix_expression MINUSMINUS
    (77) unary_operator -> . ADDRESS
    (78) unary_operator -> . TIMES
    (79) unary_operator -> . PLUS
    (80) unary_operator -> . MINUS
    (81) unary_operator -> . NOT
    (56) primary_expression -> . identifier
    (57) primary_expression -> . int_const
    (58) primary_expression -> . float_const
    (59) primary_expression -> . frase
    (60) primary_expression -> . LPAREN expression RPAREN
    (18) identifier -> . ID
    (20) int_const -> . INT_CONST
    (21) float_const -> . FLOAT_CONST
    (19) frase -> . STRING

    PLUSPLUS        shift and go to state 39
    MINUSMINUS      shift and go to state 40
    LPAREN          shift and go to state 37
    ADDRESS         shift and go to state 43
    TIMES           shift and go to state 33
    PLUS            shift and go to state 35
    MINUS           shift and go to state 34
    NOT             shift and go to state 44
    ID              shift and go to state 14
    INT_CONST       shift and go to state 49
    FLOAT_CONST     shift and go to state 50
    STRING          shift and go to state 51

    unary_expression               shift and go to state 81
    assignment_expression          shift and go to state 170
    binary_expression              shift and go to state 80
    cast_expression                shift and go to state 32
    postfix_expression             shift and go to state 38
    unary_operator                 shift and go to state 41
    primary_expression             shift and go to state 42
    identifier                     shift and go to state 45
    int_const                      shift and go to state 46
    float_const                    shift and go to state 47
    frase                          shift and go to state 48

state 130

    (71) assignment_operator -> EQ .

    PLUSPLUS        reduce using rule 71 (assignment_operator -> EQ .)
    MINUSMINUS      reduce using rule 71 (assignment_operator -> EQ .)
    LPAREN          reduce using rule 71 (assignment_operator -> EQ .)
    ADDRESS         reduce using rule 71 (assignment_operator -> EQ .)
    TIMES           reduce using rule 71 (assignment_operator -> EQ .)
    PLUS            reduce using rule 71 (assignment_operator -> EQ .)
    MINUS           reduce using rule 71 (assignment_operator -> EQ .)
    NOT             reduce using rule 71 (assignment_operator -> EQ .)
    ID              reduce using rule 71 (assignment_operator -> EQ .)
    INT_CONST       reduce using rule 71 (assignment_operator -> EQ .)
    FLOAT_CONST     reduce using rule 71 (assignment_operator -> EQ .)
    STRING          reduce using rule 71 (assignment_operator -> EQ .)


state 131

    (72) assignment_operator -> ASSIGN_TIMES .

    PLUSPLUS        reduce using rule 72 (assignment_operator -> ASSIGN_TIMES .)
    MINUSMINUS      reduce using rule 72 (assignment_operator -> ASSIGN_TIMES .)
    LPAREN          reduce using rule 72 (assignment_operator -> ASSIGN_TIMES .)
    ADDRESS         reduce using rule 72 (assignment_operator -> ASSIGN_TIMES .)
    TIMES           reduce using rule 72 (assignment_operator -> ASSIGN_TIMES .)
    PLUS            reduce using rule 72 (assignment_operator -> ASSIGN_TIMES .)
    MINUS           reduce using rule 72 (assignment_operator -> ASSIGN_TIMES .)
    NOT             reduce using rule 72 (assignment_operator -> ASSIGN_TIMES .)
    ID              reduce using rule 72 (assignment_operator -> ASSIGN_TIMES .)
    INT_CONST       reduce using rule 72 (assignment_operator -> ASSIGN_TIMES .)
    FLOAT_CONST     reduce using rule 72 (assignment_operator -> ASSIGN_TIMES .)
    STRING          reduce using rule 72 (assignment_operator -> ASSIGN_TIMES .)


state 132

    (73) assignment_operator -> ASSIGN_DIVIDE .

    PLUSPLUS        reduce using rule 73 (assignment_operator -> ASSIGN_DIVIDE .)
    MINUSMINUS      reduce using rule 73 (assignment_operator -> ASSIGN_DIVIDE .)
    LPAREN          reduce using rule 73 (assignment_operator -> ASSIGN_DIVIDE .)
    ADDRESS         reduce using rule 73 (assignment_operator -> ASSIGN_DIVIDE .)
    TIMES           reduce using rule 73 (assignment_operator -> ASSIGN_DIVIDE .)
    PLUS            reduce using rule 73 (assignment_operator -> ASSIGN_DIVIDE .)
    MINUS           reduce using rule 73 (assignment_operator -> ASSIGN_DIVIDE .)
    NOT             reduce using rule 73 (assignment_operator -> ASSIGN_DIVIDE .)
    ID              reduce using rule 73 (assignment_operator -> ASSIGN_DIVIDE .)
    INT_CONST       reduce using rule 73 (assignment_operator -> ASSIGN_DIVIDE .)
    FLOAT_CONST     reduce using rule 73 (assignment_operator -> ASSIGN_DIVIDE .)
    STRING          reduce using rule 73 (assignment_operator -> ASSIGN_DIVIDE .)


state 133

    (74) assignment_operator -> ASSIGN_MOD .

    PLUSPLUS        reduce using rule 74 (assignment_operator -> ASSIGN_MOD .)
    MINUSMINUS      reduce using rule 74 (assignment_operator -> ASSIGN_MOD .)
    LPAREN          reduce using rule 74 (assignment_operator -> ASSIGN_MOD .)
    ADDRESS         reduce using rule 74 (assignment_operator -> ASSIGN_MOD .)
    TIMES           reduce using rule 74 (assignment_operator -> ASSIGN_MOD .)
    PLUS            reduce using rule 74 (assignment_operator -> ASSIGN_MOD .)
    MINUS           reduce using rule 74 (assignment_operator -> ASSIGN_MOD .)
    NOT             reduce using rule 74 (assignment_operator -> ASSIGN_MOD .)
    ID              reduce using rule 74 (assignment_operator -> ASSIGN_MOD .)
    INT_CONST       reduce using rule 74 (assignment_operator -> ASSIGN_MOD .)
    FLOAT_CONST     reduce using rule 74 (assignment_operator -> ASSIGN_MOD .)
    STRING          reduce using rule 74 (assignment_operator -> ASSIGN_MOD .)


state 134

    (75) assignment_operator -> ASSIGN_PLUS .

    PLUSPLUS        reduce using rule 75 (assignment_operator -> ASSIGN_PLUS .)
    MINUSMINUS      reduce using rule 75 (assignment_operator -> ASSIGN_PLUS .)
    LPAREN          reduce using rule 75 (assignment_operator -> ASSIGN_PLUS .)
    ADDRESS         reduce using rule 75 (assignment_operator -> ASSIGN_PLUS .)
    TIMES           reduce using rule 75 (assignment_operator -> ASSIGN_PLUS .)
    PLUS            reduce using rule 75 (assignment_operator -> ASSIGN_PLUS .)
    MINUS           reduce using rule 75 (assignment_operator -> ASSIGN_PLUS .)
    NOT             reduce using rule 75 (assignment_operator -> ASSIGN_PLUS .)
    ID              reduce using rule 75 (assignment_operator -> ASSIGN_PLUS .)
    INT_CONST       reduce using rule 75 (assignment_operator -> ASSIGN_PLUS .)
    FLOAT_CONST     reduce using rule 75 (assignment_operator -> ASSIGN_PLUS .)
    STRING          reduce using rule 75 (assignment_operator -> ASSIGN_PLUS .)


state 135

    (76) assignment_operator -> ASSIGN_MINUS .

    PLUSPLUS        reduce using rule 76 (assignment_operator -> ASSIGN_MINUS .)
    MINUSMINUS      reduce using rule 76 (assignment_operator -> ASSIGN_MINUS .)
    LPAREN          reduce using rule 76 (assignment_operator -> ASSIGN_MINUS .)
    ADDRESS         reduce using rule 76 (assignment_operator -> ASSIGN_MINUS .)
    TIMES           reduce using rule 76 (assignment_operator -> ASSIGN_MINUS .)
    PLUS            reduce using rule 76 (assignment_operator -> ASSIGN_MINUS .)
    MINUS           reduce using rule 76 (assignment_operator -> ASSIGN_MINUS .)
    NOT             reduce using rule 76 (assignment_operator -> ASSIGN_MINUS .)
    ID              reduce using rule 76 (assignment_operator -> ASSIGN_MINUS .)
    INT_CONST       reduce using rule 76 (assignment_operator -> ASSIGN_MINUS .)
    FLOAT_CONST     reduce using rule 76 (assignment_operator -> ASSIGN_MINUS .)
    STRING          reduce using rule 76 (assignment_operator -> ASSIGN_MINUS .)


state 136

    (9) function_definition -> type_specifier declarator declaration_list compound_statement .

    LPAREN          reduce using rule 9 (function_definition -> type_specifier declarator declaration_list compound_statement .)
    VOID            reduce using rule 9 (function_definition -> type_specifier declarator declaration_list compound_statement .)
    CHAR            reduce using rule 9 (function_definition -> type_specifier declarator declaration_list compound_statement .)
    INT             reduce using rule 9 (function_definition -> type_specifier declarator declaration_list compound_statement .)
    FLOAT           reduce using rule 9 (function_definition -> type_specifier declarator declaration_list compound_statement .)
    ID              reduce using rule 9 (function_definition -> type_specifier declarator declaration_list compound_statement .)
    $end            reduce using rule 9 (function_definition -> type_specifier declarator declaration_list compound_statement .)


state 137

    (88) init_declarator -> declarator EQ initializer .

    SEMI            reduce using rule 88 (init_declarator -> declarator EQ initializer .)


state 138

    (89) initializer -> assignment_expression .

    SEMI            reduce using rule 89 (initializer -> assignment_expression .)
    RBRACE          reduce using rule 89 (initializer -> assignment_expression .)
    COMMA           reduce using rule 89 (initializer -> assignment_expression .)


state 139

    (90) initializer -> LBRACE . initializer_list RBRACE
    (91) initializer -> LBRACE . initializer_list COMMA RBRACE
    (92) initializer_list -> . initializer
    (93) initializer_list -> . initializer_list COMMA initializer
    (89) initializer -> . assignment_expression
    (90) initializer -> . LBRACE initializer_list RBRACE
    (91) initializer -> . LBRACE initializer_list COMMA RBRACE
    (67) assignment_expression -> . binary_expression
    (68) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (30) binary_expression -> . cast_expression
    (31) binary_expression -> . binary_expression TIMES binary_expression
    (32) binary_expression -> . binary_expression DIVIDE binary_expression
    (33) binary_expression -> . binary_expression MOD binary_expression
    (34) binary_expression -> . binary_expression MINUS binary_expression
    (35) binary_expression -> . binary_expression PLUS binary_expression
    (36) binary_expression -> . binary_expression LT binary_expression
    (37) binary_expression -> . binary_expression LE binary_expression
    (38) binary_expression -> . binary_expression HT binary_expression
    (39) binary_expression -> . binary_expression HE binary_expression
    (40) binary_expression -> . binary_expression EQUALS binary_expression
    (41) binary_expression -> . binary_expression DIFF binary_expression
    (42) binary_expression -> . binary_expression AND binary_expression
    (43) binary_expression -> . binary_expression OR binary_expression
    (46) unary_expression -> . postfix_expression
    (47) unary_expression -> . PLUSPLUS unary_expression
    (48) unary_expression -> . MINUSMINUS unary_expression
    (49) unary_expression -> . unary_operator cast_expression
    (44) cast_expression -> . unary_expression
    (45) cast_expression -> . LPAREN type_specifier RPAREN cast_expression
    (50) postfix_expression -> . primary_expression
    (51) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (52) postfix_expression -> . postfix_expression LPAREN RPAREN
    (53) postfix_expression -> . postfix_expression LPAREN assignment_expression_list RPAREN
    (54) postfix_expression -> . postfix_expression PLUSPLUS
    (55) postfix_expression -> . postfix_expression MINUSMINUS
    (77) unary_operator -> . ADDRESS
    (78) unary_operator -> . TIMES
    (79) unary_operator -> . PLUS
    (80) unary_operator -> . MINUS
    (81) unary_operator -> . NOT
    (56) primary_expression -> . identifier
    (57) primary_expression -> . int_const
    (58) primary_expression -> . float_const
    (59) primary_expression -> . frase
    (60) primary_expression -> . LPAREN expression RPAREN
    (18) identifier -> . ID
    (20) int_const -> . INT_CONST
    (21) float_const -> . FLOAT_CONST
    (19) frase -> . STRING

    LBRACE          shift and go to state 139
    PLUSPLUS        shift and go to state 39
    MINUSMINUS      shift and go to state 40
    LPAREN          shift and go to state 37
    ADDRESS         shift and go to state 43
    TIMES           shift and go to state 33
    PLUS            shift and go to state 35
    MINUS           shift and go to state 34
    NOT             shift and go to state 44
    ID              shift and go to state 14
    INT_CONST       shift and go to state 49
    FLOAT_CONST     shift and go to state 50
    STRING          shift and go to state 51

    initializer_list               shift and go to state 171
    initializer                    shift and go to state 172
    assignment_expression          shift and go to state 138
    binary_expression              shift and go to state 80
    unary_expression               shift and go to state 81
    cast_expression                shift and go to state 32
    postfix_expression             shift and go to state 38
    unary_operator                 shift and go to state 41
    primary_expression             shift and go to state 42
    identifier                     shift and go to state 45
    int_const                      shift and go to state 46
    float_const                    shift and go to state 47
    frase                          shift and go to state 48

state 140

    (31) binary_expression -> binary_expression TIMES binary_expression .
    (31) binary_expression -> binary_expression . TIMES binary_expression
    (32) binary_expression -> binary_expression . DIVIDE binary_expression
    (33) binary_expression -> binary_expression . MOD binary_expression
    (34) binary_expression -> binary_expression . MINUS binary_expression
    (35) binary_expression -> binary_expression . PLUS binary_expression
    (36) binary_expression -> binary_expression . LT binary_expression
    (37) binary_expression -> binary_expression . LE binary_expression
    (38) binary_expression -> binary_expression . HT binary_expression
    (39) binary_expression -> binary_expression . HE binary_expression
    (40) binary_expression -> binary_expression . EQUALS binary_expression
    (41) binary_expression -> binary_expression . DIFF binary_expression
    (42) binary_expression -> binary_expression . AND binary_expression
    (43) binary_expression -> binary_expression . OR binary_expression

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for HT resolved as shift
  ! shift/reduce conflict for HE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    LBRACKET        reduce using rule 31 (binary_expression -> binary_expression TIMES binary_expression .)
    SEMI            reduce using rule 31 (binary_expression -> binary_expression TIMES binary_expression .)
    COMMA           reduce using rule 31 (binary_expression -> binary_expression TIMES binary_expression .)
    RPAREN          reduce using rule 31 (binary_expression -> binary_expression TIMES binary_expression .)
    RBRACE          reduce using rule 31 (binary_expression -> binary_expression TIMES binary_expression .)
    WHILE           reduce using rule 31 (binary_expression -> binary_expression TIMES binary_expression .)
    FOR             reduce using rule 31 (binary_expression -> binary_expression TIMES binary_expression .)
    LBRACE          reduce using rule 31 (binary_expression -> binary_expression TIMES binary_expression .)
    BREAK           reduce using rule 31 (binary_expression -> binary_expression TIMES binary_expression .)
    RETURN          reduce using rule 31 (binary_expression -> binary_expression TIMES binary_expression .)
    ASSERT          reduce using rule 31 (binary_expression -> binary_expression TIMES binary_expression .)
    PRINT           reduce using rule 31 (binary_expression -> binary_expression TIMES binary_expression .)
    IF              reduce using rule 31 (binary_expression -> binary_expression TIMES binary_expression .)
    READ            reduce using rule 31 (binary_expression -> binary_expression TIMES binary_expression .)
    PLUSPLUS        reduce using rule 31 (binary_expression -> binary_expression TIMES binary_expression .)
    MINUSMINUS      reduce using rule 31 (binary_expression -> binary_expression TIMES binary_expression .)
    LPAREN          reduce using rule 31 (binary_expression -> binary_expression TIMES binary_expression .)
    ADDRESS         reduce using rule 31 (binary_expression -> binary_expression TIMES binary_expression .)
    NOT             reduce using rule 31 (binary_expression -> binary_expression TIMES binary_expression .)
    ID              reduce using rule 31 (binary_expression -> binary_expression TIMES binary_expression .)
    INT_CONST       reduce using rule 31 (binary_expression -> binary_expression TIMES binary_expression .)
    FLOAT_CONST     reduce using rule 31 (binary_expression -> binary_expression TIMES binary_expression .)
    STRING          reduce using rule 31 (binary_expression -> binary_expression TIMES binary_expression .)
    ELSE            reduce using rule 31 (binary_expression -> binary_expression TIMES binary_expression .)
    RBRACKET        reduce using rule 31 (binary_expression -> binary_expression TIMES binary_expression .)
    TIMES           shift and go to state 89
    DIVIDE          shift and go to state 90
    MOD             shift and go to state 91
    MINUS           shift and go to state 92
    PLUS            shift and go to state 93
    LT              shift and go to state 94
    LE              shift and go to state 95
    HT              shift and go to state 96
    HE              shift and go to state 97
    EQUALS          shift and go to state 98
    DIFF            shift and go to state 99
    AND             shift and go to state 100
    OR              shift and go to state 101

  ! TIMES           [ reduce using rule 31 (binary_expression -> binary_expression TIMES binary_expression .) ]
  ! DIVIDE          [ reduce using rule 31 (binary_expression -> binary_expression TIMES binary_expression .) ]
  ! MOD             [ reduce using rule 31 (binary_expression -> binary_expression TIMES binary_expression .) ]
  ! MINUS           [ reduce using rule 31 (binary_expression -> binary_expression TIMES binary_expression .) ]
  ! PLUS            [ reduce using rule 31 (binary_expression -> binary_expression TIMES binary_expression .) ]
  ! LT              [ reduce using rule 31 (binary_expression -> binary_expression TIMES binary_expression .) ]
  ! LE              [ reduce using rule 31 (binary_expression -> binary_expression TIMES binary_expression .) ]
  ! HT              [ reduce using rule 31 (binary_expression -> binary_expression TIMES binary_expression .) ]
  ! HE              [ reduce using rule 31 (binary_expression -> binary_expression TIMES binary_expression .) ]
  ! EQUALS          [ reduce using rule 31 (binary_expression -> binary_expression TIMES binary_expression .) ]
  ! DIFF            [ reduce using rule 31 (binary_expression -> binary_expression TIMES binary_expression .) ]
  ! AND             [ reduce using rule 31 (binary_expression -> binary_expression TIMES binary_expression .) ]
  ! OR              [ reduce using rule 31 (binary_expression -> binary_expression TIMES binary_expression .) ]


state 141

    (32) binary_expression -> binary_expression DIVIDE binary_expression .
    (31) binary_expression -> binary_expression . TIMES binary_expression
    (32) binary_expression -> binary_expression . DIVIDE binary_expression
    (33) binary_expression -> binary_expression . MOD binary_expression
    (34) binary_expression -> binary_expression . MINUS binary_expression
    (35) binary_expression -> binary_expression . PLUS binary_expression
    (36) binary_expression -> binary_expression . LT binary_expression
    (37) binary_expression -> binary_expression . LE binary_expression
    (38) binary_expression -> binary_expression . HT binary_expression
    (39) binary_expression -> binary_expression . HE binary_expression
    (40) binary_expression -> binary_expression . EQUALS binary_expression
    (41) binary_expression -> binary_expression . DIFF binary_expression
    (42) binary_expression -> binary_expression . AND binary_expression
    (43) binary_expression -> binary_expression . OR binary_expression

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for HT resolved as shift
  ! shift/reduce conflict for HE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    LBRACKET        reduce using rule 32 (binary_expression -> binary_expression DIVIDE binary_expression .)
    SEMI            reduce using rule 32 (binary_expression -> binary_expression DIVIDE binary_expression .)
    COMMA           reduce using rule 32 (binary_expression -> binary_expression DIVIDE binary_expression .)
    RPAREN          reduce using rule 32 (binary_expression -> binary_expression DIVIDE binary_expression .)
    RBRACE          reduce using rule 32 (binary_expression -> binary_expression DIVIDE binary_expression .)
    WHILE           reduce using rule 32 (binary_expression -> binary_expression DIVIDE binary_expression .)
    FOR             reduce using rule 32 (binary_expression -> binary_expression DIVIDE binary_expression .)
    LBRACE          reduce using rule 32 (binary_expression -> binary_expression DIVIDE binary_expression .)
    BREAK           reduce using rule 32 (binary_expression -> binary_expression DIVIDE binary_expression .)
    RETURN          reduce using rule 32 (binary_expression -> binary_expression DIVIDE binary_expression .)
    ASSERT          reduce using rule 32 (binary_expression -> binary_expression DIVIDE binary_expression .)
    PRINT           reduce using rule 32 (binary_expression -> binary_expression DIVIDE binary_expression .)
    IF              reduce using rule 32 (binary_expression -> binary_expression DIVIDE binary_expression .)
    READ            reduce using rule 32 (binary_expression -> binary_expression DIVIDE binary_expression .)
    PLUSPLUS        reduce using rule 32 (binary_expression -> binary_expression DIVIDE binary_expression .)
    MINUSMINUS      reduce using rule 32 (binary_expression -> binary_expression DIVIDE binary_expression .)
    LPAREN          reduce using rule 32 (binary_expression -> binary_expression DIVIDE binary_expression .)
    ADDRESS         reduce using rule 32 (binary_expression -> binary_expression DIVIDE binary_expression .)
    NOT             reduce using rule 32 (binary_expression -> binary_expression DIVIDE binary_expression .)
    ID              reduce using rule 32 (binary_expression -> binary_expression DIVIDE binary_expression .)
    INT_CONST       reduce using rule 32 (binary_expression -> binary_expression DIVIDE binary_expression .)
    FLOAT_CONST     reduce using rule 32 (binary_expression -> binary_expression DIVIDE binary_expression .)
    STRING          reduce using rule 32 (binary_expression -> binary_expression DIVIDE binary_expression .)
    ELSE            reduce using rule 32 (binary_expression -> binary_expression DIVIDE binary_expression .)
    RBRACKET        reduce using rule 32 (binary_expression -> binary_expression DIVIDE binary_expression .)
    TIMES           shift and go to state 89
    DIVIDE          shift and go to state 90
    MOD             shift and go to state 91
    MINUS           shift and go to state 92
    PLUS            shift and go to state 93
    LT              shift and go to state 94
    LE              shift and go to state 95
    HT              shift and go to state 96
    HE              shift and go to state 97
    EQUALS          shift and go to state 98
    DIFF            shift and go to state 99
    AND             shift and go to state 100
    OR              shift and go to state 101

  ! TIMES           [ reduce using rule 32 (binary_expression -> binary_expression DIVIDE binary_expression .) ]
  ! DIVIDE          [ reduce using rule 32 (binary_expression -> binary_expression DIVIDE binary_expression .) ]
  ! MOD             [ reduce using rule 32 (binary_expression -> binary_expression DIVIDE binary_expression .) ]
  ! MINUS           [ reduce using rule 32 (binary_expression -> binary_expression DIVIDE binary_expression .) ]
  ! PLUS            [ reduce using rule 32 (binary_expression -> binary_expression DIVIDE binary_expression .) ]
  ! LT              [ reduce using rule 32 (binary_expression -> binary_expression DIVIDE binary_expression .) ]
  ! LE              [ reduce using rule 32 (binary_expression -> binary_expression DIVIDE binary_expression .) ]
  ! HT              [ reduce using rule 32 (binary_expression -> binary_expression DIVIDE binary_expression .) ]
  ! HE              [ reduce using rule 32 (binary_expression -> binary_expression DIVIDE binary_expression .) ]
  ! EQUALS          [ reduce using rule 32 (binary_expression -> binary_expression DIVIDE binary_expression .) ]
  ! DIFF            [ reduce using rule 32 (binary_expression -> binary_expression DIVIDE binary_expression .) ]
  ! AND             [ reduce using rule 32 (binary_expression -> binary_expression DIVIDE binary_expression .) ]
  ! OR              [ reduce using rule 32 (binary_expression -> binary_expression DIVIDE binary_expression .) ]


state 142

    (33) binary_expression -> binary_expression MOD binary_expression .
    (31) binary_expression -> binary_expression . TIMES binary_expression
    (32) binary_expression -> binary_expression . DIVIDE binary_expression
    (33) binary_expression -> binary_expression . MOD binary_expression
    (34) binary_expression -> binary_expression . MINUS binary_expression
    (35) binary_expression -> binary_expression . PLUS binary_expression
    (36) binary_expression -> binary_expression . LT binary_expression
    (37) binary_expression -> binary_expression . LE binary_expression
    (38) binary_expression -> binary_expression . HT binary_expression
    (39) binary_expression -> binary_expression . HE binary_expression
    (40) binary_expression -> binary_expression . EQUALS binary_expression
    (41) binary_expression -> binary_expression . DIFF binary_expression
    (42) binary_expression -> binary_expression . AND binary_expression
    (43) binary_expression -> binary_expression . OR binary_expression

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for HT resolved as shift
  ! shift/reduce conflict for HE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    LBRACKET        reduce using rule 33 (binary_expression -> binary_expression MOD binary_expression .)
    SEMI            reduce using rule 33 (binary_expression -> binary_expression MOD binary_expression .)
    COMMA           reduce using rule 33 (binary_expression -> binary_expression MOD binary_expression .)
    RPAREN          reduce using rule 33 (binary_expression -> binary_expression MOD binary_expression .)
    RBRACE          reduce using rule 33 (binary_expression -> binary_expression MOD binary_expression .)
    WHILE           reduce using rule 33 (binary_expression -> binary_expression MOD binary_expression .)
    FOR             reduce using rule 33 (binary_expression -> binary_expression MOD binary_expression .)
    LBRACE          reduce using rule 33 (binary_expression -> binary_expression MOD binary_expression .)
    BREAK           reduce using rule 33 (binary_expression -> binary_expression MOD binary_expression .)
    RETURN          reduce using rule 33 (binary_expression -> binary_expression MOD binary_expression .)
    ASSERT          reduce using rule 33 (binary_expression -> binary_expression MOD binary_expression .)
    PRINT           reduce using rule 33 (binary_expression -> binary_expression MOD binary_expression .)
    IF              reduce using rule 33 (binary_expression -> binary_expression MOD binary_expression .)
    READ            reduce using rule 33 (binary_expression -> binary_expression MOD binary_expression .)
    PLUSPLUS        reduce using rule 33 (binary_expression -> binary_expression MOD binary_expression .)
    MINUSMINUS      reduce using rule 33 (binary_expression -> binary_expression MOD binary_expression .)
    LPAREN          reduce using rule 33 (binary_expression -> binary_expression MOD binary_expression .)
    ADDRESS         reduce using rule 33 (binary_expression -> binary_expression MOD binary_expression .)
    NOT             reduce using rule 33 (binary_expression -> binary_expression MOD binary_expression .)
    ID              reduce using rule 33 (binary_expression -> binary_expression MOD binary_expression .)
    INT_CONST       reduce using rule 33 (binary_expression -> binary_expression MOD binary_expression .)
    FLOAT_CONST     reduce using rule 33 (binary_expression -> binary_expression MOD binary_expression .)
    STRING          reduce using rule 33 (binary_expression -> binary_expression MOD binary_expression .)
    ELSE            reduce using rule 33 (binary_expression -> binary_expression MOD binary_expression .)
    RBRACKET        reduce using rule 33 (binary_expression -> binary_expression MOD binary_expression .)
    TIMES           shift and go to state 89
    DIVIDE          shift and go to state 90
    MOD             shift and go to state 91
    MINUS           shift and go to state 92
    PLUS            shift and go to state 93
    LT              shift and go to state 94
    LE              shift and go to state 95
    HT              shift and go to state 96
    HE              shift and go to state 97
    EQUALS          shift and go to state 98
    DIFF            shift and go to state 99
    AND             shift and go to state 100
    OR              shift and go to state 101

  ! TIMES           [ reduce using rule 33 (binary_expression -> binary_expression MOD binary_expression .) ]
  ! DIVIDE          [ reduce using rule 33 (binary_expression -> binary_expression MOD binary_expression .) ]
  ! MOD             [ reduce using rule 33 (binary_expression -> binary_expression MOD binary_expression .) ]
  ! MINUS           [ reduce using rule 33 (binary_expression -> binary_expression MOD binary_expression .) ]
  ! PLUS            [ reduce using rule 33 (binary_expression -> binary_expression MOD binary_expression .) ]
  ! LT              [ reduce using rule 33 (binary_expression -> binary_expression MOD binary_expression .) ]
  ! LE              [ reduce using rule 33 (binary_expression -> binary_expression MOD binary_expression .) ]
  ! HT              [ reduce using rule 33 (binary_expression -> binary_expression MOD binary_expression .) ]
  ! HE              [ reduce using rule 33 (binary_expression -> binary_expression MOD binary_expression .) ]
  ! EQUALS          [ reduce using rule 33 (binary_expression -> binary_expression MOD binary_expression .) ]
  ! DIFF            [ reduce using rule 33 (binary_expression -> binary_expression MOD binary_expression .) ]
  ! AND             [ reduce using rule 33 (binary_expression -> binary_expression MOD binary_expression .) ]
  ! OR              [ reduce using rule 33 (binary_expression -> binary_expression MOD binary_expression .) ]


state 143

    (34) binary_expression -> binary_expression MINUS binary_expression .
    (31) binary_expression -> binary_expression . TIMES binary_expression
    (32) binary_expression -> binary_expression . DIVIDE binary_expression
    (33) binary_expression -> binary_expression . MOD binary_expression
    (34) binary_expression -> binary_expression . MINUS binary_expression
    (35) binary_expression -> binary_expression . PLUS binary_expression
    (36) binary_expression -> binary_expression . LT binary_expression
    (37) binary_expression -> binary_expression . LE binary_expression
    (38) binary_expression -> binary_expression . HT binary_expression
    (39) binary_expression -> binary_expression . HE binary_expression
    (40) binary_expression -> binary_expression . EQUALS binary_expression
    (41) binary_expression -> binary_expression . DIFF binary_expression
    (42) binary_expression -> binary_expression . AND binary_expression
    (43) binary_expression -> binary_expression . OR binary_expression

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for HT resolved as shift
  ! shift/reduce conflict for HE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    LBRACKET        reduce using rule 34 (binary_expression -> binary_expression MINUS binary_expression .)
    SEMI            reduce using rule 34 (binary_expression -> binary_expression MINUS binary_expression .)
    COMMA           reduce using rule 34 (binary_expression -> binary_expression MINUS binary_expression .)
    RPAREN          reduce using rule 34 (binary_expression -> binary_expression MINUS binary_expression .)
    RBRACE          reduce using rule 34 (binary_expression -> binary_expression MINUS binary_expression .)
    WHILE           reduce using rule 34 (binary_expression -> binary_expression MINUS binary_expression .)
    FOR             reduce using rule 34 (binary_expression -> binary_expression MINUS binary_expression .)
    LBRACE          reduce using rule 34 (binary_expression -> binary_expression MINUS binary_expression .)
    BREAK           reduce using rule 34 (binary_expression -> binary_expression MINUS binary_expression .)
    RETURN          reduce using rule 34 (binary_expression -> binary_expression MINUS binary_expression .)
    ASSERT          reduce using rule 34 (binary_expression -> binary_expression MINUS binary_expression .)
    PRINT           reduce using rule 34 (binary_expression -> binary_expression MINUS binary_expression .)
    IF              reduce using rule 34 (binary_expression -> binary_expression MINUS binary_expression .)
    READ            reduce using rule 34 (binary_expression -> binary_expression MINUS binary_expression .)
    PLUSPLUS        reduce using rule 34 (binary_expression -> binary_expression MINUS binary_expression .)
    MINUSMINUS      reduce using rule 34 (binary_expression -> binary_expression MINUS binary_expression .)
    LPAREN          reduce using rule 34 (binary_expression -> binary_expression MINUS binary_expression .)
    ADDRESS         reduce using rule 34 (binary_expression -> binary_expression MINUS binary_expression .)
    NOT             reduce using rule 34 (binary_expression -> binary_expression MINUS binary_expression .)
    ID              reduce using rule 34 (binary_expression -> binary_expression MINUS binary_expression .)
    INT_CONST       reduce using rule 34 (binary_expression -> binary_expression MINUS binary_expression .)
    FLOAT_CONST     reduce using rule 34 (binary_expression -> binary_expression MINUS binary_expression .)
    STRING          reduce using rule 34 (binary_expression -> binary_expression MINUS binary_expression .)
    ELSE            reduce using rule 34 (binary_expression -> binary_expression MINUS binary_expression .)
    RBRACKET        reduce using rule 34 (binary_expression -> binary_expression MINUS binary_expression .)
    TIMES           shift and go to state 89
    DIVIDE          shift and go to state 90
    MOD             shift and go to state 91
    MINUS           shift and go to state 92
    PLUS            shift and go to state 93
    LT              shift and go to state 94
    LE              shift and go to state 95
    HT              shift and go to state 96
    HE              shift and go to state 97
    EQUALS          shift and go to state 98
    DIFF            shift and go to state 99
    AND             shift and go to state 100
    OR              shift and go to state 101

  ! TIMES           [ reduce using rule 34 (binary_expression -> binary_expression MINUS binary_expression .) ]
  ! DIVIDE          [ reduce using rule 34 (binary_expression -> binary_expression MINUS binary_expression .) ]
  ! MOD             [ reduce using rule 34 (binary_expression -> binary_expression MINUS binary_expression .) ]
  ! MINUS           [ reduce using rule 34 (binary_expression -> binary_expression MINUS binary_expression .) ]
  ! PLUS            [ reduce using rule 34 (binary_expression -> binary_expression MINUS binary_expression .) ]
  ! LT              [ reduce using rule 34 (binary_expression -> binary_expression MINUS binary_expression .) ]
  ! LE              [ reduce using rule 34 (binary_expression -> binary_expression MINUS binary_expression .) ]
  ! HT              [ reduce using rule 34 (binary_expression -> binary_expression MINUS binary_expression .) ]
  ! HE              [ reduce using rule 34 (binary_expression -> binary_expression MINUS binary_expression .) ]
  ! EQUALS          [ reduce using rule 34 (binary_expression -> binary_expression MINUS binary_expression .) ]
  ! DIFF            [ reduce using rule 34 (binary_expression -> binary_expression MINUS binary_expression .) ]
  ! AND             [ reduce using rule 34 (binary_expression -> binary_expression MINUS binary_expression .) ]
  ! OR              [ reduce using rule 34 (binary_expression -> binary_expression MINUS binary_expression .) ]


state 144

    (35) binary_expression -> binary_expression PLUS binary_expression .
    (31) binary_expression -> binary_expression . TIMES binary_expression
    (32) binary_expression -> binary_expression . DIVIDE binary_expression
    (33) binary_expression -> binary_expression . MOD binary_expression
    (34) binary_expression -> binary_expression . MINUS binary_expression
    (35) binary_expression -> binary_expression . PLUS binary_expression
    (36) binary_expression -> binary_expression . LT binary_expression
    (37) binary_expression -> binary_expression . LE binary_expression
    (38) binary_expression -> binary_expression . HT binary_expression
    (39) binary_expression -> binary_expression . HE binary_expression
    (40) binary_expression -> binary_expression . EQUALS binary_expression
    (41) binary_expression -> binary_expression . DIFF binary_expression
    (42) binary_expression -> binary_expression . AND binary_expression
    (43) binary_expression -> binary_expression . OR binary_expression

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for HT resolved as shift
  ! shift/reduce conflict for HE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    LBRACKET        reduce using rule 35 (binary_expression -> binary_expression PLUS binary_expression .)
    SEMI            reduce using rule 35 (binary_expression -> binary_expression PLUS binary_expression .)
    COMMA           reduce using rule 35 (binary_expression -> binary_expression PLUS binary_expression .)
    RPAREN          reduce using rule 35 (binary_expression -> binary_expression PLUS binary_expression .)
    RBRACE          reduce using rule 35 (binary_expression -> binary_expression PLUS binary_expression .)
    WHILE           reduce using rule 35 (binary_expression -> binary_expression PLUS binary_expression .)
    FOR             reduce using rule 35 (binary_expression -> binary_expression PLUS binary_expression .)
    LBRACE          reduce using rule 35 (binary_expression -> binary_expression PLUS binary_expression .)
    BREAK           reduce using rule 35 (binary_expression -> binary_expression PLUS binary_expression .)
    RETURN          reduce using rule 35 (binary_expression -> binary_expression PLUS binary_expression .)
    ASSERT          reduce using rule 35 (binary_expression -> binary_expression PLUS binary_expression .)
    PRINT           reduce using rule 35 (binary_expression -> binary_expression PLUS binary_expression .)
    IF              reduce using rule 35 (binary_expression -> binary_expression PLUS binary_expression .)
    READ            reduce using rule 35 (binary_expression -> binary_expression PLUS binary_expression .)
    PLUSPLUS        reduce using rule 35 (binary_expression -> binary_expression PLUS binary_expression .)
    MINUSMINUS      reduce using rule 35 (binary_expression -> binary_expression PLUS binary_expression .)
    LPAREN          reduce using rule 35 (binary_expression -> binary_expression PLUS binary_expression .)
    ADDRESS         reduce using rule 35 (binary_expression -> binary_expression PLUS binary_expression .)
    NOT             reduce using rule 35 (binary_expression -> binary_expression PLUS binary_expression .)
    ID              reduce using rule 35 (binary_expression -> binary_expression PLUS binary_expression .)
    INT_CONST       reduce using rule 35 (binary_expression -> binary_expression PLUS binary_expression .)
    FLOAT_CONST     reduce using rule 35 (binary_expression -> binary_expression PLUS binary_expression .)
    STRING          reduce using rule 35 (binary_expression -> binary_expression PLUS binary_expression .)
    ELSE            reduce using rule 35 (binary_expression -> binary_expression PLUS binary_expression .)
    RBRACKET        reduce using rule 35 (binary_expression -> binary_expression PLUS binary_expression .)
    TIMES           shift and go to state 89
    DIVIDE          shift and go to state 90
    MOD             shift and go to state 91
    MINUS           shift and go to state 92
    PLUS            shift and go to state 93
    LT              shift and go to state 94
    LE              shift and go to state 95
    HT              shift and go to state 96
    HE              shift and go to state 97
    EQUALS          shift and go to state 98
    DIFF            shift and go to state 99
    AND             shift and go to state 100
    OR              shift and go to state 101

  ! TIMES           [ reduce using rule 35 (binary_expression -> binary_expression PLUS binary_expression .) ]
  ! DIVIDE          [ reduce using rule 35 (binary_expression -> binary_expression PLUS binary_expression .) ]
  ! MOD             [ reduce using rule 35 (binary_expression -> binary_expression PLUS binary_expression .) ]
  ! MINUS           [ reduce using rule 35 (binary_expression -> binary_expression PLUS binary_expression .) ]
  ! PLUS            [ reduce using rule 35 (binary_expression -> binary_expression PLUS binary_expression .) ]
  ! LT              [ reduce using rule 35 (binary_expression -> binary_expression PLUS binary_expression .) ]
  ! LE              [ reduce using rule 35 (binary_expression -> binary_expression PLUS binary_expression .) ]
  ! HT              [ reduce using rule 35 (binary_expression -> binary_expression PLUS binary_expression .) ]
  ! HE              [ reduce using rule 35 (binary_expression -> binary_expression PLUS binary_expression .) ]
  ! EQUALS          [ reduce using rule 35 (binary_expression -> binary_expression PLUS binary_expression .) ]
  ! DIFF            [ reduce using rule 35 (binary_expression -> binary_expression PLUS binary_expression .) ]
  ! AND             [ reduce using rule 35 (binary_expression -> binary_expression PLUS binary_expression .) ]
  ! OR              [ reduce using rule 35 (binary_expression -> binary_expression PLUS binary_expression .) ]


state 145

    (36) binary_expression -> binary_expression LT binary_expression .
    (31) binary_expression -> binary_expression . TIMES binary_expression
    (32) binary_expression -> binary_expression . DIVIDE binary_expression
    (33) binary_expression -> binary_expression . MOD binary_expression
    (34) binary_expression -> binary_expression . MINUS binary_expression
    (35) binary_expression -> binary_expression . PLUS binary_expression
    (36) binary_expression -> binary_expression . LT binary_expression
    (37) binary_expression -> binary_expression . LE binary_expression
    (38) binary_expression -> binary_expression . HT binary_expression
    (39) binary_expression -> binary_expression . HE binary_expression
    (40) binary_expression -> binary_expression . EQUALS binary_expression
    (41) binary_expression -> binary_expression . DIFF binary_expression
    (42) binary_expression -> binary_expression . AND binary_expression
    (43) binary_expression -> binary_expression . OR binary_expression

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for HT resolved as shift
  ! shift/reduce conflict for HE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    LBRACKET        reduce using rule 36 (binary_expression -> binary_expression LT binary_expression .)
    SEMI            reduce using rule 36 (binary_expression -> binary_expression LT binary_expression .)
    COMMA           reduce using rule 36 (binary_expression -> binary_expression LT binary_expression .)
    RPAREN          reduce using rule 36 (binary_expression -> binary_expression LT binary_expression .)
    RBRACE          reduce using rule 36 (binary_expression -> binary_expression LT binary_expression .)
    WHILE           reduce using rule 36 (binary_expression -> binary_expression LT binary_expression .)
    FOR             reduce using rule 36 (binary_expression -> binary_expression LT binary_expression .)
    LBRACE          reduce using rule 36 (binary_expression -> binary_expression LT binary_expression .)
    BREAK           reduce using rule 36 (binary_expression -> binary_expression LT binary_expression .)
    RETURN          reduce using rule 36 (binary_expression -> binary_expression LT binary_expression .)
    ASSERT          reduce using rule 36 (binary_expression -> binary_expression LT binary_expression .)
    PRINT           reduce using rule 36 (binary_expression -> binary_expression LT binary_expression .)
    IF              reduce using rule 36 (binary_expression -> binary_expression LT binary_expression .)
    READ            reduce using rule 36 (binary_expression -> binary_expression LT binary_expression .)
    PLUSPLUS        reduce using rule 36 (binary_expression -> binary_expression LT binary_expression .)
    MINUSMINUS      reduce using rule 36 (binary_expression -> binary_expression LT binary_expression .)
    LPAREN          reduce using rule 36 (binary_expression -> binary_expression LT binary_expression .)
    ADDRESS         reduce using rule 36 (binary_expression -> binary_expression LT binary_expression .)
    NOT             reduce using rule 36 (binary_expression -> binary_expression LT binary_expression .)
    ID              reduce using rule 36 (binary_expression -> binary_expression LT binary_expression .)
    INT_CONST       reduce using rule 36 (binary_expression -> binary_expression LT binary_expression .)
    FLOAT_CONST     reduce using rule 36 (binary_expression -> binary_expression LT binary_expression .)
    STRING          reduce using rule 36 (binary_expression -> binary_expression LT binary_expression .)
    ELSE            reduce using rule 36 (binary_expression -> binary_expression LT binary_expression .)
    RBRACKET        reduce using rule 36 (binary_expression -> binary_expression LT binary_expression .)
    TIMES           shift and go to state 89
    DIVIDE          shift and go to state 90
    MOD             shift and go to state 91
    MINUS           shift and go to state 92
    PLUS            shift and go to state 93
    LT              shift and go to state 94
    LE              shift and go to state 95
    HT              shift and go to state 96
    HE              shift and go to state 97
    EQUALS          shift and go to state 98
    DIFF            shift and go to state 99
    AND             shift and go to state 100
    OR              shift and go to state 101

  ! TIMES           [ reduce using rule 36 (binary_expression -> binary_expression LT binary_expression .) ]
  ! DIVIDE          [ reduce using rule 36 (binary_expression -> binary_expression LT binary_expression .) ]
  ! MOD             [ reduce using rule 36 (binary_expression -> binary_expression LT binary_expression .) ]
  ! MINUS           [ reduce using rule 36 (binary_expression -> binary_expression LT binary_expression .) ]
  ! PLUS            [ reduce using rule 36 (binary_expression -> binary_expression LT binary_expression .) ]
  ! LT              [ reduce using rule 36 (binary_expression -> binary_expression LT binary_expression .) ]
  ! LE              [ reduce using rule 36 (binary_expression -> binary_expression LT binary_expression .) ]
  ! HT              [ reduce using rule 36 (binary_expression -> binary_expression LT binary_expression .) ]
  ! HE              [ reduce using rule 36 (binary_expression -> binary_expression LT binary_expression .) ]
  ! EQUALS          [ reduce using rule 36 (binary_expression -> binary_expression LT binary_expression .) ]
  ! DIFF            [ reduce using rule 36 (binary_expression -> binary_expression LT binary_expression .) ]
  ! AND             [ reduce using rule 36 (binary_expression -> binary_expression LT binary_expression .) ]
  ! OR              [ reduce using rule 36 (binary_expression -> binary_expression LT binary_expression .) ]


state 146

    (37) binary_expression -> binary_expression LE binary_expression .
    (31) binary_expression -> binary_expression . TIMES binary_expression
    (32) binary_expression -> binary_expression . DIVIDE binary_expression
    (33) binary_expression -> binary_expression . MOD binary_expression
    (34) binary_expression -> binary_expression . MINUS binary_expression
    (35) binary_expression -> binary_expression . PLUS binary_expression
    (36) binary_expression -> binary_expression . LT binary_expression
    (37) binary_expression -> binary_expression . LE binary_expression
    (38) binary_expression -> binary_expression . HT binary_expression
    (39) binary_expression -> binary_expression . HE binary_expression
    (40) binary_expression -> binary_expression . EQUALS binary_expression
    (41) binary_expression -> binary_expression . DIFF binary_expression
    (42) binary_expression -> binary_expression . AND binary_expression
    (43) binary_expression -> binary_expression . OR binary_expression

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for HT resolved as shift
  ! shift/reduce conflict for HE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    LBRACKET        reduce using rule 37 (binary_expression -> binary_expression LE binary_expression .)
    SEMI            reduce using rule 37 (binary_expression -> binary_expression LE binary_expression .)
    COMMA           reduce using rule 37 (binary_expression -> binary_expression LE binary_expression .)
    RPAREN          reduce using rule 37 (binary_expression -> binary_expression LE binary_expression .)
    RBRACE          reduce using rule 37 (binary_expression -> binary_expression LE binary_expression .)
    WHILE           reduce using rule 37 (binary_expression -> binary_expression LE binary_expression .)
    FOR             reduce using rule 37 (binary_expression -> binary_expression LE binary_expression .)
    LBRACE          reduce using rule 37 (binary_expression -> binary_expression LE binary_expression .)
    BREAK           reduce using rule 37 (binary_expression -> binary_expression LE binary_expression .)
    RETURN          reduce using rule 37 (binary_expression -> binary_expression LE binary_expression .)
    ASSERT          reduce using rule 37 (binary_expression -> binary_expression LE binary_expression .)
    PRINT           reduce using rule 37 (binary_expression -> binary_expression LE binary_expression .)
    IF              reduce using rule 37 (binary_expression -> binary_expression LE binary_expression .)
    READ            reduce using rule 37 (binary_expression -> binary_expression LE binary_expression .)
    PLUSPLUS        reduce using rule 37 (binary_expression -> binary_expression LE binary_expression .)
    MINUSMINUS      reduce using rule 37 (binary_expression -> binary_expression LE binary_expression .)
    LPAREN          reduce using rule 37 (binary_expression -> binary_expression LE binary_expression .)
    ADDRESS         reduce using rule 37 (binary_expression -> binary_expression LE binary_expression .)
    NOT             reduce using rule 37 (binary_expression -> binary_expression LE binary_expression .)
    ID              reduce using rule 37 (binary_expression -> binary_expression LE binary_expression .)
    INT_CONST       reduce using rule 37 (binary_expression -> binary_expression LE binary_expression .)
    FLOAT_CONST     reduce using rule 37 (binary_expression -> binary_expression LE binary_expression .)
    STRING          reduce using rule 37 (binary_expression -> binary_expression LE binary_expression .)
    ELSE            reduce using rule 37 (binary_expression -> binary_expression LE binary_expression .)
    RBRACKET        reduce using rule 37 (binary_expression -> binary_expression LE binary_expression .)
    TIMES           shift and go to state 89
    DIVIDE          shift and go to state 90
    MOD             shift and go to state 91
    MINUS           shift and go to state 92
    PLUS            shift and go to state 93
    LT              shift and go to state 94
    LE              shift and go to state 95
    HT              shift and go to state 96
    HE              shift and go to state 97
    EQUALS          shift and go to state 98
    DIFF            shift and go to state 99
    AND             shift and go to state 100
    OR              shift and go to state 101

  ! TIMES           [ reduce using rule 37 (binary_expression -> binary_expression LE binary_expression .) ]
  ! DIVIDE          [ reduce using rule 37 (binary_expression -> binary_expression LE binary_expression .) ]
  ! MOD             [ reduce using rule 37 (binary_expression -> binary_expression LE binary_expression .) ]
  ! MINUS           [ reduce using rule 37 (binary_expression -> binary_expression LE binary_expression .) ]
  ! PLUS            [ reduce using rule 37 (binary_expression -> binary_expression LE binary_expression .) ]
  ! LT              [ reduce using rule 37 (binary_expression -> binary_expression LE binary_expression .) ]
  ! LE              [ reduce using rule 37 (binary_expression -> binary_expression LE binary_expression .) ]
  ! HT              [ reduce using rule 37 (binary_expression -> binary_expression LE binary_expression .) ]
  ! HE              [ reduce using rule 37 (binary_expression -> binary_expression LE binary_expression .) ]
  ! EQUALS          [ reduce using rule 37 (binary_expression -> binary_expression LE binary_expression .) ]
  ! DIFF            [ reduce using rule 37 (binary_expression -> binary_expression LE binary_expression .) ]
  ! AND             [ reduce using rule 37 (binary_expression -> binary_expression LE binary_expression .) ]
  ! OR              [ reduce using rule 37 (binary_expression -> binary_expression LE binary_expression .) ]


state 147

    (38) binary_expression -> binary_expression HT binary_expression .
    (31) binary_expression -> binary_expression . TIMES binary_expression
    (32) binary_expression -> binary_expression . DIVIDE binary_expression
    (33) binary_expression -> binary_expression . MOD binary_expression
    (34) binary_expression -> binary_expression . MINUS binary_expression
    (35) binary_expression -> binary_expression . PLUS binary_expression
    (36) binary_expression -> binary_expression . LT binary_expression
    (37) binary_expression -> binary_expression . LE binary_expression
    (38) binary_expression -> binary_expression . HT binary_expression
    (39) binary_expression -> binary_expression . HE binary_expression
    (40) binary_expression -> binary_expression . EQUALS binary_expression
    (41) binary_expression -> binary_expression . DIFF binary_expression
    (42) binary_expression -> binary_expression . AND binary_expression
    (43) binary_expression -> binary_expression . OR binary_expression

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for HT resolved as shift
  ! shift/reduce conflict for HE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    LBRACKET        reduce using rule 38 (binary_expression -> binary_expression HT binary_expression .)
    SEMI            reduce using rule 38 (binary_expression -> binary_expression HT binary_expression .)
    COMMA           reduce using rule 38 (binary_expression -> binary_expression HT binary_expression .)
    RPAREN          reduce using rule 38 (binary_expression -> binary_expression HT binary_expression .)
    RBRACE          reduce using rule 38 (binary_expression -> binary_expression HT binary_expression .)
    WHILE           reduce using rule 38 (binary_expression -> binary_expression HT binary_expression .)
    FOR             reduce using rule 38 (binary_expression -> binary_expression HT binary_expression .)
    LBRACE          reduce using rule 38 (binary_expression -> binary_expression HT binary_expression .)
    BREAK           reduce using rule 38 (binary_expression -> binary_expression HT binary_expression .)
    RETURN          reduce using rule 38 (binary_expression -> binary_expression HT binary_expression .)
    ASSERT          reduce using rule 38 (binary_expression -> binary_expression HT binary_expression .)
    PRINT           reduce using rule 38 (binary_expression -> binary_expression HT binary_expression .)
    IF              reduce using rule 38 (binary_expression -> binary_expression HT binary_expression .)
    READ            reduce using rule 38 (binary_expression -> binary_expression HT binary_expression .)
    PLUSPLUS        reduce using rule 38 (binary_expression -> binary_expression HT binary_expression .)
    MINUSMINUS      reduce using rule 38 (binary_expression -> binary_expression HT binary_expression .)
    LPAREN          reduce using rule 38 (binary_expression -> binary_expression HT binary_expression .)
    ADDRESS         reduce using rule 38 (binary_expression -> binary_expression HT binary_expression .)
    NOT             reduce using rule 38 (binary_expression -> binary_expression HT binary_expression .)
    ID              reduce using rule 38 (binary_expression -> binary_expression HT binary_expression .)
    INT_CONST       reduce using rule 38 (binary_expression -> binary_expression HT binary_expression .)
    FLOAT_CONST     reduce using rule 38 (binary_expression -> binary_expression HT binary_expression .)
    STRING          reduce using rule 38 (binary_expression -> binary_expression HT binary_expression .)
    ELSE            reduce using rule 38 (binary_expression -> binary_expression HT binary_expression .)
    RBRACKET        reduce using rule 38 (binary_expression -> binary_expression HT binary_expression .)
    TIMES           shift and go to state 89
    DIVIDE          shift and go to state 90
    MOD             shift and go to state 91
    MINUS           shift and go to state 92
    PLUS            shift and go to state 93
    LT              shift and go to state 94
    LE              shift and go to state 95
    HT              shift and go to state 96
    HE              shift and go to state 97
    EQUALS          shift and go to state 98
    DIFF            shift and go to state 99
    AND             shift and go to state 100
    OR              shift and go to state 101

  ! TIMES           [ reduce using rule 38 (binary_expression -> binary_expression HT binary_expression .) ]
  ! DIVIDE          [ reduce using rule 38 (binary_expression -> binary_expression HT binary_expression .) ]
  ! MOD             [ reduce using rule 38 (binary_expression -> binary_expression HT binary_expression .) ]
  ! MINUS           [ reduce using rule 38 (binary_expression -> binary_expression HT binary_expression .) ]
  ! PLUS            [ reduce using rule 38 (binary_expression -> binary_expression HT binary_expression .) ]
  ! LT              [ reduce using rule 38 (binary_expression -> binary_expression HT binary_expression .) ]
  ! LE              [ reduce using rule 38 (binary_expression -> binary_expression HT binary_expression .) ]
  ! HT              [ reduce using rule 38 (binary_expression -> binary_expression HT binary_expression .) ]
  ! HE              [ reduce using rule 38 (binary_expression -> binary_expression HT binary_expression .) ]
  ! EQUALS          [ reduce using rule 38 (binary_expression -> binary_expression HT binary_expression .) ]
  ! DIFF            [ reduce using rule 38 (binary_expression -> binary_expression HT binary_expression .) ]
  ! AND             [ reduce using rule 38 (binary_expression -> binary_expression HT binary_expression .) ]
  ! OR              [ reduce using rule 38 (binary_expression -> binary_expression HT binary_expression .) ]


state 148

    (39) binary_expression -> binary_expression HE binary_expression .
    (31) binary_expression -> binary_expression . TIMES binary_expression
    (32) binary_expression -> binary_expression . DIVIDE binary_expression
    (33) binary_expression -> binary_expression . MOD binary_expression
    (34) binary_expression -> binary_expression . MINUS binary_expression
    (35) binary_expression -> binary_expression . PLUS binary_expression
    (36) binary_expression -> binary_expression . LT binary_expression
    (37) binary_expression -> binary_expression . LE binary_expression
    (38) binary_expression -> binary_expression . HT binary_expression
    (39) binary_expression -> binary_expression . HE binary_expression
    (40) binary_expression -> binary_expression . EQUALS binary_expression
    (41) binary_expression -> binary_expression . DIFF binary_expression
    (42) binary_expression -> binary_expression . AND binary_expression
    (43) binary_expression -> binary_expression . OR binary_expression

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for HT resolved as shift
  ! shift/reduce conflict for HE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    LBRACKET        reduce using rule 39 (binary_expression -> binary_expression HE binary_expression .)
    SEMI            reduce using rule 39 (binary_expression -> binary_expression HE binary_expression .)
    COMMA           reduce using rule 39 (binary_expression -> binary_expression HE binary_expression .)
    RPAREN          reduce using rule 39 (binary_expression -> binary_expression HE binary_expression .)
    RBRACE          reduce using rule 39 (binary_expression -> binary_expression HE binary_expression .)
    WHILE           reduce using rule 39 (binary_expression -> binary_expression HE binary_expression .)
    FOR             reduce using rule 39 (binary_expression -> binary_expression HE binary_expression .)
    LBRACE          reduce using rule 39 (binary_expression -> binary_expression HE binary_expression .)
    BREAK           reduce using rule 39 (binary_expression -> binary_expression HE binary_expression .)
    RETURN          reduce using rule 39 (binary_expression -> binary_expression HE binary_expression .)
    ASSERT          reduce using rule 39 (binary_expression -> binary_expression HE binary_expression .)
    PRINT           reduce using rule 39 (binary_expression -> binary_expression HE binary_expression .)
    IF              reduce using rule 39 (binary_expression -> binary_expression HE binary_expression .)
    READ            reduce using rule 39 (binary_expression -> binary_expression HE binary_expression .)
    PLUSPLUS        reduce using rule 39 (binary_expression -> binary_expression HE binary_expression .)
    MINUSMINUS      reduce using rule 39 (binary_expression -> binary_expression HE binary_expression .)
    LPAREN          reduce using rule 39 (binary_expression -> binary_expression HE binary_expression .)
    ADDRESS         reduce using rule 39 (binary_expression -> binary_expression HE binary_expression .)
    NOT             reduce using rule 39 (binary_expression -> binary_expression HE binary_expression .)
    ID              reduce using rule 39 (binary_expression -> binary_expression HE binary_expression .)
    INT_CONST       reduce using rule 39 (binary_expression -> binary_expression HE binary_expression .)
    FLOAT_CONST     reduce using rule 39 (binary_expression -> binary_expression HE binary_expression .)
    STRING          reduce using rule 39 (binary_expression -> binary_expression HE binary_expression .)
    ELSE            reduce using rule 39 (binary_expression -> binary_expression HE binary_expression .)
    RBRACKET        reduce using rule 39 (binary_expression -> binary_expression HE binary_expression .)
    TIMES           shift and go to state 89
    DIVIDE          shift and go to state 90
    MOD             shift and go to state 91
    MINUS           shift and go to state 92
    PLUS            shift and go to state 93
    LT              shift and go to state 94
    LE              shift and go to state 95
    HT              shift and go to state 96
    HE              shift and go to state 97
    EQUALS          shift and go to state 98
    DIFF            shift and go to state 99
    AND             shift and go to state 100
    OR              shift and go to state 101

  ! TIMES           [ reduce using rule 39 (binary_expression -> binary_expression HE binary_expression .) ]
  ! DIVIDE          [ reduce using rule 39 (binary_expression -> binary_expression HE binary_expression .) ]
  ! MOD             [ reduce using rule 39 (binary_expression -> binary_expression HE binary_expression .) ]
  ! MINUS           [ reduce using rule 39 (binary_expression -> binary_expression HE binary_expression .) ]
  ! PLUS            [ reduce using rule 39 (binary_expression -> binary_expression HE binary_expression .) ]
  ! LT              [ reduce using rule 39 (binary_expression -> binary_expression HE binary_expression .) ]
  ! LE              [ reduce using rule 39 (binary_expression -> binary_expression HE binary_expression .) ]
  ! HT              [ reduce using rule 39 (binary_expression -> binary_expression HE binary_expression .) ]
  ! HE              [ reduce using rule 39 (binary_expression -> binary_expression HE binary_expression .) ]
  ! EQUALS          [ reduce using rule 39 (binary_expression -> binary_expression HE binary_expression .) ]
  ! DIFF            [ reduce using rule 39 (binary_expression -> binary_expression HE binary_expression .) ]
  ! AND             [ reduce using rule 39 (binary_expression -> binary_expression HE binary_expression .) ]
  ! OR              [ reduce using rule 39 (binary_expression -> binary_expression HE binary_expression .) ]


state 149

    (40) binary_expression -> binary_expression EQUALS binary_expression .
    (31) binary_expression -> binary_expression . TIMES binary_expression
    (32) binary_expression -> binary_expression . DIVIDE binary_expression
    (33) binary_expression -> binary_expression . MOD binary_expression
    (34) binary_expression -> binary_expression . MINUS binary_expression
    (35) binary_expression -> binary_expression . PLUS binary_expression
    (36) binary_expression -> binary_expression . LT binary_expression
    (37) binary_expression -> binary_expression . LE binary_expression
    (38) binary_expression -> binary_expression . HT binary_expression
    (39) binary_expression -> binary_expression . HE binary_expression
    (40) binary_expression -> binary_expression . EQUALS binary_expression
    (41) binary_expression -> binary_expression . DIFF binary_expression
    (42) binary_expression -> binary_expression . AND binary_expression
    (43) binary_expression -> binary_expression . OR binary_expression

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for HT resolved as shift
  ! shift/reduce conflict for HE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    LBRACKET        reduce using rule 40 (binary_expression -> binary_expression EQUALS binary_expression .)
    SEMI            reduce using rule 40 (binary_expression -> binary_expression EQUALS binary_expression .)
    COMMA           reduce using rule 40 (binary_expression -> binary_expression EQUALS binary_expression .)
    RPAREN          reduce using rule 40 (binary_expression -> binary_expression EQUALS binary_expression .)
    RBRACE          reduce using rule 40 (binary_expression -> binary_expression EQUALS binary_expression .)
    WHILE           reduce using rule 40 (binary_expression -> binary_expression EQUALS binary_expression .)
    FOR             reduce using rule 40 (binary_expression -> binary_expression EQUALS binary_expression .)
    LBRACE          reduce using rule 40 (binary_expression -> binary_expression EQUALS binary_expression .)
    BREAK           reduce using rule 40 (binary_expression -> binary_expression EQUALS binary_expression .)
    RETURN          reduce using rule 40 (binary_expression -> binary_expression EQUALS binary_expression .)
    ASSERT          reduce using rule 40 (binary_expression -> binary_expression EQUALS binary_expression .)
    PRINT           reduce using rule 40 (binary_expression -> binary_expression EQUALS binary_expression .)
    IF              reduce using rule 40 (binary_expression -> binary_expression EQUALS binary_expression .)
    READ            reduce using rule 40 (binary_expression -> binary_expression EQUALS binary_expression .)
    PLUSPLUS        reduce using rule 40 (binary_expression -> binary_expression EQUALS binary_expression .)
    MINUSMINUS      reduce using rule 40 (binary_expression -> binary_expression EQUALS binary_expression .)
    LPAREN          reduce using rule 40 (binary_expression -> binary_expression EQUALS binary_expression .)
    ADDRESS         reduce using rule 40 (binary_expression -> binary_expression EQUALS binary_expression .)
    NOT             reduce using rule 40 (binary_expression -> binary_expression EQUALS binary_expression .)
    ID              reduce using rule 40 (binary_expression -> binary_expression EQUALS binary_expression .)
    INT_CONST       reduce using rule 40 (binary_expression -> binary_expression EQUALS binary_expression .)
    FLOAT_CONST     reduce using rule 40 (binary_expression -> binary_expression EQUALS binary_expression .)
    STRING          reduce using rule 40 (binary_expression -> binary_expression EQUALS binary_expression .)
    ELSE            reduce using rule 40 (binary_expression -> binary_expression EQUALS binary_expression .)
    RBRACKET        reduce using rule 40 (binary_expression -> binary_expression EQUALS binary_expression .)
    TIMES           shift and go to state 89
    DIVIDE          shift and go to state 90
    MOD             shift and go to state 91
    MINUS           shift and go to state 92
    PLUS            shift and go to state 93
    LT              shift and go to state 94
    LE              shift and go to state 95
    HT              shift and go to state 96
    HE              shift and go to state 97
    EQUALS          shift and go to state 98
    DIFF            shift and go to state 99
    AND             shift and go to state 100
    OR              shift and go to state 101

  ! TIMES           [ reduce using rule 40 (binary_expression -> binary_expression EQUALS binary_expression .) ]
  ! DIVIDE          [ reduce using rule 40 (binary_expression -> binary_expression EQUALS binary_expression .) ]
  ! MOD             [ reduce using rule 40 (binary_expression -> binary_expression EQUALS binary_expression .) ]
  ! MINUS           [ reduce using rule 40 (binary_expression -> binary_expression EQUALS binary_expression .) ]
  ! PLUS            [ reduce using rule 40 (binary_expression -> binary_expression EQUALS binary_expression .) ]
  ! LT              [ reduce using rule 40 (binary_expression -> binary_expression EQUALS binary_expression .) ]
  ! LE              [ reduce using rule 40 (binary_expression -> binary_expression EQUALS binary_expression .) ]
  ! HT              [ reduce using rule 40 (binary_expression -> binary_expression EQUALS binary_expression .) ]
  ! HE              [ reduce using rule 40 (binary_expression -> binary_expression EQUALS binary_expression .) ]
  ! EQUALS          [ reduce using rule 40 (binary_expression -> binary_expression EQUALS binary_expression .) ]
  ! DIFF            [ reduce using rule 40 (binary_expression -> binary_expression EQUALS binary_expression .) ]
  ! AND             [ reduce using rule 40 (binary_expression -> binary_expression EQUALS binary_expression .) ]
  ! OR              [ reduce using rule 40 (binary_expression -> binary_expression EQUALS binary_expression .) ]


state 150

    (41) binary_expression -> binary_expression DIFF binary_expression .
    (31) binary_expression -> binary_expression . TIMES binary_expression
    (32) binary_expression -> binary_expression . DIVIDE binary_expression
    (33) binary_expression -> binary_expression . MOD binary_expression
    (34) binary_expression -> binary_expression . MINUS binary_expression
    (35) binary_expression -> binary_expression . PLUS binary_expression
    (36) binary_expression -> binary_expression . LT binary_expression
    (37) binary_expression -> binary_expression . LE binary_expression
    (38) binary_expression -> binary_expression . HT binary_expression
    (39) binary_expression -> binary_expression . HE binary_expression
    (40) binary_expression -> binary_expression . EQUALS binary_expression
    (41) binary_expression -> binary_expression . DIFF binary_expression
    (42) binary_expression -> binary_expression . AND binary_expression
    (43) binary_expression -> binary_expression . OR binary_expression

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for HT resolved as shift
  ! shift/reduce conflict for HE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    LBRACKET        reduce using rule 41 (binary_expression -> binary_expression DIFF binary_expression .)
    SEMI            reduce using rule 41 (binary_expression -> binary_expression DIFF binary_expression .)
    COMMA           reduce using rule 41 (binary_expression -> binary_expression DIFF binary_expression .)
    RPAREN          reduce using rule 41 (binary_expression -> binary_expression DIFF binary_expression .)
    RBRACE          reduce using rule 41 (binary_expression -> binary_expression DIFF binary_expression .)
    WHILE           reduce using rule 41 (binary_expression -> binary_expression DIFF binary_expression .)
    FOR             reduce using rule 41 (binary_expression -> binary_expression DIFF binary_expression .)
    LBRACE          reduce using rule 41 (binary_expression -> binary_expression DIFF binary_expression .)
    BREAK           reduce using rule 41 (binary_expression -> binary_expression DIFF binary_expression .)
    RETURN          reduce using rule 41 (binary_expression -> binary_expression DIFF binary_expression .)
    ASSERT          reduce using rule 41 (binary_expression -> binary_expression DIFF binary_expression .)
    PRINT           reduce using rule 41 (binary_expression -> binary_expression DIFF binary_expression .)
    IF              reduce using rule 41 (binary_expression -> binary_expression DIFF binary_expression .)
    READ            reduce using rule 41 (binary_expression -> binary_expression DIFF binary_expression .)
    PLUSPLUS        reduce using rule 41 (binary_expression -> binary_expression DIFF binary_expression .)
    MINUSMINUS      reduce using rule 41 (binary_expression -> binary_expression DIFF binary_expression .)
    LPAREN          reduce using rule 41 (binary_expression -> binary_expression DIFF binary_expression .)
    ADDRESS         reduce using rule 41 (binary_expression -> binary_expression DIFF binary_expression .)
    NOT             reduce using rule 41 (binary_expression -> binary_expression DIFF binary_expression .)
    ID              reduce using rule 41 (binary_expression -> binary_expression DIFF binary_expression .)
    INT_CONST       reduce using rule 41 (binary_expression -> binary_expression DIFF binary_expression .)
    FLOAT_CONST     reduce using rule 41 (binary_expression -> binary_expression DIFF binary_expression .)
    STRING          reduce using rule 41 (binary_expression -> binary_expression DIFF binary_expression .)
    ELSE            reduce using rule 41 (binary_expression -> binary_expression DIFF binary_expression .)
    RBRACKET        reduce using rule 41 (binary_expression -> binary_expression DIFF binary_expression .)
    TIMES           shift and go to state 89
    DIVIDE          shift and go to state 90
    MOD             shift and go to state 91
    MINUS           shift and go to state 92
    PLUS            shift and go to state 93
    LT              shift and go to state 94
    LE              shift and go to state 95
    HT              shift and go to state 96
    HE              shift and go to state 97
    EQUALS          shift and go to state 98
    DIFF            shift and go to state 99
    AND             shift and go to state 100
    OR              shift and go to state 101

  ! TIMES           [ reduce using rule 41 (binary_expression -> binary_expression DIFF binary_expression .) ]
  ! DIVIDE          [ reduce using rule 41 (binary_expression -> binary_expression DIFF binary_expression .) ]
  ! MOD             [ reduce using rule 41 (binary_expression -> binary_expression DIFF binary_expression .) ]
  ! MINUS           [ reduce using rule 41 (binary_expression -> binary_expression DIFF binary_expression .) ]
  ! PLUS            [ reduce using rule 41 (binary_expression -> binary_expression DIFF binary_expression .) ]
  ! LT              [ reduce using rule 41 (binary_expression -> binary_expression DIFF binary_expression .) ]
  ! LE              [ reduce using rule 41 (binary_expression -> binary_expression DIFF binary_expression .) ]
  ! HT              [ reduce using rule 41 (binary_expression -> binary_expression DIFF binary_expression .) ]
  ! HE              [ reduce using rule 41 (binary_expression -> binary_expression DIFF binary_expression .) ]
  ! EQUALS          [ reduce using rule 41 (binary_expression -> binary_expression DIFF binary_expression .) ]
  ! DIFF            [ reduce using rule 41 (binary_expression -> binary_expression DIFF binary_expression .) ]
  ! AND             [ reduce using rule 41 (binary_expression -> binary_expression DIFF binary_expression .) ]
  ! OR              [ reduce using rule 41 (binary_expression -> binary_expression DIFF binary_expression .) ]


state 151

    (42) binary_expression -> binary_expression AND binary_expression .
    (31) binary_expression -> binary_expression . TIMES binary_expression
    (32) binary_expression -> binary_expression . DIVIDE binary_expression
    (33) binary_expression -> binary_expression . MOD binary_expression
    (34) binary_expression -> binary_expression . MINUS binary_expression
    (35) binary_expression -> binary_expression . PLUS binary_expression
    (36) binary_expression -> binary_expression . LT binary_expression
    (37) binary_expression -> binary_expression . LE binary_expression
    (38) binary_expression -> binary_expression . HT binary_expression
    (39) binary_expression -> binary_expression . HE binary_expression
    (40) binary_expression -> binary_expression . EQUALS binary_expression
    (41) binary_expression -> binary_expression . DIFF binary_expression
    (42) binary_expression -> binary_expression . AND binary_expression
    (43) binary_expression -> binary_expression . OR binary_expression

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for HT resolved as shift
  ! shift/reduce conflict for HE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    LBRACKET        reduce using rule 42 (binary_expression -> binary_expression AND binary_expression .)
    SEMI            reduce using rule 42 (binary_expression -> binary_expression AND binary_expression .)
    COMMA           reduce using rule 42 (binary_expression -> binary_expression AND binary_expression .)
    RPAREN          reduce using rule 42 (binary_expression -> binary_expression AND binary_expression .)
    RBRACE          reduce using rule 42 (binary_expression -> binary_expression AND binary_expression .)
    WHILE           reduce using rule 42 (binary_expression -> binary_expression AND binary_expression .)
    FOR             reduce using rule 42 (binary_expression -> binary_expression AND binary_expression .)
    LBRACE          reduce using rule 42 (binary_expression -> binary_expression AND binary_expression .)
    BREAK           reduce using rule 42 (binary_expression -> binary_expression AND binary_expression .)
    RETURN          reduce using rule 42 (binary_expression -> binary_expression AND binary_expression .)
    ASSERT          reduce using rule 42 (binary_expression -> binary_expression AND binary_expression .)
    PRINT           reduce using rule 42 (binary_expression -> binary_expression AND binary_expression .)
    IF              reduce using rule 42 (binary_expression -> binary_expression AND binary_expression .)
    READ            reduce using rule 42 (binary_expression -> binary_expression AND binary_expression .)
    PLUSPLUS        reduce using rule 42 (binary_expression -> binary_expression AND binary_expression .)
    MINUSMINUS      reduce using rule 42 (binary_expression -> binary_expression AND binary_expression .)
    LPAREN          reduce using rule 42 (binary_expression -> binary_expression AND binary_expression .)
    ADDRESS         reduce using rule 42 (binary_expression -> binary_expression AND binary_expression .)
    NOT             reduce using rule 42 (binary_expression -> binary_expression AND binary_expression .)
    ID              reduce using rule 42 (binary_expression -> binary_expression AND binary_expression .)
    INT_CONST       reduce using rule 42 (binary_expression -> binary_expression AND binary_expression .)
    FLOAT_CONST     reduce using rule 42 (binary_expression -> binary_expression AND binary_expression .)
    STRING          reduce using rule 42 (binary_expression -> binary_expression AND binary_expression .)
    ELSE            reduce using rule 42 (binary_expression -> binary_expression AND binary_expression .)
    RBRACKET        reduce using rule 42 (binary_expression -> binary_expression AND binary_expression .)
    TIMES           shift and go to state 89
    DIVIDE          shift and go to state 90
    MOD             shift and go to state 91
    MINUS           shift and go to state 92
    PLUS            shift and go to state 93
    LT              shift and go to state 94
    LE              shift and go to state 95
    HT              shift and go to state 96
    HE              shift and go to state 97
    EQUALS          shift and go to state 98
    DIFF            shift and go to state 99
    AND             shift and go to state 100
    OR              shift and go to state 101

  ! TIMES           [ reduce using rule 42 (binary_expression -> binary_expression AND binary_expression .) ]
  ! DIVIDE          [ reduce using rule 42 (binary_expression -> binary_expression AND binary_expression .) ]
  ! MOD             [ reduce using rule 42 (binary_expression -> binary_expression AND binary_expression .) ]
  ! MINUS           [ reduce using rule 42 (binary_expression -> binary_expression AND binary_expression .) ]
  ! PLUS            [ reduce using rule 42 (binary_expression -> binary_expression AND binary_expression .) ]
  ! LT              [ reduce using rule 42 (binary_expression -> binary_expression AND binary_expression .) ]
  ! LE              [ reduce using rule 42 (binary_expression -> binary_expression AND binary_expression .) ]
  ! HT              [ reduce using rule 42 (binary_expression -> binary_expression AND binary_expression .) ]
  ! HE              [ reduce using rule 42 (binary_expression -> binary_expression AND binary_expression .) ]
  ! EQUALS          [ reduce using rule 42 (binary_expression -> binary_expression AND binary_expression .) ]
  ! DIFF            [ reduce using rule 42 (binary_expression -> binary_expression AND binary_expression .) ]
  ! AND             [ reduce using rule 42 (binary_expression -> binary_expression AND binary_expression .) ]
  ! OR              [ reduce using rule 42 (binary_expression -> binary_expression AND binary_expression .) ]


state 152

    (43) binary_expression -> binary_expression OR binary_expression .
    (31) binary_expression -> binary_expression . TIMES binary_expression
    (32) binary_expression -> binary_expression . DIVIDE binary_expression
    (33) binary_expression -> binary_expression . MOD binary_expression
    (34) binary_expression -> binary_expression . MINUS binary_expression
    (35) binary_expression -> binary_expression . PLUS binary_expression
    (36) binary_expression -> binary_expression . LT binary_expression
    (37) binary_expression -> binary_expression . LE binary_expression
    (38) binary_expression -> binary_expression . HT binary_expression
    (39) binary_expression -> binary_expression . HE binary_expression
    (40) binary_expression -> binary_expression . EQUALS binary_expression
    (41) binary_expression -> binary_expression . DIFF binary_expression
    (42) binary_expression -> binary_expression . AND binary_expression
    (43) binary_expression -> binary_expression . OR binary_expression

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for HT resolved as shift
  ! shift/reduce conflict for HE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for DIFF resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
    LBRACKET        reduce using rule 43 (binary_expression -> binary_expression OR binary_expression .)
    SEMI            reduce using rule 43 (binary_expression -> binary_expression OR binary_expression .)
    COMMA           reduce using rule 43 (binary_expression -> binary_expression OR binary_expression .)
    RPAREN          reduce using rule 43 (binary_expression -> binary_expression OR binary_expression .)
    RBRACE          reduce using rule 43 (binary_expression -> binary_expression OR binary_expression .)
    WHILE           reduce using rule 43 (binary_expression -> binary_expression OR binary_expression .)
    FOR             reduce using rule 43 (binary_expression -> binary_expression OR binary_expression .)
    LBRACE          reduce using rule 43 (binary_expression -> binary_expression OR binary_expression .)
    BREAK           reduce using rule 43 (binary_expression -> binary_expression OR binary_expression .)
    RETURN          reduce using rule 43 (binary_expression -> binary_expression OR binary_expression .)
    ASSERT          reduce using rule 43 (binary_expression -> binary_expression OR binary_expression .)
    PRINT           reduce using rule 43 (binary_expression -> binary_expression OR binary_expression .)
    IF              reduce using rule 43 (binary_expression -> binary_expression OR binary_expression .)
    READ            reduce using rule 43 (binary_expression -> binary_expression OR binary_expression .)
    PLUSPLUS        reduce using rule 43 (binary_expression -> binary_expression OR binary_expression .)
    MINUSMINUS      reduce using rule 43 (binary_expression -> binary_expression OR binary_expression .)
    LPAREN          reduce using rule 43 (binary_expression -> binary_expression OR binary_expression .)
    ADDRESS         reduce using rule 43 (binary_expression -> binary_expression OR binary_expression .)
    NOT             reduce using rule 43 (binary_expression -> binary_expression OR binary_expression .)
    ID              reduce using rule 43 (binary_expression -> binary_expression OR binary_expression .)
    INT_CONST       reduce using rule 43 (binary_expression -> binary_expression OR binary_expression .)
    FLOAT_CONST     reduce using rule 43 (binary_expression -> binary_expression OR binary_expression .)
    STRING          reduce using rule 43 (binary_expression -> binary_expression OR binary_expression .)
    ELSE            reduce using rule 43 (binary_expression -> binary_expression OR binary_expression .)
    RBRACKET        reduce using rule 43 (binary_expression -> binary_expression OR binary_expression .)
    TIMES           shift and go to state 89
    DIVIDE          shift and go to state 90
    MOD             shift and go to state 91
    MINUS           shift and go to state 92
    PLUS            shift and go to state 93
    LT              shift and go to state 94
    LE              shift and go to state 95
    HT              shift and go to state 96
    HE              shift and go to state 97
    EQUALS          shift and go to state 98
    DIFF            shift and go to state 99
    AND             shift and go to state 100
    OR              shift and go to state 101

  ! TIMES           [ reduce using rule 43 (binary_expression -> binary_expression OR binary_expression .) ]
  ! DIVIDE          [ reduce using rule 43 (binary_expression -> binary_expression OR binary_expression .) ]
  ! MOD             [ reduce using rule 43 (binary_expression -> binary_expression OR binary_expression .) ]
  ! MINUS           [ reduce using rule 43 (binary_expression -> binary_expression OR binary_expression .) ]
  ! PLUS            [ reduce using rule 43 (binary_expression -> binary_expression OR binary_expression .) ]
  ! LT              [ reduce using rule 43 (binary_expression -> binary_expression OR binary_expression .) ]
  ! LE              [ reduce using rule 43 (binary_expression -> binary_expression OR binary_expression .) ]
  ! HT              [ reduce using rule 43 (binary_expression -> binary_expression OR binary_expression .) ]
  ! HE              [ reduce using rule 43 (binary_expression -> binary_expression OR binary_expression .) ]
  ! EQUALS          [ reduce using rule 43 (binary_expression -> binary_expression OR binary_expression .) ]
  ! DIFF            [ reduce using rule 43 (binary_expression -> binary_expression OR binary_expression .) ]
  ! AND             [ reduce using rule 43 (binary_expression -> binary_expression OR binary_expression .) ]
  ! OR              [ reduce using rule 43 (binary_expression -> binary_expression OR binary_expression .) ]


state 153

    (45) cast_expression -> LPAREN type_specifier RPAREN . cast_expression
    (44) cast_expression -> . unary_expression
    (45) cast_expression -> . LPAREN type_specifier RPAREN cast_expression
    (46) unary_expression -> . postfix_expression
    (47) unary_expression -> . PLUSPLUS unary_expression
    (48) unary_expression -> . MINUSMINUS unary_expression
    (49) unary_expression -> . unary_operator cast_expression
    (50) postfix_expression -> . primary_expression
    (51) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (52) postfix_expression -> . postfix_expression LPAREN RPAREN
    (53) postfix_expression -> . postfix_expression LPAREN assignment_expression_list RPAREN
    (54) postfix_expression -> . postfix_expression PLUSPLUS
    (55) postfix_expression -> . postfix_expression MINUSMINUS
    (77) unary_operator -> . ADDRESS
    (78) unary_operator -> . TIMES
    (79) unary_operator -> . PLUS
    (80) unary_operator -> . MINUS
    (81) unary_operator -> . NOT
    (56) primary_expression -> . identifier
    (57) primary_expression -> . int_const
    (58) primary_expression -> . float_const
    (59) primary_expression -> . frase
    (60) primary_expression -> . LPAREN expression RPAREN
    (18) identifier -> . ID
    (20) int_const -> . INT_CONST
    (21) float_const -> . FLOAT_CONST
    (19) frase -> . STRING

    LPAREN          shift and go to state 37
    PLUSPLUS        shift and go to state 39
    MINUSMINUS      shift and go to state 40
    ADDRESS         shift and go to state 43
    TIMES           shift and go to state 33
    PLUS            shift and go to state 35
    MINUS           shift and go to state 34
    NOT             shift and go to state 44
    ID              shift and go to state 14
    INT_CONST       shift and go to state 49
    FLOAT_CONST     shift and go to state 50
    STRING          shift and go to state 51

    cast_expression                shift and go to state 173
    unary_expression               shift and go to state 36
    postfix_expression             shift and go to state 38
    unary_operator                 shift and go to state 41
    primary_expression             shift and go to state 42
    identifier                     shift and go to state 45
    int_const                      shift and go to state 46
    float_const                    shift and go to state 47
    frase                          shift and go to state 48

state 154

    (60) primary_expression -> LPAREN expression RPAREN .

    LBRACKET        reduce using rule 60 (primary_expression -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 60 (primary_expression -> LPAREN expression RPAREN .)
    PLUSPLUS        reduce using rule 60 (primary_expression -> LPAREN expression RPAREN .)
    MINUSMINUS      reduce using rule 60 (primary_expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 60 (primary_expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 60 (primary_expression -> LPAREN expression RPAREN .)
    MOD             reduce using rule 60 (primary_expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 60 (primary_expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 60 (primary_expression -> LPAREN expression RPAREN .)
    LT              reduce using rule 60 (primary_expression -> LPAREN expression RPAREN .)
    LE              reduce using rule 60 (primary_expression -> LPAREN expression RPAREN .)
    HT              reduce using rule 60 (primary_expression -> LPAREN expression RPAREN .)
    HE              reduce using rule 60 (primary_expression -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 60 (primary_expression -> LPAREN expression RPAREN .)
    DIFF            reduce using rule 60 (primary_expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 60 (primary_expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 60 (primary_expression -> LPAREN expression RPAREN .)
    EQ              reduce using rule 60 (primary_expression -> LPAREN expression RPAREN .)
    ASSIGN_TIMES    reduce using rule 60 (primary_expression -> LPAREN expression RPAREN .)
    ASSIGN_DIVIDE   reduce using rule 60 (primary_expression -> LPAREN expression RPAREN .)
    ASSIGN_MOD      reduce using rule 60 (primary_expression -> LPAREN expression RPAREN .)
    ASSIGN_PLUS     reduce using rule 60 (primary_expression -> LPAREN expression RPAREN .)
    ASSIGN_MINUS    reduce using rule 60 (primary_expression -> LPAREN expression RPAREN .)
    SEMI            reduce using rule 60 (primary_expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 60 (primary_expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 60 (primary_expression -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 60 (primary_expression -> LPAREN expression RPAREN .)
    WHILE           reduce using rule 60 (primary_expression -> LPAREN expression RPAREN .)
    FOR             reduce using rule 60 (primary_expression -> LPAREN expression RPAREN .)
    LBRACE          reduce using rule 60 (primary_expression -> LPAREN expression RPAREN .)
    BREAK           reduce using rule 60 (primary_expression -> LPAREN expression RPAREN .)
    RETURN          reduce using rule 60 (primary_expression -> LPAREN expression RPAREN .)
    ASSERT          reduce using rule 60 (primary_expression -> LPAREN expression RPAREN .)
    PRINT           reduce using rule 60 (primary_expression -> LPAREN expression RPAREN .)
    IF              reduce using rule 60 (primary_expression -> LPAREN expression RPAREN .)
    READ            reduce using rule 60 (primary_expression -> LPAREN expression RPAREN .)
    ADDRESS         reduce using rule 60 (primary_expression -> LPAREN expression RPAREN .)
    NOT             reduce using rule 60 (primary_expression -> LPAREN expression RPAREN .)
    ID              reduce using rule 60 (primary_expression -> LPAREN expression RPAREN .)
    INT_CONST       reduce using rule 60 (primary_expression -> LPAREN expression RPAREN .)
    FLOAT_CONST     reduce using rule 60 (primary_expression -> LPAREN expression RPAREN .)
    STRING          reduce using rule 60 (primary_expression -> LPAREN expression RPAREN .)
    ELSE            reduce using rule 60 (primary_expression -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 60 (primary_expression -> LPAREN expression RPAREN .)


state 155

    (51) postfix_expression -> postfix_expression LBRACKET expression . RBRACKET
    (70) expression -> expression . COMMA assignment_expression

    RBRACKET        shift and go to state 174
    COMMA           shift and go to state 121


state 156

    (52) postfix_expression -> postfix_expression LPAREN RPAREN .

    LBRACKET        reduce using rule 52 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    LPAREN          reduce using rule 52 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    PLUSPLUS        reduce using rule 52 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    MINUSMINUS      reduce using rule 52 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    TIMES           reduce using rule 52 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    DIVIDE          reduce using rule 52 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    MOD             reduce using rule 52 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    MINUS           reduce using rule 52 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    PLUS            reduce using rule 52 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    LT              reduce using rule 52 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    LE              reduce using rule 52 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    HT              reduce using rule 52 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    HE              reduce using rule 52 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    EQUALS          reduce using rule 52 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    DIFF            reduce using rule 52 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    AND             reduce using rule 52 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    OR              reduce using rule 52 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    EQ              reduce using rule 52 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    ASSIGN_TIMES    reduce using rule 52 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    ASSIGN_DIVIDE   reduce using rule 52 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    ASSIGN_MOD      reduce using rule 52 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    ASSIGN_PLUS     reduce using rule 52 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    ASSIGN_MINUS    reduce using rule 52 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    SEMI            reduce using rule 52 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    COMMA           reduce using rule 52 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    RPAREN          reduce using rule 52 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    RBRACE          reduce using rule 52 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    WHILE           reduce using rule 52 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    FOR             reduce using rule 52 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    LBRACE          reduce using rule 52 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    BREAK           reduce using rule 52 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    RETURN          reduce using rule 52 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    ASSERT          reduce using rule 52 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    PRINT           reduce using rule 52 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    IF              reduce using rule 52 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    READ            reduce using rule 52 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    ADDRESS         reduce using rule 52 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    NOT             reduce using rule 52 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    ID              reduce using rule 52 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    INT_CONST       reduce using rule 52 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    FLOAT_CONST     reduce using rule 52 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    STRING          reduce using rule 52 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    ELSE            reduce using rule 52 (postfix_expression -> postfix_expression LPAREN RPAREN .)
    RBRACKET        reduce using rule 52 (postfix_expression -> postfix_expression LPAREN RPAREN .)


state 157

    (53) postfix_expression -> postfix_expression LPAREN assignment_expression_list . RPAREN
    (66) assignment_expression_list -> assignment_expression_list . assignment_expression
    (67) assignment_expression -> . binary_expression
    (68) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (30) binary_expression -> . cast_expression
    (31) binary_expression -> . binary_expression TIMES binary_expression
    (32) binary_expression -> . binary_expression DIVIDE binary_expression
    (33) binary_expression -> . binary_expression MOD binary_expression
    (34) binary_expression -> . binary_expression MINUS binary_expression
    (35) binary_expression -> . binary_expression PLUS binary_expression
    (36) binary_expression -> . binary_expression LT binary_expression
    (37) binary_expression -> . binary_expression LE binary_expression
    (38) binary_expression -> . binary_expression HT binary_expression
    (39) binary_expression -> . binary_expression HE binary_expression
    (40) binary_expression -> . binary_expression EQUALS binary_expression
    (41) binary_expression -> . binary_expression DIFF binary_expression
    (42) binary_expression -> . binary_expression AND binary_expression
    (43) binary_expression -> . binary_expression OR binary_expression
    (46) unary_expression -> . postfix_expression
    (47) unary_expression -> . PLUSPLUS unary_expression
    (48) unary_expression -> . MINUSMINUS unary_expression
    (49) unary_expression -> . unary_operator cast_expression
    (44) cast_expression -> . unary_expression
    (45) cast_expression -> . LPAREN type_specifier RPAREN cast_expression
    (50) postfix_expression -> . primary_expression
    (51) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (52) postfix_expression -> . postfix_expression LPAREN RPAREN
    (53) postfix_expression -> . postfix_expression LPAREN assignment_expression_list RPAREN
    (54) postfix_expression -> . postfix_expression PLUSPLUS
    (55) postfix_expression -> . postfix_expression MINUSMINUS
    (77) unary_operator -> . ADDRESS
    (78) unary_operator -> . TIMES
    (79) unary_operator -> . PLUS
    (80) unary_operator -> . MINUS
    (81) unary_operator -> . NOT
    (56) primary_expression -> . identifier
    (57) primary_expression -> . int_const
    (58) primary_expression -> . float_const
    (59) primary_expression -> . frase
    (60) primary_expression -> . LPAREN expression RPAREN
    (18) identifier -> . ID
    (20) int_const -> . INT_CONST
    (21) float_const -> . FLOAT_CONST
    (19) frase -> . STRING

    RPAREN          shift and go to state 175
    PLUSPLUS        shift and go to state 39
    MINUSMINUS      shift and go to state 40
    LPAREN          shift and go to state 37
    ADDRESS         shift and go to state 43
    TIMES           shift and go to state 33
    PLUS            shift and go to state 35
    MINUS           shift and go to state 34
    NOT             shift and go to state 44
    ID              shift and go to state 14
    INT_CONST       shift and go to state 49
    FLOAT_CONST     shift and go to state 50
    STRING          shift and go to state 51

    postfix_expression             shift and go to state 38
    assignment_expression          shift and go to state 176
    binary_expression              shift and go to state 80
    unary_expression               shift and go to state 81
    cast_expression                shift and go to state 32
    unary_operator                 shift and go to state 41
    primary_expression             shift and go to state 42
    identifier                     shift and go to state 45
    int_const                      shift and go to state 46
    float_const                    shift and go to state 47
    frase                          shift and go to state 48

state 158

    (65) assignment_expression_list -> assignment_expression .

    RPAREN          reduce using rule 65 (assignment_expression_list -> assignment_expression .)
    PLUSPLUS        reduce using rule 65 (assignment_expression_list -> assignment_expression .)
    MINUSMINUS      reduce using rule 65 (assignment_expression_list -> assignment_expression .)
    LPAREN          reduce using rule 65 (assignment_expression_list -> assignment_expression .)
    ADDRESS         reduce using rule 65 (assignment_expression_list -> assignment_expression .)
    TIMES           reduce using rule 65 (assignment_expression_list -> assignment_expression .)
    PLUS            reduce using rule 65 (assignment_expression_list -> assignment_expression .)
    MINUS           reduce using rule 65 (assignment_expression_list -> assignment_expression .)
    NOT             reduce using rule 65 (assignment_expression_list -> assignment_expression .)
    ID              reduce using rule 65 (assignment_expression_list -> assignment_expression .)
    INT_CONST       reduce using rule 65 (assignment_expression_list -> assignment_expression .)
    FLOAT_CONST     reduce using rule 65 (assignment_expression_list -> assignment_expression .)
    STRING          reduce using rule 65 (assignment_expression_list -> assignment_expression .)


state 159

    (83) parameter_list -> parameter_list COMMA parameter_declaration .

    RPAREN          reduce using rule 83 (parameter_list -> parameter_list COMMA parameter_declaration .)
    COMMA           reduce using rule 83 (parameter_list -> parameter_list COMMA parameter_declaration .)


state 160

    (64) compound_statement -> LBRACE declaration_list statement_list RBRACE .

    LPAREN          reduce using rule 64 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    VOID            reduce using rule 64 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    CHAR            reduce using rule 64 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    INT             reduce using rule 64 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    FLOAT           reduce using rule 64 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    ID              reduce using rule 64 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    $end            reduce using rule 64 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    RBRACE          reduce using rule 64 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    SEMI            reduce using rule 64 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    WHILE           reduce using rule 64 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    FOR             reduce using rule 64 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    LBRACE          reduce using rule 64 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    BREAK           reduce using rule 64 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    RETURN          reduce using rule 64 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    ASSERT          reduce using rule 64 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    PRINT           reduce using rule 64 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    IF              reduce using rule 64 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    READ            reduce using rule 64 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    PLUSPLUS        reduce using rule 64 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    MINUSMINUS      reduce using rule 64 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    ADDRESS         reduce using rule 64 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    TIMES           reduce using rule 64 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    PLUS            reduce using rule 64 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    MINUS           reduce using rule 64 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    NOT             reduce using rule 64 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    INT_CONST       reduce using rule 64 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    FLOAT_CONST     reduce using rule 64 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    STRING          reduce using rule 64 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)
    ELSE            reduce using rule 64 (compound_statement -> LBRACE declaration_list statement_list RBRACE .)


state 161

    (70) expression -> expression COMMA assignment_expression .

    SEMI            reduce using rule 70 (expression -> expression COMMA assignment_expression .)
    COMMA           reduce using rule 70 (expression -> expression COMMA assignment_expression .)
    RPAREN          reduce using rule 70 (expression -> expression COMMA assignment_expression .)
    RBRACE          reduce using rule 70 (expression -> expression COMMA assignment_expression .)
    WHILE           reduce using rule 70 (expression -> expression COMMA assignment_expression .)
    FOR             reduce using rule 70 (expression -> expression COMMA assignment_expression .)
    LBRACE          reduce using rule 70 (expression -> expression COMMA assignment_expression .)
    BREAK           reduce using rule 70 (expression -> expression COMMA assignment_expression .)
    RETURN          reduce using rule 70 (expression -> expression COMMA assignment_expression .)
    ASSERT          reduce using rule 70 (expression -> expression COMMA assignment_expression .)
    PRINT           reduce using rule 70 (expression -> expression COMMA assignment_expression .)
    IF              reduce using rule 70 (expression -> expression COMMA assignment_expression .)
    READ            reduce using rule 70 (expression -> expression COMMA assignment_expression .)
    PLUSPLUS        reduce using rule 70 (expression -> expression COMMA assignment_expression .)
    MINUSMINUS      reduce using rule 70 (expression -> expression COMMA assignment_expression .)
    LPAREN          reduce using rule 70 (expression -> expression COMMA assignment_expression .)
    ADDRESS         reduce using rule 70 (expression -> expression COMMA assignment_expression .)
    TIMES           reduce using rule 70 (expression -> expression COMMA assignment_expression .)
    PLUS            reduce using rule 70 (expression -> expression COMMA assignment_expression .)
    MINUS           reduce using rule 70 (expression -> expression COMMA assignment_expression .)
    NOT             reduce using rule 70 (expression -> expression COMMA assignment_expression .)
    ID              reduce using rule 70 (expression -> expression COMMA assignment_expression .)
    INT_CONST       reduce using rule 70 (expression -> expression COMMA assignment_expression .)
    FLOAT_CONST     reduce using rule 70 (expression -> expression COMMA assignment_expression .)
    STRING          reduce using rule 70 (expression -> expression COMMA assignment_expression .)
    ELSE            reduce using rule 70 (expression -> expression COMMA assignment_expression .)
    RBRACKET        reduce using rule 70 (expression -> expression COMMA assignment_expression .)


state 162

    (106) iteration_statement -> WHILE LPAREN expression . RPAREN statement
    (70) expression -> expression . COMMA assignment_expression

    RPAREN          shift and go to state 177
    COMMA           shift and go to state 121


state 163

    (107) iteration_statement -> FOR LPAREN SEMI . SEMI RPAREN statement
    (109) iteration_statement -> FOR LPAREN SEMI . expression SEMI RPAREN statement
    (110) iteration_statement -> FOR LPAREN SEMI . SEMI expression RPAREN statement
    (113) iteration_statement -> FOR LPAREN SEMI . expression SEMI expression RPAREN statement
    (69) expression -> . assignment_expression
    (70) expression -> . expression COMMA assignment_expression
    (67) assignment_expression -> . binary_expression
    (68) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (30) binary_expression -> . cast_expression
    (31) binary_expression -> . binary_expression TIMES binary_expression
    (32) binary_expression -> . binary_expression DIVIDE binary_expression
    (33) binary_expression -> . binary_expression MOD binary_expression
    (34) binary_expression -> . binary_expression MINUS binary_expression
    (35) binary_expression -> . binary_expression PLUS binary_expression
    (36) binary_expression -> . binary_expression LT binary_expression
    (37) binary_expression -> . binary_expression LE binary_expression
    (38) binary_expression -> . binary_expression HT binary_expression
    (39) binary_expression -> . binary_expression HE binary_expression
    (40) binary_expression -> . binary_expression EQUALS binary_expression
    (41) binary_expression -> . binary_expression DIFF binary_expression
    (42) binary_expression -> . binary_expression AND binary_expression
    (43) binary_expression -> . binary_expression OR binary_expression
    (46) unary_expression -> . postfix_expression
    (47) unary_expression -> . PLUSPLUS unary_expression
    (48) unary_expression -> . MINUSMINUS unary_expression
    (49) unary_expression -> . unary_operator cast_expression
    (44) cast_expression -> . unary_expression
    (45) cast_expression -> . LPAREN type_specifier RPAREN cast_expression
    (50) postfix_expression -> . primary_expression
    (51) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (52) postfix_expression -> . postfix_expression LPAREN RPAREN
    (53) postfix_expression -> . postfix_expression LPAREN assignment_expression_list RPAREN
    (54) postfix_expression -> . postfix_expression PLUSPLUS
    (55) postfix_expression -> . postfix_expression MINUSMINUS
    (77) unary_operator -> . ADDRESS
    (78) unary_operator -> . TIMES
    (79) unary_operator -> . PLUS
    (80) unary_operator -> . MINUS
    (81) unary_operator -> . NOT
    (56) primary_expression -> . identifier
    (57) primary_expression -> . int_const
    (58) primary_expression -> . float_const
    (59) primary_expression -> . frase
    (60) primary_expression -> . LPAREN expression RPAREN
    (18) identifier -> . ID
    (20) int_const -> . INT_CONST
    (21) float_const -> . FLOAT_CONST
    (19) frase -> . STRING

    SEMI            shift and go to state 178
    PLUSPLUS        shift and go to state 39
    MINUSMINUS      shift and go to state 40
    LPAREN          shift and go to state 37
    ADDRESS         shift and go to state 43
    TIMES           shift and go to state 33
    PLUS            shift and go to state 35
    MINUS           shift and go to state 34
    NOT             shift and go to state 44
    ID              shift and go to state 14
    INT_CONST       shift and go to state 49
    FLOAT_CONST     shift and go to state 50
    STRING          shift and go to state 51

    expression                     shift and go to state 179
    assignment_expression          shift and go to state 79
    binary_expression              shift and go to state 80
    unary_expression               shift and go to state 81
    cast_expression                shift and go to state 32
    postfix_expression             shift and go to state 38
    unary_operator                 shift and go to state 41
    primary_expression             shift and go to state 42
    identifier                     shift and go to state 45
    int_const                      shift and go to state 46
    float_const                    shift and go to state 47
    frase                          shift and go to state 48

state 164

    (108) iteration_statement -> FOR LPAREN expression . SEMI SEMI RPAREN statement
    (111) iteration_statement -> FOR LPAREN expression . SEMI expression SEMI RPAREN statement
    (112) iteration_statement -> FOR LPAREN expression . SEMI SEMI expression RPAREN statement
    (114) iteration_statement -> FOR LPAREN expression . SEMI expression SEMI expression RPAREN statement
    (70) expression -> expression . COMMA assignment_expression

    SEMI            shift and go to state 180
    COMMA           shift and go to state 121


state 165

    (118) assert_statement -> ASSERT expression SEMI .

    RBRACE          reduce using rule 118 (assert_statement -> ASSERT expression SEMI .)
    SEMI            reduce using rule 118 (assert_statement -> ASSERT expression SEMI .)
    WHILE           reduce using rule 118 (assert_statement -> ASSERT expression SEMI .)
    FOR             reduce using rule 118 (assert_statement -> ASSERT expression SEMI .)
    LBRACE          reduce using rule 118 (assert_statement -> ASSERT expression SEMI .)
    BREAK           reduce using rule 118 (assert_statement -> ASSERT expression SEMI .)
    RETURN          reduce using rule 118 (assert_statement -> ASSERT expression SEMI .)
    ASSERT          reduce using rule 118 (assert_statement -> ASSERT expression SEMI .)
    PRINT           reduce using rule 118 (assert_statement -> ASSERT expression SEMI .)
    IF              reduce using rule 118 (assert_statement -> ASSERT expression SEMI .)
    READ            reduce using rule 118 (assert_statement -> ASSERT expression SEMI .)
    PLUSPLUS        reduce using rule 118 (assert_statement -> ASSERT expression SEMI .)
    MINUSMINUS      reduce using rule 118 (assert_statement -> ASSERT expression SEMI .)
    LPAREN          reduce using rule 118 (assert_statement -> ASSERT expression SEMI .)
    ADDRESS         reduce using rule 118 (assert_statement -> ASSERT expression SEMI .)
    TIMES           reduce using rule 118 (assert_statement -> ASSERT expression SEMI .)
    PLUS            reduce using rule 118 (assert_statement -> ASSERT expression SEMI .)
    MINUS           reduce using rule 118 (assert_statement -> ASSERT expression SEMI .)
    NOT             reduce using rule 118 (assert_statement -> ASSERT expression SEMI .)
    ID              reduce using rule 118 (assert_statement -> ASSERT expression SEMI .)
    INT_CONST       reduce using rule 118 (assert_statement -> ASSERT expression SEMI .)
    FLOAT_CONST     reduce using rule 118 (assert_statement -> ASSERT expression SEMI .)
    STRING          reduce using rule 118 (assert_statement -> ASSERT expression SEMI .)
    ELSE            reduce using rule 118 (assert_statement -> ASSERT expression SEMI .)


state 166

    (119) print_statement -> PRINT LPAREN expression . RPAREN SEMI
    (70) expression -> expression . COMMA assignment_expression

    RPAREN          shift and go to state 181
    COMMA           shift and go to state 121


state 167

    (104) selection_statement -> IF LPAREN expression . RPAREN statement
    (105) selection_statement -> IF LPAREN expression . RPAREN statement ELSE statement
    (70) expression -> expression . COMMA assignment_expression

    RPAREN          shift and go to state 182
    COMMA           shift and go to state 121


state 168

    (120) read_statement -> READ LPAREN declarator_list . RPAREN SEMI
    (122) declarator_list -> declarator_list . declarator
    (22) declarator -> . identifier
    (23) declarator -> . LPAREN declarator RPAREN
    (24) declarator -> . declarator RBRACKET LBRACKET
    (25) declarator -> . declarator RBRACKET constant_expression LBRACKET
    (26) declarator -> . declarator LPAREN parameter_list RPAREN
    (27) declarator -> . declarator LPAREN RPAREN
    (28) declarator -> . declarator LPAREN identifier RPAREN
    (18) identifier -> . ID

    RPAREN          shift and go to state 183
    LPAREN          shift and go to state 9
    ID              shift and go to state 14

    declarator                     shift and go to state 184
    identifier                     shift and go to state 8

state 169

    (121) declarator_list -> declarator .
    (24) declarator -> declarator . RBRACKET LBRACKET
    (25) declarator -> declarator . RBRACKET constant_expression LBRACKET
    (26) declarator -> declarator . LPAREN parameter_list RPAREN
    (27) declarator -> declarator . LPAREN RPAREN
    (28) declarator -> declarator . LPAREN identifier RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
    RPAREN          reduce using rule 121 (declarator_list -> declarator .)
    ID              reduce using rule 121 (declarator_list -> declarator .)
    RBRACKET        shift and go to state 18
    LPAREN          shift and go to state 19

  ! LPAREN          [ reduce using rule 121 (declarator_list -> declarator .) ]


state 170

    (68) assignment_expression -> unary_expression assignment_operator assignment_expression .

    SEMI            reduce using rule 68 (assignment_expression -> unary_expression assignment_operator assignment_expression .)
    COMMA           reduce using rule 68 (assignment_expression -> unary_expression assignment_operator assignment_expression .)
    RPAREN          reduce using rule 68 (assignment_expression -> unary_expression assignment_operator assignment_expression .)
    RBRACE          reduce using rule 68 (assignment_expression -> unary_expression assignment_operator assignment_expression .)
    WHILE           reduce using rule 68 (assignment_expression -> unary_expression assignment_operator assignment_expression .)
    FOR             reduce using rule 68 (assignment_expression -> unary_expression assignment_operator assignment_expression .)
    LBRACE          reduce using rule 68 (assignment_expression -> unary_expression assignment_operator assignment_expression .)
    BREAK           reduce using rule 68 (assignment_expression -> unary_expression assignment_operator assignment_expression .)
    RETURN          reduce using rule 68 (assignment_expression -> unary_expression assignment_operator assignment_expression .)
    ASSERT          reduce using rule 68 (assignment_expression -> unary_expression assignment_operator assignment_expression .)
    PRINT           reduce using rule 68 (assignment_expression -> unary_expression assignment_operator assignment_expression .)
    IF              reduce using rule 68 (assignment_expression -> unary_expression assignment_operator assignment_expression .)
    READ            reduce using rule 68 (assignment_expression -> unary_expression assignment_operator assignment_expression .)
    PLUSPLUS        reduce using rule 68 (assignment_expression -> unary_expression assignment_operator assignment_expression .)
    MINUSMINUS      reduce using rule 68 (assignment_expression -> unary_expression assignment_operator assignment_expression .)
    LPAREN          reduce using rule 68 (assignment_expression -> unary_expression assignment_operator assignment_expression .)
    ADDRESS         reduce using rule 68 (assignment_expression -> unary_expression assignment_operator assignment_expression .)
    TIMES           reduce using rule 68 (assignment_expression -> unary_expression assignment_operator assignment_expression .)
    PLUS            reduce using rule 68 (assignment_expression -> unary_expression assignment_operator assignment_expression .)
    MINUS           reduce using rule 68 (assignment_expression -> unary_expression assignment_operator assignment_expression .)
    NOT             reduce using rule 68 (assignment_expression -> unary_expression assignment_operator assignment_expression .)
    ID              reduce using rule 68 (assignment_expression -> unary_expression assignment_operator assignment_expression .)
    INT_CONST       reduce using rule 68 (assignment_expression -> unary_expression assignment_operator assignment_expression .)
    FLOAT_CONST     reduce using rule 68 (assignment_expression -> unary_expression assignment_operator assignment_expression .)
    STRING          reduce using rule 68 (assignment_expression -> unary_expression assignment_operator assignment_expression .)
    ELSE            reduce using rule 68 (assignment_expression -> unary_expression assignment_operator assignment_expression .)
    RBRACKET        reduce using rule 68 (assignment_expression -> unary_expression assignment_operator assignment_expression .)


state 171

    (90) initializer -> LBRACE initializer_list . RBRACE
    (91) initializer -> LBRACE initializer_list . COMMA RBRACE
    (93) initializer_list -> initializer_list . COMMA initializer

    RBRACE          shift and go to state 185
    COMMA           shift and go to state 186


state 172

    (92) initializer_list -> initializer .

    RBRACE          reduce using rule 92 (initializer_list -> initializer .)
    COMMA           reduce using rule 92 (initializer_list -> initializer .)


state 173

    (45) cast_expression -> LPAREN type_specifier RPAREN cast_expression .

    TIMES           reduce using rule 45 (cast_expression -> LPAREN type_specifier RPAREN cast_expression .)
    DIVIDE          reduce using rule 45 (cast_expression -> LPAREN type_specifier RPAREN cast_expression .)
    MOD             reduce using rule 45 (cast_expression -> LPAREN type_specifier RPAREN cast_expression .)
    MINUS           reduce using rule 45 (cast_expression -> LPAREN type_specifier RPAREN cast_expression .)
    PLUS            reduce using rule 45 (cast_expression -> LPAREN type_specifier RPAREN cast_expression .)
    LT              reduce using rule 45 (cast_expression -> LPAREN type_specifier RPAREN cast_expression .)
    LE              reduce using rule 45 (cast_expression -> LPAREN type_specifier RPAREN cast_expression .)
    HT              reduce using rule 45 (cast_expression -> LPAREN type_specifier RPAREN cast_expression .)
    HE              reduce using rule 45 (cast_expression -> LPAREN type_specifier RPAREN cast_expression .)
    EQUALS          reduce using rule 45 (cast_expression -> LPAREN type_specifier RPAREN cast_expression .)
    DIFF            reduce using rule 45 (cast_expression -> LPAREN type_specifier RPAREN cast_expression .)
    AND             reduce using rule 45 (cast_expression -> LPAREN type_specifier RPAREN cast_expression .)
    OR              reduce using rule 45 (cast_expression -> LPAREN type_specifier RPAREN cast_expression .)
    LBRACKET        reduce using rule 45 (cast_expression -> LPAREN type_specifier RPAREN cast_expression .)
    SEMI            reduce using rule 45 (cast_expression -> LPAREN type_specifier RPAREN cast_expression .)
    COMMA           reduce using rule 45 (cast_expression -> LPAREN type_specifier RPAREN cast_expression .)
    RPAREN          reduce using rule 45 (cast_expression -> LPAREN type_specifier RPAREN cast_expression .)
    EQ              reduce using rule 45 (cast_expression -> LPAREN type_specifier RPAREN cast_expression .)
    ASSIGN_TIMES    reduce using rule 45 (cast_expression -> LPAREN type_specifier RPAREN cast_expression .)
    ASSIGN_DIVIDE   reduce using rule 45 (cast_expression -> LPAREN type_specifier RPAREN cast_expression .)
    ASSIGN_MOD      reduce using rule 45 (cast_expression -> LPAREN type_specifier RPAREN cast_expression .)
    ASSIGN_PLUS     reduce using rule 45 (cast_expression -> LPAREN type_specifier RPAREN cast_expression .)
    ASSIGN_MINUS    reduce using rule 45 (cast_expression -> LPAREN type_specifier RPAREN cast_expression .)
    RBRACE          reduce using rule 45 (cast_expression -> LPAREN type_specifier RPAREN cast_expression .)
    WHILE           reduce using rule 45 (cast_expression -> LPAREN type_specifier RPAREN cast_expression .)
    FOR             reduce using rule 45 (cast_expression -> LPAREN type_specifier RPAREN cast_expression .)
    LBRACE          reduce using rule 45 (cast_expression -> LPAREN type_specifier RPAREN cast_expression .)
    BREAK           reduce using rule 45 (cast_expression -> LPAREN type_specifier RPAREN cast_expression .)
    RETURN          reduce using rule 45 (cast_expression -> LPAREN type_specifier RPAREN cast_expression .)
    ASSERT          reduce using rule 45 (cast_expression -> LPAREN type_specifier RPAREN cast_expression .)
    PRINT           reduce using rule 45 (cast_expression -> LPAREN type_specifier RPAREN cast_expression .)
    IF              reduce using rule 45 (cast_expression -> LPAREN type_specifier RPAREN cast_expression .)
    READ            reduce using rule 45 (cast_expression -> LPAREN type_specifier RPAREN cast_expression .)
    PLUSPLUS        reduce using rule 45 (cast_expression -> LPAREN type_specifier RPAREN cast_expression .)
    MINUSMINUS      reduce using rule 45 (cast_expression -> LPAREN type_specifier RPAREN cast_expression .)
    LPAREN          reduce using rule 45 (cast_expression -> LPAREN type_specifier RPAREN cast_expression .)
    ADDRESS         reduce using rule 45 (cast_expression -> LPAREN type_specifier RPAREN cast_expression .)
    NOT             reduce using rule 45 (cast_expression -> LPAREN type_specifier RPAREN cast_expression .)
    ID              reduce using rule 45 (cast_expression -> LPAREN type_specifier RPAREN cast_expression .)
    INT_CONST       reduce using rule 45 (cast_expression -> LPAREN type_specifier RPAREN cast_expression .)
    FLOAT_CONST     reduce using rule 45 (cast_expression -> LPAREN type_specifier RPAREN cast_expression .)
    STRING          reduce using rule 45 (cast_expression -> LPAREN type_specifier RPAREN cast_expression .)
    ELSE            reduce using rule 45 (cast_expression -> LPAREN type_specifier RPAREN cast_expression .)
    RBRACKET        reduce using rule 45 (cast_expression -> LPAREN type_specifier RPAREN cast_expression .)


state 174

    (51) postfix_expression -> postfix_expression LBRACKET expression RBRACKET .

    LBRACKET        reduce using rule 51 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    LPAREN          reduce using rule 51 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    PLUSPLUS        reduce using rule 51 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    MINUSMINUS      reduce using rule 51 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 51 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 51 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    MOD             reduce using rule 51 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 51 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 51 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    LT              reduce using rule 51 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    LE              reduce using rule 51 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    HT              reduce using rule 51 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    HE              reduce using rule 51 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    EQUALS          reduce using rule 51 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    DIFF            reduce using rule 51 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    AND             reduce using rule 51 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    OR              reduce using rule 51 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    EQ              reduce using rule 51 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    ASSIGN_TIMES    reduce using rule 51 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    ASSIGN_DIVIDE   reduce using rule 51 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    ASSIGN_MOD      reduce using rule 51 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    ASSIGN_PLUS     reduce using rule 51 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    ASSIGN_MINUS    reduce using rule 51 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    SEMI            reduce using rule 51 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 51 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 51 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    RBRACE          reduce using rule 51 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    WHILE           reduce using rule 51 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    FOR             reduce using rule 51 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    LBRACE          reduce using rule 51 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    BREAK           reduce using rule 51 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    RETURN          reduce using rule 51 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    ASSERT          reduce using rule 51 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    PRINT           reduce using rule 51 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    IF              reduce using rule 51 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    READ            reduce using rule 51 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    ADDRESS         reduce using rule 51 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    NOT             reduce using rule 51 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    ID              reduce using rule 51 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    INT_CONST       reduce using rule 51 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    FLOAT_CONST     reduce using rule 51 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    STRING          reduce using rule 51 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    ELSE            reduce using rule 51 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 51 (postfix_expression -> postfix_expression LBRACKET expression RBRACKET .)


state 175

    (53) postfix_expression -> postfix_expression LPAREN assignment_expression_list RPAREN .

    LBRACKET        reduce using rule 53 (postfix_expression -> postfix_expression LPAREN assignment_expression_list RPAREN .)
    LPAREN          reduce using rule 53 (postfix_expression -> postfix_expression LPAREN assignment_expression_list RPAREN .)
    PLUSPLUS        reduce using rule 53 (postfix_expression -> postfix_expression LPAREN assignment_expression_list RPAREN .)
    MINUSMINUS      reduce using rule 53 (postfix_expression -> postfix_expression LPAREN assignment_expression_list RPAREN .)
    TIMES           reduce using rule 53 (postfix_expression -> postfix_expression LPAREN assignment_expression_list RPAREN .)
    DIVIDE          reduce using rule 53 (postfix_expression -> postfix_expression LPAREN assignment_expression_list RPAREN .)
    MOD             reduce using rule 53 (postfix_expression -> postfix_expression LPAREN assignment_expression_list RPAREN .)
    MINUS           reduce using rule 53 (postfix_expression -> postfix_expression LPAREN assignment_expression_list RPAREN .)
    PLUS            reduce using rule 53 (postfix_expression -> postfix_expression LPAREN assignment_expression_list RPAREN .)
    LT              reduce using rule 53 (postfix_expression -> postfix_expression LPAREN assignment_expression_list RPAREN .)
    LE              reduce using rule 53 (postfix_expression -> postfix_expression LPAREN assignment_expression_list RPAREN .)
    HT              reduce using rule 53 (postfix_expression -> postfix_expression LPAREN assignment_expression_list RPAREN .)
    HE              reduce using rule 53 (postfix_expression -> postfix_expression LPAREN assignment_expression_list RPAREN .)
    EQUALS          reduce using rule 53 (postfix_expression -> postfix_expression LPAREN assignment_expression_list RPAREN .)
    DIFF            reduce using rule 53 (postfix_expression -> postfix_expression LPAREN assignment_expression_list RPAREN .)
    AND             reduce using rule 53 (postfix_expression -> postfix_expression LPAREN assignment_expression_list RPAREN .)
    OR              reduce using rule 53 (postfix_expression -> postfix_expression LPAREN assignment_expression_list RPAREN .)
    EQ              reduce using rule 53 (postfix_expression -> postfix_expression LPAREN assignment_expression_list RPAREN .)
    ASSIGN_TIMES    reduce using rule 53 (postfix_expression -> postfix_expression LPAREN assignment_expression_list RPAREN .)
    ASSIGN_DIVIDE   reduce using rule 53 (postfix_expression -> postfix_expression LPAREN assignment_expression_list RPAREN .)
    ASSIGN_MOD      reduce using rule 53 (postfix_expression -> postfix_expression LPAREN assignment_expression_list RPAREN .)
    ASSIGN_PLUS     reduce using rule 53 (postfix_expression -> postfix_expression LPAREN assignment_expression_list RPAREN .)
    ASSIGN_MINUS    reduce using rule 53 (postfix_expression -> postfix_expression LPAREN assignment_expression_list RPAREN .)
    SEMI            reduce using rule 53 (postfix_expression -> postfix_expression LPAREN assignment_expression_list RPAREN .)
    COMMA           reduce using rule 53 (postfix_expression -> postfix_expression LPAREN assignment_expression_list RPAREN .)
    RPAREN          reduce using rule 53 (postfix_expression -> postfix_expression LPAREN assignment_expression_list RPAREN .)
    RBRACE          reduce using rule 53 (postfix_expression -> postfix_expression LPAREN assignment_expression_list RPAREN .)
    WHILE           reduce using rule 53 (postfix_expression -> postfix_expression LPAREN assignment_expression_list RPAREN .)
    FOR             reduce using rule 53 (postfix_expression -> postfix_expression LPAREN assignment_expression_list RPAREN .)
    LBRACE          reduce using rule 53 (postfix_expression -> postfix_expression LPAREN assignment_expression_list RPAREN .)
    BREAK           reduce using rule 53 (postfix_expression -> postfix_expression LPAREN assignment_expression_list RPAREN .)
    RETURN          reduce using rule 53 (postfix_expression -> postfix_expression LPAREN assignment_expression_list RPAREN .)
    ASSERT          reduce using rule 53 (postfix_expression -> postfix_expression LPAREN assignment_expression_list RPAREN .)
    PRINT           reduce using rule 53 (postfix_expression -> postfix_expression LPAREN assignment_expression_list RPAREN .)
    IF              reduce using rule 53 (postfix_expression -> postfix_expression LPAREN assignment_expression_list RPAREN .)
    READ            reduce using rule 53 (postfix_expression -> postfix_expression LPAREN assignment_expression_list RPAREN .)
    ADDRESS         reduce using rule 53 (postfix_expression -> postfix_expression LPAREN assignment_expression_list RPAREN .)
    NOT             reduce using rule 53 (postfix_expression -> postfix_expression LPAREN assignment_expression_list RPAREN .)
    ID              reduce using rule 53 (postfix_expression -> postfix_expression LPAREN assignment_expression_list RPAREN .)
    INT_CONST       reduce using rule 53 (postfix_expression -> postfix_expression LPAREN assignment_expression_list RPAREN .)
    FLOAT_CONST     reduce using rule 53 (postfix_expression -> postfix_expression LPAREN assignment_expression_list RPAREN .)
    STRING          reduce using rule 53 (postfix_expression -> postfix_expression LPAREN assignment_expression_list RPAREN .)
    ELSE            reduce using rule 53 (postfix_expression -> postfix_expression LPAREN assignment_expression_list RPAREN .)
    RBRACKET        reduce using rule 53 (postfix_expression -> postfix_expression LPAREN assignment_expression_list RPAREN .)


state 176

    (66) assignment_expression_list -> assignment_expression_list assignment_expression .

    RPAREN          reduce using rule 66 (assignment_expression_list -> assignment_expression_list assignment_expression .)
    PLUSPLUS        reduce using rule 66 (assignment_expression_list -> assignment_expression_list assignment_expression .)
    MINUSMINUS      reduce using rule 66 (assignment_expression_list -> assignment_expression_list assignment_expression .)
    LPAREN          reduce using rule 66 (assignment_expression_list -> assignment_expression_list assignment_expression .)
    ADDRESS         reduce using rule 66 (assignment_expression_list -> assignment_expression_list assignment_expression .)
    TIMES           reduce using rule 66 (assignment_expression_list -> assignment_expression_list assignment_expression .)
    PLUS            reduce using rule 66 (assignment_expression_list -> assignment_expression_list assignment_expression .)
    MINUS           reduce using rule 66 (assignment_expression_list -> assignment_expression_list assignment_expression .)
    NOT             reduce using rule 66 (assignment_expression_list -> assignment_expression_list assignment_expression .)
    ID              reduce using rule 66 (assignment_expression_list -> assignment_expression_list assignment_expression .)
    INT_CONST       reduce using rule 66 (assignment_expression_list -> assignment_expression_list assignment_expression .)
    FLOAT_CONST     reduce using rule 66 (assignment_expression_list -> assignment_expression_list assignment_expression .)
    STRING          reduce using rule 66 (assignment_expression_list -> assignment_expression_list assignment_expression .)


state 177

    (106) iteration_statement -> WHILE LPAREN expression RPAREN . statement
    (94) statement -> . expression_statement
    (95) statement -> . iteration_statement
    (96) statement -> . compound_statement
    (97) statement -> . jump_statement
    (98) statement -> . assert_statement
    (99) statement -> . print_statement
    (100) statement -> . selection_statement
    (101) statement -> . read_statement
    (102) expression_statement -> . SEMI
    (103) expression_statement -> . expression SEMI
    (106) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (107) iteration_statement -> . FOR LPAREN SEMI SEMI RPAREN statement
    (108) iteration_statement -> . FOR LPAREN expression SEMI SEMI RPAREN statement
    (109) iteration_statement -> . FOR LPAREN SEMI expression SEMI RPAREN statement
    (110) iteration_statement -> . FOR LPAREN SEMI SEMI expression RPAREN statement
    (111) iteration_statement -> . FOR LPAREN expression SEMI expression SEMI RPAREN statement
    (112) iteration_statement -> . FOR LPAREN expression SEMI SEMI expression RPAREN statement
    (113) iteration_statement -> . FOR LPAREN SEMI expression SEMI expression RPAREN statement
    (114) iteration_statement -> . FOR LPAREN expression SEMI expression SEMI expression RPAREN statement
    (61) compound_statement -> . LBRACE RBRACE
    (62) compound_statement -> . LBRACE declaration_list RBRACE
    (63) compound_statement -> . LBRACE statement_list RBRACE
    (64) compound_statement -> . LBRACE declaration_list statement_list RBRACE
    (115) jump_statement -> . BREAK
    (116) jump_statement -> . RETURN
    (117) jump_statement -> . RETURN expression
    (118) assert_statement -> . ASSERT expression SEMI
    (119) print_statement -> . PRINT LPAREN expression RPAREN SEMI
    (104) selection_statement -> . IF LPAREN expression RPAREN statement
    (105) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (120) read_statement -> . READ LPAREN declarator_list RPAREN SEMI
    (69) expression -> . assignment_expression
    (70) expression -> . expression COMMA assignment_expression
    (67) assignment_expression -> . binary_expression
    (68) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (30) binary_expression -> . cast_expression
    (31) binary_expression -> . binary_expression TIMES binary_expression
    (32) binary_expression -> . binary_expression DIVIDE binary_expression
    (33) binary_expression -> . binary_expression MOD binary_expression
    (34) binary_expression -> . binary_expression MINUS binary_expression
    (35) binary_expression -> . binary_expression PLUS binary_expression
    (36) binary_expression -> . binary_expression LT binary_expression
    (37) binary_expression -> . binary_expression LE binary_expression
    (38) binary_expression -> . binary_expression HT binary_expression
    (39) binary_expression -> . binary_expression HE binary_expression
    (40) binary_expression -> . binary_expression EQUALS binary_expression
    (41) binary_expression -> . binary_expression DIFF binary_expression
    (42) binary_expression -> . binary_expression AND binary_expression
    (43) binary_expression -> . binary_expression OR binary_expression
    (46) unary_expression -> . postfix_expression
    (47) unary_expression -> . PLUSPLUS unary_expression
    (48) unary_expression -> . MINUSMINUS unary_expression
    (49) unary_expression -> . unary_operator cast_expression
    (44) cast_expression -> . unary_expression
    (45) cast_expression -> . LPAREN type_specifier RPAREN cast_expression
    (50) postfix_expression -> . primary_expression
    (51) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (52) postfix_expression -> . postfix_expression LPAREN RPAREN
    (53) postfix_expression -> . postfix_expression LPAREN assignment_expression_list RPAREN
    (54) postfix_expression -> . postfix_expression PLUSPLUS
    (55) postfix_expression -> . postfix_expression MINUSMINUS
    (77) unary_operator -> . ADDRESS
    (78) unary_operator -> . TIMES
    (79) unary_operator -> . PLUS
    (80) unary_operator -> . MINUS
    (81) unary_operator -> . NOT
    (56) primary_expression -> . identifier
    (57) primary_expression -> . int_const
    (58) primary_expression -> . float_const
    (59) primary_expression -> . frase
    (60) primary_expression -> . LPAREN expression RPAREN
    (18) identifier -> . ID
    (20) int_const -> . INT_CONST
    (21) float_const -> . FLOAT_CONST
    (19) frase -> . STRING

    SEMI            shift and go to state 61
    WHILE           shift and go to state 71
    FOR             shift and go to state 72
    LBRACE          shift and go to state 20
    BREAK           shift and go to state 73
    RETURN          shift and go to state 74
    ASSERT          shift and go to state 75
    PRINT           shift and go to state 76
    IF              shift and go to state 77
    READ            shift and go to state 78
    PLUSPLUS        shift and go to state 39
    MINUSMINUS      shift and go to state 40
    LPAREN          shift and go to state 37
    ADDRESS         shift and go to state 43
    TIMES           shift and go to state 33
    PLUS            shift and go to state 35
    MINUS           shift and go to state 34
    NOT             shift and go to state 44
    ID              shift and go to state 14
    INT_CONST       shift and go to state 49
    FLOAT_CONST     shift and go to state 50
    STRING          shift and go to state 51

    expression                     shift and go to state 70
    statement                      shift and go to state 187
    expression_statement           shift and go to state 62
    iteration_statement            shift and go to state 63
    compound_statement             shift and go to state 64
    jump_statement                 shift and go to state 65
    assert_statement               shift and go to state 66
    print_statement                shift and go to state 67
    selection_statement            shift and go to state 68
    read_statement                 shift and go to state 69
    assignment_expression          shift and go to state 79
    binary_expression              shift and go to state 80
    unary_expression               shift and go to state 81
    cast_expression                shift and go to state 32
    postfix_expression             shift and go to state 38
    unary_operator                 shift and go to state 41
    primary_expression             shift and go to state 42
    identifier                     shift and go to state 45
    int_const                      shift and go to state 46
    float_const                    shift and go to state 47
    frase                          shift and go to state 48

state 178

    (107) iteration_statement -> FOR LPAREN SEMI SEMI . RPAREN statement
    (110) iteration_statement -> FOR LPAREN SEMI SEMI . expression RPAREN statement
    (69) expression -> . assignment_expression
    (70) expression -> . expression COMMA assignment_expression
    (67) assignment_expression -> . binary_expression
    (68) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (30) binary_expression -> . cast_expression
    (31) binary_expression -> . binary_expression TIMES binary_expression
    (32) binary_expression -> . binary_expression DIVIDE binary_expression
    (33) binary_expression -> . binary_expression MOD binary_expression
    (34) binary_expression -> . binary_expression MINUS binary_expression
    (35) binary_expression -> . binary_expression PLUS binary_expression
    (36) binary_expression -> . binary_expression LT binary_expression
    (37) binary_expression -> . binary_expression LE binary_expression
    (38) binary_expression -> . binary_expression HT binary_expression
    (39) binary_expression -> . binary_expression HE binary_expression
    (40) binary_expression -> . binary_expression EQUALS binary_expression
    (41) binary_expression -> . binary_expression DIFF binary_expression
    (42) binary_expression -> . binary_expression AND binary_expression
    (43) binary_expression -> . binary_expression OR binary_expression
    (46) unary_expression -> . postfix_expression
    (47) unary_expression -> . PLUSPLUS unary_expression
    (48) unary_expression -> . MINUSMINUS unary_expression
    (49) unary_expression -> . unary_operator cast_expression
    (44) cast_expression -> . unary_expression
    (45) cast_expression -> . LPAREN type_specifier RPAREN cast_expression
    (50) postfix_expression -> . primary_expression
    (51) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (52) postfix_expression -> . postfix_expression LPAREN RPAREN
    (53) postfix_expression -> . postfix_expression LPAREN assignment_expression_list RPAREN
    (54) postfix_expression -> . postfix_expression PLUSPLUS
    (55) postfix_expression -> . postfix_expression MINUSMINUS
    (77) unary_operator -> . ADDRESS
    (78) unary_operator -> . TIMES
    (79) unary_operator -> . PLUS
    (80) unary_operator -> . MINUS
    (81) unary_operator -> . NOT
    (56) primary_expression -> . identifier
    (57) primary_expression -> . int_const
    (58) primary_expression -> . float_const
    (59) primary_expression -> . frase
    (60) primary_expression -> . LPAREN expression RPAREN
    (18) identifier -> . ID
    (20) int_const -> . INT_CONST
    (21) float_const -> . FLOAT_CONST
    (19) frase -> . STRING

    RPAREN          shift and go to state 188
    PLUSPLUS        shift and go to state 39
    MINUSMINUS      shift and go to state 40
    LPAREN          shift and go to state 37
    ADDRESS         shift and go to state 43
    TIMES           shift and go to state 33
    PLUS            shift and go to state 35
    MINUS           shift and go to state 34
    NOT             shift and go to state 44
    ID              shift and go to state 14
    INT_CONST       shift and go to state 49
    FLOAT_CONST     shift and go to state 50
    STRING          shift and go to state 51

    expression                     shift and go to state 189
    assignment_expression          shift and go to state 79
    binary_expression              shift and go to state 80
    unary_expression               shift and go to state 81
    cast_expression                shift and go to state 32
    postfix_expression             shift and go to state 38
    unary_operator                 shift and go to state 41
    primary_expression             shift and go to state 42
    identifier                     shift and go to state 45
    int_const                      shift and go to state 46
    float_const                    shift and go to state 47
    frase                          shift and go to state 48

state 179

    (109) iteration_statement -> FOR LPAREN SEMI expression . SEMI RPAREN statement
    (113) iteration_statement -> FOR LPAREN SEMI expression . SEMI expression RPAREN statement
    (70) expression -> expression . COMMA assignment_expression

    SEMI            shift and go to state 190
    COMMA           shift and go to state 121


state 180

    (108) iteration_statement -> FOR LPAREN expression SEMI . SEMI RPAREN statement
    (111) iteration_statement -> FOR LPAREN expression SEMI . expression SEMI RPAREN statement
    (112) iteration_statement -> FOR LPAREN expression SEMI . SEMI expression RPAREN statement
    (114) iteration_statement -> FOR LPAREN expression SEMI . expression SEMI expression RPAREN statement
    (69) expression -> . assignment_expression
    (70) expression -> . expression COMMA assignment_expression
    (67) assignment_expression -> . binary_expression
    (68) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (30) binary_expression -> . cast_expression
    (31) binary_expression -> . binary_expression TIMES binary_expression
    (32) binary_expression -> . binary_expression DIVIDE binary_expression
    (33) binary_expression -> . binary_expression MOD binary_expression
    (34) binary_expression -> . binary_expression MINUS binary_expression
    (35) binary_expression -> . binary_expression PLUS binary_expression
    (36) binary_expression -> . binary_expression LT binary_expression
    (37) binary_expression -> . binary_expression LE binary_expression
    (38) binary_expression -> . binary_expression HT binary_expression
    (39) binary_expression -> . binary_expression HE binary_expression
    (40) binary_expression -> . binary_expression EQUALS binary_expression
    (41) binary_expression -> . binary_expression DIFF binary_expression
    (42) binary_expression -> . binary_expression AND binary_expression
    (43) binary_expression -> . binary_expression OR binary_expression
    (46) unary_expression -> . postfix_expression
    (47) unary_expression -> . PLUSPLUS unary_expression
    (48) unary_expression -> . MINUSMINUS unary_expression
    (49) unary_expression -> . unary_operator cast_expression
    (44) cast_expression -> . unary_expression
    (45) cast_expression -> . LPAREN type_specifier RPAREN cast_expression
    (50) postfix_expression -> . primary_expression
    (51) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (52) postfix_expression -> . postfix_expression LPAREN RPAREN
    (53) postfix_expression -> . postfix_expression LPAREN assignment_expression_list RPAREN
    (54) postfix_expression -> . postfix_expression PLUSPLUS
    (55) postfix_expression -> . postfix_expression MINUSMINUS
    (77) unary_operator -> . ADDRESS
    (78) unary_operator -> . TIMES
    (79) unary_operator -> . PLUS
    (80) unary_operator -> . MINUS
    (81) unary_operator -> . NOT
    (56) primary_expression -> . identifier
    (57) primary_expression -> . int_const
    (58) primary_expression -> . float_const
    (59) primary_expression -> . frase
    (60) primary_expression -> . LPAREN expression RPAREN
    (18) identifier -> . ID
    (20) int_const -> . INT_CONST
    (21) float_const -> . FLOAT_CONST
    (19) frase -> . STRING

    SEMI            shift and go to state 192
    PLUSPLUS        shift and go to state 39
    MINUSMINUS      shift and go to state 40
    LPAREN          shift and go to state 37
    ADDRESS         shift and go to state 43
    TIMES           shift and go to state 33
    PLUS            shift and go to state 35
    MINUS           shift and go to state 34
    NOT             shift and go to state 44
    ID              shift and go to state 14
    INT_CONST       shift and go to state 49
    FLOAT_CONST     shift and go to state 50
    STRING          shift and go to state 51

    expression                     shift and go to state 191
    assignment_expression          shift and go to state 79
    binary_expression              shift and go to state 80
    unary_expression               shift and go to state 81
    cast_expression                shift and go to state 32
    postfix_expression             shift and go to state 38
    unary_operator                 shift and go to state 41
    primary_expression             shift and go to state 42
    identifier                     shift and go to state 45
    int_const                      shift and go to state 46
    float_const                    shift and go to state 47
    frase                          shift and go to state 48

state 181

    (119) print_statement -> PRINT LPAREN expression RPAREN . SEMI

    SEMI            shift and go to state 193


state 182

    (104) selection_statement -> IF LPAREN expression RPAREN . statement
    (105) selection_statement -> IF LPAREN expression RPAREN . statement ELSE statement
    (94) statement -> . expression_statement
    (95) statement -> . iteration_statement
    (96) statement -> . compound_statement
    (97) statement -> . jump_statement
    (98) statement -> . assert_statement
    (99) statement -> . print_statement
    (100) statement -> . selection_statement
    (101) statement -> . read_statement
    (102) expression_statement -> . SEMI
    (103) expression_statement -> . expression SEMI
    (106) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (107) iteration_statement -> . FOR LPAREN SEMI SEMI RPAREN statement
    (108) iteration_statement -> . FOR LPAREN expression SEMI SEMI RPAREN statement
    (109) iteration_statement -> . FOR LPAREN SEMI expression SEMI RPAREN statement
    (110) iteration_statement -> . FOR LPAREN SEMI SEMI expression RPAREN statement
    (111) iteration_statement -> . FOR LPAREN expression SEMI expression SEMI RPAREN statement
    (112) iteration_statement -> . FOR LPAREN expression SEMI SEMI expression RPAREN statement
    (113) iteration_statement -> . FOR LPAREN SEMI expression SEMI expression RPAREN statement
    (114) iteration_statement -> . FOR LPAREN expression SEMI expression SEMI expression RPAREN statement
    (61) compound_statement -> . LBRACE RBRACE
    (62) compound_statement -> . LBRACE declaration_list RBRACE
    (63) compound_statement -> . LBRACE statement_list RBRACE
    (64) compound_statement -> . LBRACE declaration_list statement_list RBRACE
    (115) jump_statement -> . BREAK
    (116) jump_statement -> . RETURN
    (117) jump_statement -> . RETURN expression
    (118) assert_statement -> . ASSERT expression SEMI
    (119) print_statement -> . PRINT LPAREN expression RPAREN SEMI
    (104) selection_statement -> . IF LPAREN expression RPAREN statement
    (105) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (120) read_statement -> . READ LPAREN declarator_list RPAREN SEMI
    (69) expression -> . assignment_expression
    (70) expression -> . expression COMMA assignment_expression
    (67) assignment_expression -> . binary_expression
    (68) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (30) binary_expression -> . cast_expression
    (31) binary_expression -> . binary_expression TIMES binary_expression
    (32) binary_expression -> . binary_expression DIVIDE binary_expression
    (33) binary_expression -> . binary_expression MOD binary_expression
    (34) binary_expression -> . binary_expression MINUS binary_expression
    (35) binary_expression -> . binary_expression PLUS binary_expression
    (36) binary_expression -> . binary_expression LT binary_expression
    (37) binary_expression -> . binary_expression LE binary_expression
    (38) binary_expression -> . binary_expression HT binary_expression
    (39) binary_expression -> . binary_expression HE binary_expression
    (40) binary_expression -> . binary_expression EQUALS binary_expression
    (41) binary_expression -> . binary_expression DIFF binary_expression
    (42) binary_expression -> . binary_expression AND binary_expression
    (43) binary_expression -> . binary_expression OR binary_expression
    (46) unary_expression -> . postfix_expression
    (47) unary_expression -> . PLUSPLUS unary_expression
    (48) unary_expression -> . MINUSMINUS unary_expression
    (49) unary_expression -> . unary_operator cast_expression
    (44) cast_expression -> . unary_expression
    (45) cast_expression -> . LPAREN type_specifier RPAREN cast_expression
    (50) postfix_expression -> . primary_expression
    (51) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (52) postfix_expression -> . postfix_expression LPAREN RPAREN
    (53) postfix_expression -> . postfix_expression LPAREN assignment_expression_list RPAREN
    (54) postfix_expression -> . postfix_expression PLUSPLUS
    (55) postfix_expression -> . postfix_expression MINUSMINUS
    (77) unary_operator -> . ADDRESS
    (78) unary_operator -> . TIMES
    (79) unary_operator -> . PLUS
    (80) unary_operator -> . MINUS
    (81) unary_operator -> . NOT
    (56) primary_expression -> . identifier
    (57) primary_expression -> . int_const
    (58) primary_expression -> . float_const
    (59) primary_expression -> . frase
    (60) primary_expression -> . LPAREN expression RPAREN
    (18) identifier -> . ID
    (20) int_const -> . INT_CONST
    (21) float_const -> . FLOAT_CONST
    (19) frase -> . STRING

    SEMI            shift and go to state 61
    WHILE           shift and go to state 71
    FOR             shift and go to state 72
    LBRACE          shift and go to state 20
    BREAK           shift and go to state 73
    RETURN          shift and go to state 74
    ASSERT          shift and go to state 75
    PRINT           shift and go to state 76
    IF              shift and go to state 77
    READ            shift and go to state 78
    PLUSPLUS        shift and go to state 39
    MINUSMINUS      shift and go to state 40
    LPAREN          shift and go to state 37
    ADDRESS         shift and go to state 43
    TIMES           shift and go to state 33
    PLUS            shift and go to state 35
    MINUS           shift and go to state 34
    NOT             shift and go to state 44
    ID              shift and go to state 14
    INT_CONST       shift and go to state 49
    FLOAT_CONST     shift and go to state 50
    STRING          shift and go to state 51

    expression                     shift and go to state 70
    statement                      shift and go to state 194
    expression_statement           shift and go to state 62
    iteration_statement            shift and go to state 63
    compound_statement             shift and go to state 64
    jump_statement                 shift and go to state 65
    assert_statement               shift and go to state 66
    print_statement                shift and go to state 67
    selection_statement            shift and go to state 68
    read_statement                 shift and go to state 69
    assignment_expression          shift and go to state 79
    binary_expression              shift and go to state 80
    unary_expression               shift and go to state 81
    cast_expression                shift and go to state 32
    postfix_expression             shift and go to state 38
    unary_operator                 shift and go to state 41
    primary_expression             shift and go to state 42
    identifier                     shift and go to state 45
    int_const                      shift and go to state 46
    float_const                    shift and go to state 47
    frase                          shift and go to state 48

state 183

    (120) read_statement -> READ LPAREN declarator_list RPAREN . SEMI

    SEMI            shift and go to state 195


state 184

    (122) declarator_list -> declarator_list declarator .
    (24) declarator -> declarator . RBRACKET LBRACKET
    (25) declarator -> declarator . RBRACKET constant_expression LBRACKET
    (26) declarator -> declarator . LPAREN parameter_list RPAREN
    (27) declarator -> declarator . LPAREN RPAREN
    (28) declarator -> declarator . LPAREN identifier RPAREN

  ! shift/reduce conflict for LPAREN resolved as shift
    RPAREN          reduce using rule 122 (declarator_list -> declarator_list declarator .)
    ID              reduce using rule 122 (declarator_list -> declarator_list declarator .)
    RBRACKET        shift and go to state 18
    LPAREN          shift and go to state 19

  ! LPAREN          [ reduce using rule 122 (declarator_list -> declarator_list declarator .) ]


state 185

    (90) initializer -> LBRACE initializer_list RBRACE .

    SEMI            reduce using rule 90 (initializer -> LBRACE initializer_list RBRACE .)
    RBRACE          reduce using rule 90 (initializer -> LBRACE initializer_list RBRACE .)
    COMMA           reduce using rule 90 (initializer -> LBRACE initializer_list RBRACE .)


state 186

    (91) initializer -> LBRACE initializer_list COMMA . RBRACE
    (93) initializer_list -> initializer_list COMMA . initializer
    (89) initializer -> . assignment_expression
    (90) initializer -> . LBRACE initializer_list RBRACE
    (91) initializer -> . LBRACE initializer_list COMMA RBRACE
    (67) assignment_expression -> . binary_expression
    (68) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (30) binary_expression -> . cast_expression
    (31) binary_expression -> . binary_expression TIMES binary_expression
    (32) binary_expression -> . binary_expression DIVIDE binary_expression
    (33) binary_expression -> . binary_expression MOD binary_expression
    (34) binary_expression -> . binary_expression MINUS binary_expression
    (35) binary_expression -> . binary_expression PLUS binary_expression
    (36) binary_expression -> . binary_expression LT binary_expression
    (37) binary_expression -> . binary_expression LE binary_expression
    (38) binary_expression -> . binary_expression HT binary_expression
    (39) binary_expression -> . binary_expression HE binary_expression
    (40) binary_expression -> . binary_expression EQUALS binary_expression
    (41) binary_expression -> . binary_expression DIFF binary_expression
    (42) binary_expression -> . binary_expression AND binary_expression
    (43) binary_expression -> . binary_expression OR binary_expression
    (46) unary_expression -> . postfix_expression
    (47) unary_expression -> . PLUSPLUS unary_expression
    (48) unary_expression -> . MINUSMINUS unary_expression
    (49) unary_expression -> . unary_operator cast_expression
    (44) cast_expression -> . unary_expression
    (45) cast_expression -> . LPAREN type_specifier RPAREN cast_expression
    (50) postfix_expression -> . primary_expression
    (51) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (52) postfix_expression -> . postfix_expression LPAREN RPAREN
    (53) postfix_expression -> . postfix_expression LPAREN assignment_expression_list RPAREN
    (54) postfix_expression -> . postfix_expression PLUSPLUS
    (55) postfix_expression -> . postfix_expression MINUSMINUS
    (77) unary_operator -> . ADDRESS
    (78) unary_operator -> . TIMES
    (79) unary_operator -> . PLUS
    (80) unary_operator -> . MINUS
    (81) unary_operator -> . NOT
    (56) primary_expression -> . identifier
    (57) primary_expression -> . int_const
    (58) primary_expression -> . float_const
    (59) primary_expression -> . frase
    (60) primary_expression -> . LPAREN expression RPAREN
    (18) identifier -> . ID
    (20) int_const -> . INT_CONST
    (21) float_const -> . FLOAT_CONST
    (19) frase -> . STRING

    RBRACE          shift and go to state 196
    LBRACE          shift and go to state 139
    PLUSPLUS        shift and go to state 39
    MINUSMINUS      shift and go to state 40
    LPAREN          shift and go to state 37
    ADDRESS         shift and go to state 43
    TIMES           shift and go to state 33
    PLUS            shift and go to state 35
    MINUS           shift and go to state 34
    NOT             shift and go to state 44
    ID              shift and go to state 14
    INT_CONST       shift and go to state 49
    FLOAT_CONST     shift and go to state 50
    STRING          shift and go to state 51

    initializer                    shift and go to state 197
    assignment_expression          shift and go to state 138
    binary_expression              shift and go to state 80
    unary_expression               shift and go to state 81
    cast_expression                shift and go to state 32
    postfix_expression             shift and go to state 38
    unary_operator                 shift and go to state 41
    primary_expression             shift and go to state 42
    identifier                     shift and go to state 45
    int_const                      shift and go to state 46
    float_const                    shift and go to state 47
    frase                          shift and go to state 48

state 187

    (106) iteration_statement -> WHILE LPAREN expression RPAREN statement .

    RBRACE          reduce using rule 106 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    SEMI            reduce using rule 106 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 106 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    FOR             reduce using rule 106 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    LBRACE          reduce using rule 106 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    BREAK           reduce using rule 106 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    RETURN          reduce using rule 106 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    ASSERT          reduce using rule 106 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    PRINT           reduce using rule 106 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    IF              reduce using rule 106 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    READ            reduce using rule 106 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    PLUSPLUS        reduce using rule 106 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    MINUSMINUS      reduce using rule 106 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 106 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    ADDRESS         reduce using rule 106 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    TIMES           reduce using rule 106 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    PLUS            reduce using rule 106 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    MINUS           reduce using rule 106 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    NOT             reduce using rule 106 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    ID              reduce using rule 106 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    INT_CONST       reduce using rule 106 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    FLOAT_CONST     reduce using rule 106 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    STRING          reduce using rule 106 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)
    ELSE            reduce using rule 106 (iteration_statement -> WHILE LPAREN expression RPAREN statement .)


state 188

    (107) iteration_statement -> FOR LPAREN SEMI SEMI RPAREN . statement
    (94) statement -> . expression_statement
    (95) statement -> . iteration_statement
    (96) statement -> . compound_statement
    (97) statement -> . jump_statement
    (98) statement -> . assert_statement
    (99) statement -> . print_statement
    (100) statement -> . selection_statement
    (101) statement -> . read_statement
    (102) expression_statement -> . SEMI
    (103) expression_statement -> . expression SEMI
    (106) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (107) iteration_statement -> . FOR LPAREN SEMI SEMI RPAREN statement
    (108) iteration_statement -> . FOR LPAREN expression SEMI SEMI RPAREN statement
    (109) iteration_statement -> . FOR LPAREN SEMI expression SEMI RPAREN statement
    (110) iteration_statement -> . FOR LPAREN SEMI SEMI expression RPAREN statement
    (111) iteration_statement -> . FOR LPAREN expression SEMI expression SEMI RPAREN statement
    (112) iteration_statement -> . FOR LPAREN expression SEMI SEMI expression RPAREN statement
    (113) iteration_statement -> . FOR LPAREN SEMI expression SEMI expression RPAREN statement
    (114) iteration_statement -> . FOR LPAREN expression SEMI expression SEMI expression RPAREN statement
    (61) compound_statement -> . LBRACE RBRACE
    (62) compound_statement -> . LBRACE declaration_list RBRACE
    (63) compound_statement -> . LBRACE statement_list RBRACE
    (64) compound_statement -> . LBRACE declaration_list statement_list RBRACE
    (115) jump_statement -> . BREAK
    (116) jump_statement -> . RETURN
    (117) jump_statement -> . RETURN expression
    (118) assert_statement -> . ASSERT expression SEMI
    (119) print_statement -> . PRINT LPAREN expression RPAREN SEMI
    (104) selection_statement -> . IF LPAREN expression RPAREN statement
    (105) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (120) read_statement -> . READ LPAREN declarator_list RPAREN SEMI
    (69) expression -> . assignment_expression
    (70) expression -> . expression COMMA assignment_expression
    (67) assignment_expression -> . binary_expression
    (68) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (30) binary_expression -> . cast_expression
    (31) binary_expression -> . binary_expression TIMES binary_expression
    (32) binary_expression -> . binary_expression DIVIDE binary_expression
    (33) binary_expression -> . binary_expression MOD binary_expression
    (34) binary_expression -> . binary_expression MINUS binary_expression
    (35) binary_expression -> . binary_expression PLUS binary_expression
    (36) binary_expression -> . binary_expression LT binary_expression
    (37) binary_expression -> . binary_expression LE binary_expression
    (38) binary_expression -> . binary_expression HT binary_expression
    (39) binary_expression -> . binary_expression HE binary_expression
    (40) binary_expression -> . binary_expression EQUALS binary_expression
    (41) binary_expression -> . binary_expression DIFF binary_expression
    (42) binary_expression -> . binary_expression AND binary_expression
    (43) binary_expression -> . binary_expression OR binary_expression
    (46) unary_expression -> . postfix_expression
    (47) unary_expression -> . PLUSPLUS unary_expression
    (48) unary_expression -> . MINUSMINUS unary_expression
    (49) unary_expression -> . unary_operator cast_expression
    (44) cast_expression -> . unary_expression
    (45) cast_expression -> . LPAREN type_specifier RPAREN cast_expression
    (50) postfix_expression -> . primary_expression
    (51) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (52) postfix_expression -> . postfix_expression LPAREN RPAREN
    (53) postfix_expression -> . postfix_expression LPAREN assignment_expression_list RPAREN
    (54) postfix_expression -> . postfix_expression PLUSPLUS
    (55) postfix_expression -> . postfix_expression MINUSMINUS
    (77) unary_operator -> . ADDRESS
    (78) unary_operator -> . TIMES
    (79) unary_operator -> . PLUS
    (80) unary_operator -> . MINUS
    (81) unary_operator -> . NOT
    (56) primary_expression -> . identifier
    (57) primary_expression -> . int_const
    (58) primary_expression -> . float_const
    (59) primary_expression -> . frase
    (60) primary_expression -> . LPAREN expression RPAREN
    (18) identifier -> . ID
    (20) int_const -> . INT_CONST
    (21) float_const -> . FLOAT_CONST
    (19) frase -> . STRING

    SEMI            shift and go to state 61
    WHILE           shift and go to state 71
    FOR             shift and go to state 72
    LBRACE          shift and go to state 20
    BREAK           shift and go to state 73
    RETURN          shift and go to state 74
    ASSERT          shift and go to state 75
    PRINT           shift and go to state 76
    IF              shift and go to state 77
    READ            shift and go to state 78
    PLUSPLUS        shift and go to state 39
    MINUSMINUS      shift and go to state 40
    LPAREN          shift and go to state 37
    ADDRESS         shift and go to state 43
    TIMES           shift and go to state 33
    PLUS            shift and go to state 35
    MINUS           shift and go to state 34
    NOT             shift and go to state 44
    ID              shift and go to state 14
    INT_CONST       shift and go to state 49
    FLOAT_CONST     shift and go to state 50
    STRING          shift and go to state 51

    statement                      shift and go to state 198
    expression_statement           shift and go to state 62
    iteration_statement            shift and go to state 63
    compound_statement             shift and go to state 64
    jump_statement                 shift and go to state 65
    assert_statement               shift and go to state 66
    print_statement                shift and go to state 67
    selection_statement            shift and go to state 68
    read_statement                 shift and go to state 69
    expression                     shift and go to state 70
    assignment_expression          shift and go to state 79
    binary_expression              shift and go to state 80
    unary_expression               shift and go to state 81
    cast_expression                shift and go to state 32
    postfix_expression             shift and go to state 38
    unary_operator                 shift and go to state 41
    primary_expression             shift and go to state 42
    identifier                     shift and go to state 45
    int_const                      shift and go to state 46
    float_const                    shift and go to state 47
    frase                          shift and go to state 48

state 189

    (110) iteration_statement -> FOR LPAREN SEMI SEMI expression . RPAREN statement
    (70) expression -> expression . COMMA assignment_expression

    RPAREN          shift and go to state 199
    COMMA           shift and go to state 121


state 190

    (109) iteration_statement -> FOR LPAREN SEMI expression SEMI . RPAREN statement
    (113) iteration_statement -> FOR LPAREN SEMI expression SEMI . expression RPAREN statement
    (69) expression -> . assignment_expression
    (70) expression -> . expression COMMA assignment_expression
    (67) assignment_expression -> . binary_expression
    (68) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (30) binary_expression -> . cast_expression
    (31) binary_expression -> . binary_expression TIMES binary_expression
    (32) binary_expression -> . binary_expression DIVIDE binary_expression
    (33) binary_expression -> . binary_expression MOD binary_expression
    (34) binary_expression -> . binary_expression MINUS binary_expression
    (35) binary_expression -> . binary_expression PLUS binary_expression
    (36) binary_expression -> . binary_expression LT binary_expression
    (37) binary_expression -> . binary_expression LE binary_expression
    (38) binary_expression -> . binary_expression HT binary_expression
    (39) binary_expression -> . binary_expression HE binary_expression
    (40) binary_expression -> . binary_expression EQUALS binary_expression
    (41) binary_expression -> . binary_expression DIFF binary_expression
    (42) binary_expression -> . binary_expression AND binary_expression
    (43) binary_expression -> . binary_expression OR binary_expression
    (46) unary_expression -> . postfix_expression
    (47) unary_expression -> . PLUSPLUS unary_expression
    (48) unary_expression -> . MINUSMINUS unary_expression
    (49) unary_expression -> . unary_operator cast_expression
    (44) cast_expression -> . unary_expression
    (45) cast_expression -> . LPAREN type_specifier RPAREN cast_expression
    (50) postfix_expression -> . primary_expression
    (51) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (52) postfix_expression -> . postfix_expression LPAREN RPAREN
    (53) postfix_expression -> . postfix_expression LPAREN assignment_expression_list RPAREN
    (54) postfix_expression -> . postfix_expression PLUSPLUS
    (55) postfix_expression -> . postfix_expression MINUSMINUS
    (77) unary_operator -> . ADDRESS
    (78) unary_operator -> . TIMES
    (79) unary_operator -> . PLUS
    (80) unary_operator -> . MINUS
    (81) unary_operator -> . NOT
    (56) primary_expression -> . identifier
    (57) primary_expression -> . int_const
    (58) primary_expression -> . float_const
    (59) primary_expression -> . frase
    (60) primary_expression -> . LPAREN expression RPAREN
    (18) identifier -> . ID
    (20) int_const -> . INT_CONST
    (21) float_const -> . FLOAT_CONST
    (19) frase -> . STRING

    RPAREN          shift and go to state 201
    PLUSPLUS        shift and go to state 39
    MINUSMINUS      shift and go to state 40
    LPAREN          shift and go to state 37
    ADDRESS         shift and go to state 43
    TIMES           shift and go to state 33
    PLUS            shift and go to state 35
    MINUS           shift and go to state 34
    NOT             shift and go to state 44
    ID              shift and go to state 14
    INT_CONST       shift and go to state 49
    FLOAT_CONST     shift and go to state 50
    STRING          shift and go to state 51

    expression                     shift and go to state 200
    assignment_expression          shift and go to state 79
    binary_expression              shift and go to state 80
    unary_expression               shift and go to state 81
    cast_expression                shift and go to state 32
    postfix_expression             shift and go to state 38
    unary_operator                 shift and go to state 41
    primary_expression             shift and go to state 42
    identifier                     shift and go to state 45
    int_const                      shift and go to state 46
    float_const                    shift and go to state 47
    frase                          shift and go to state 48

state 191

    (111) iteration_statement -> FOR LPAREN expression SEMI expression . SEMI RPAREN statement
    (114) iteration_statement -> FOR LPAREN expression SEMI expression . SEMI expression RPAREN statement
    (70) expression -> expression . COMMA assignment_expression

    SEMI            shift and go to state 202
    COMMA           shift and go to state 121


state 192

    (108) iteration_statement -> FOR LPAREN expression SEMI SEMI . RPAREN statement
    (112) iteration_statement -> FOR LPAREN expression SEMI SEMI . expression RPAREN statement
    (69) expression -> . assignment_expression
    (70) expression -> . expression COMMA assignment_expression
    (67) assignment_expression -> . binary_expression
    (68) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (30) binary_expression -> . cast_expression
    (31) binary_expression -> . binary_expression TIMES binary_expression
    (32) binary_expression -> . binary_expression DIVIDE binary_expression
    (33) binary_expression -> . binary_expression MOD binary_expression
    (34) binary_expression -> . binary_expression MINUS binary_expression
    (35) binary_expression -> . binary_expression PLUS binary_expression
    (36) binary_expression -> . binary_expression LT binary_expression
    (37) binary_expression -> . binary_expression LE binary_expression
    (38) binary_expression -> . binary_expression HT binary_expression
    (39) binary_expression -> . binary_expression HE binary_expression
    (40) binary_expression -> . binary_expression EQUALS binary_expression
    (41) binary_expression -> . binary_expression DIFF binary_expression
    (42) binary_expression -> . binary_expression AND binary_expression
    (43) binary_expression -> . binary_expression OR binary_expression
    (46) unary_expression -> . postfix_expression
    (47) unary_expression -> . PLUSPLUS unary_expression
    (48) unary_expression -> . MINUSMINUS unary_expression
    (49) unary_expression -> . unary_operator cast_expression
    (44) cast_expression -> . unary_expression
    (45) cast_expression -> . LPAREN type_specifier RPAREN cast_expression
    (50) postfix_expression -> . primary_expression
    (51) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (52) postfix_expression -> . postfix_expression LPAREN RPAREN
    (53) postfix_expression -> . postfix_expression LPAREN assignment_expression_list RPAREN
    (54) postfix_expression -> . postfix_expression PLUSPLUS
    (55) postfix_expression -> . postfix_expression MINUSMINUS
    (77) unary_operator -> . ADDRESS
    (78) unary_operator -> . TIMES
    (79) unary_operator -> . PLUS
    (80) unary_operator -> . MINUS
    (81) unary_operator -> . NOT
    (56) primary_expression -> . identifier
    (57) primary_expression -> . int_const
    (58) primary_expression -> . float_const
    (59) primary_expression -> . frase
    (60) primary_expression -> . LPAREN expression RPAREN
    (18) identifier -> . ID
    (20) int_const -> . INT_CONST
    (21) float_const -> . FLOAT_CONST
    (19) frase -> . STRING

    RPAREN          shift and go to state 204
    PLUSPLUS        shift and go to state 39
    MINUSMINUS      shift and go to state 40
    LPAREN          shift and go to state 37
    ADDRESS         shift and go to state 43
    TIMES           shift and go to state 33
    PLUS            shift and go to state 35
    MINUS           shift and go to state 34
    NOT             shift and go to state 44
    ID              shift and go to state 14
    INT_CONST       shift and go to state 49
    FLOAT_CONST     shift and go to state 50
    STRING          shift and go to state 51

    expression                     shift and go to state 203
    assignment_expression          shift and go to state 79
    binary_expression              shift and go to state 80
    unary_expression               shift and go to state 81
    cast_expression                shift and go to state 32
    postfix_expression             shift and go to state 38
    unary_operator                 shift and go to state 41
    primary_expression             shift and go to state 42
    identifier                     shift and go to state 45
    int_const                      shift and go to state 46
    float_const                    shift and go to state 47
    frase                          shift and go to state 48

state 193

    (119) print_statement -> PRINT LPAREN expression RPAREN SEMI .

    RBRACE          reduce using rule 119 (print_statement -> PRINT LPAREN expression RPAREN SEMI .)
    SEMI            reduce using rule 119 (print_statement -> PRINT LPAREN expression RPAREN SEMI .)
    WHILE           reduce using rule 119 (print_statement -> PRINT LPAREN expression RPAREN SEMI .)
    FOR             reduce using rule 119 (print_statement -> PRINT LPAREN expression RPAREN SEMI .)
    LBRACE          reduce using rule 119 (print_statement -> PRINT LPAREN expression RPAREN SEMI .)
    BREAK           reduce using rule 119 (print_statement -> PRINT LPAREN expression RPAREN SEMI .)
    RETURN          reduce using rule 119 (print_statement -> PRINT LPAREN expression RPAREN SEMI .)
    ASSERT          reduce using rule 119 (print_statement -> PRINT LPAREN expression RPAREN SEMI .)
    PRINT           reduce using rule 119 (print_statement -> PRINT LPAREN expression RPAREN SEMI .)
    IF              reduce using rule 119 (print_statement -> PRINT LPAREN expression RPAREN SEMI .)
    READ            reduce using rule 119 (print_statement -> PRINT LPAREN expression RPAREN SEMI .)
    PLUSPLUS        reduce using rule 119 (print_statement -> PRINT LPAREN expression RPAREN SEMI .)
    MINUSMINUS      reduce using rule 119 (print_statement -> PRINT LPAREN expression RPAREN SEMI .)
    LPAREN          reduce using rule 119 (print_statement -> PRINT LPAREN expression RPAREN SEMI .)
    ADDRESS         reduce using rule 119 (print_statement -> PRINT LPAREN expression RPAREN SEMI .)
    TIMES           reduce using rule 119 (print_statement -> PRINT LPAREN expression RPAREN SEMI .)
    PLUS            reduce using rule 119 (print_statement -> PRINT LPAREN expression RPAREN SEMI .)
    MINUS           reduce using rule 119 (print_statement -> PRINT LPAREN expression RPAREN SEMI .)
    NOT             reduce using rule 119 (print_statement -> PRINT LPAREN expression RPAREN SEMI .)
    ID              reduce using rule 119 (print_statement -> PRINT LPAREN expression RPAREN SEMI .)
    INT_CONST       reduce using rule 119 (print_statement -> PRINT LPAREN expression RPAREN SEMI .)
    FLOAT_CONST     reduce using rule 119 (print_statement -> PRINT LPAREN expression RPAREN SEMI .)
    STRING          reduce using rule 119 (print_statement -> PRINT LPAREN expression RPAREN SEMI .)
    ELSE            reduce using rule 119 (print_statement -> PRINT LPAREN expression RPAREN SEMI .)


state 194

    (104) selection_statement -> IF LPAREN expression RPAREN statement .
    (105) selection_statement -> IF LPAREN expression RPAREN statement . ELSE statement

  ! shift/reduce conflict for ELSE resolved as shift
    RBRACE          reduce using rule 104 (selection_statement -> IF LPAREN expression RPAREN statement .)
    SEMI            reduce using rule 104 (selection_statement -> IF LPAREN expression RPAREN statement .)
    WHILE           reduce using rule 104 (selection_statement -> IF LPAREN expression RPAREN statement .)
    FOR             reduce using rule 104 (selection_statement -> IF LPAREN expression RPAREN statement .)
    LBRACE          reduce using rule 104 (selection_statement -> IF LPAREN expression RPAREN statement .)
    BREAK           reduce using rule 104 (selection_statement -> IF LPAREN expression RPAREN statement .)
    RETURN          reduce using rule 104 (selection_statement -> IF LPAREN expression RPAREN statement .)
    ASSERT          reduce using rule 104 (selection_statement -> IF LPAREN expression RPAREN statement .)
    PRINT           reduce using rule 104 (selection_statement -> IF LPAREN expression RPAREN statement .)
    IF              reduce using rule 104 (selection_statement -> IF LPAREN expression RPAREN statement .)
    READ            reduce using rule 104 (selection_statement -> IF LPAREN expression RPAREN statement .)
    PLUSPLUS        reduce using rule 104 (selection_statement -> IF LPAREN expression RPAREN statement .)
    MINUSMINUS      reduce using rule 104 (selection_statement -> IF LPAREN expression RPAREN statement .)
    LPAREN          reduce using rule 104 (selection_statement -> IF LPAREN expression RPAREN statement .)
    ADDRESS         reduce using rule 104 (selection_statement -> IF LPAREN expression RPAREN statement .)
    TIMES           reduce using rule 104 (selection_statement -> IF LPAREN expression RPAREN statement .)
    PLUS            reduce using rule 104 (selection_statement -> IF LPAREN expression RPAREN statement .)
    MINUS           reduce using rule 104 (selection_statement -> IF LPAREN expression RPAREN statement .)
    NOT             reduce using rule 104 (selection_statement -> IF LPAREN expression RPAREN statement .)
    ID              reduce using rule 104 (selection_statement -> IF LPAREN expression RPAREN statement .)
    INT_CONST       reduce using rule 104 (selection_statement -> IF LPAREN expression RPAREN statement .)
    FLOAT_CONST     reduce using rule 104 (selection_statement -> IF LPAREN expression RPAREN statement .)
    STRING          reduce using rule 104 (selection_statement -> IF LPAREN expression RPAREN statement .)
    ELSE            shift and go to state 205

  ! ELSE            [ reduce using rule 104 (selection_statement -> IF LPAREN expression RPAREN statement .) ]


state 195

    (120) read_statement -> READ LPAREN declarator_list RPAREN SEMI .

    RBRACE          reduce using rule 120 (read_statement -> READ LPAREN declarator_list RPAREN SEMI .)
    SEMI            reduce using rule 120 (read_statement -> READ LPAREN declarator_list RPAREN SEMI .)
    WHILE           reduce using rule 120 (read_statement -> READ LPAREN declarator_list RPAREN SEMI .)
    FOR             reduce using rule 120 (read_statement -> READ LPAREN declarator_list RPAREN SEMI .)
    LBRACE          reduce using rule 120 (read_statement -> READ LPAREN declarator_list RPAREN SEMI .)
    BREAK           reduce using rule 120 (read_statement -> READ LPAREN declarator_list RPAREN SEMI .)
    RETURN          reduce using rule 120 (read_statement -> READ LPAREN declarator_list RPAREN SEMI .)
    ASSERT          reduce using rule 120 (read_statement -> READ LPAREN declarator_list RPAREN SEMI .)
    PRINT           reduce using rule 120 (read_statement -> READ LPAREN declarator_list RPAREN SEMI .)
    IF              reduce using rule 120 (read_statement -> READ LPAREN declarator_list RPAREN SEMI .)
    READ            reduce using rule 120 (read_statement -> READ LPAREN declarator_list RPAREN SEMI .)
    PLUSPLUS        reduce using rule 120 (read_statement -> READ LPAREN declarator_list RPAREN SEMI .)
    MINUSMINUS      reduce using rule 120 (read_statement -> READ LPAREN declarator_list RPAREN SEMI .)
    LPAREN          reduce using rule 120 (read_statement -> READ LPAREN declarator_list RPAREN SEMI .)
    ADDRESS         reduce using rule 120 (read_statement -> READ LPAREN declarator_list RPAREN SEMI .)
    TIMES           reduce using rule 120 (read_statement -> READ LPAREN declarator_list RPAREN SEMI .)
    PLUS            reduce using rule 120 (read_statement -> READ LPAREN declarator_list RPAREN SEMI .)
    MINUS           reduce using rule 120 (read_statement -> READ LPAREN declarator_list RPAREN SEMI .)
    NOT             reduce using rule 120 (read_statement -> READ LPAREN declarator_list RPAREN SEMI .)
    ID              reduce using rule 120 (read_statement -> READ LPAREN declarator_list RPAREN SEMI .)
    INT_CONST       reduce using rule 120 (read_statement -> READ LPAREN declarator_list RPAREN SEMI .)
    FLOAT_CONST     reduce using rule 120 (read_statement -> READ LPAREN declarator_list RPAREN SEMI .)
    STRING          reduce using rule 120 (read_statement -> READ LPAREN declarator_list RPAREN SEMI .)
    ELSE            reduce using rule 120 (read_statement -> READ LPAREN declarator_list RPAREN SEMI .)


state 196

    (91) initializer -> LBRACE initializer_list COMMA RBRACE .

    SEMI            reduce using rule 91 (initializer -> LBRACE initializer_list COMMA RBRACE .)
    RBRACE          reduce using rule 91 (initializer -> LBRACE initializer_list COMMA RBRACE .)
    COMMA           reduce using rule 91 (initializer -> LBRACE initializer_list COMMA RBRACE .)


state 197

    (93) initializer_list -> initializer_list COMMA initializer .

    RBRACE          reduce using rule 93 (initializer_list -> initializer_list COMMA initializer .)
    COMMA           reduce using rule 93 (initializer_list -> initializer_list COMMA initializer .)


state 198

    (107) iteration_statement -> FOR LPAREN SEMI SEMI RPAREN statement .

    RBRACE          reduce using rule 107 (iteration_statement -> FOR LPAREN SEMI SEMI RPAREN statement .)
    SEMI            reduce using rule 107 (iteration_statement -> FOR LPAREN SEMI SEMI RPAREN statement .)
    WHILE           reduce using rule 107 (iteration_statement -> FOR LPAREN SEMI SEMI RPAREN statement .)
    FOR             reduce using rule 107 (iteration_statement -> FOR LPAREN SEMI SEMI RPAREN statement .)
    LBRACE          reduce using rule 107 (iteration_statement -> FOR LPAREN SEMI SEMI RPAREN statement .)
    BREAK           reduce using rule 107 (iteration_statement -> FOR LPAREN SEMI SEMI RPAREN statement .)
    RETURN          reduce using rule 107 (iteration_statement -> FOR LPAREN SEMI SEMI RPAREN statement .)
    ASSERT          reduce using rule 107 (iteration_statement -> FOR LPAREN SEMI SEMI RPAREN statement .)
    PRINT           reduce using rule 107 (iteration_statement -> FOR LPAREN SEMI SEMI RPAREN statement .)
    IF              reduce using rule 107 (iteration_statement -> FOR LPAREN SEMI SEMI RPAREN statement .)
    READ            reduce using rule 107 (iteration_statement -> FOR LPAREN SEMI SEMI RPAREN statement .)
    PLUSPLUS        reduce using rule 107 (iteration_statement -> FOR LPAREN SEMI SEMI RPAREN statement .)
    MINUSMINUS      reduce using rule 107 (iteration_statement -> FOR LPAREN SEMI SEMI RPAREN statement .)
    LPAREN          reduce using rule 107 (iteration_statement -> FOR LPAREN SEMI SEMI RPAREN statement .)
    ADDRESS         reduce using rule 107 (iteration_statement -> FOR LPAREN SEMI SEMI RPAREN statement .)
    TIMES           reduce using rule 107 (iteration_statement -> FOR LPAREN SEMI SEMI RPAREN statement .)
    PLUS            reduce using rule 107 (iteration_statement -> FOR LPAREN SEMI SEMI RPAREN statement .)
    MINUS           reduce using rule 107 (iteration_statement -> FOR LPAREN SEMI SEMI RPAREN statement .)
    NOT             reduce using rule 107 (iteration_statement -> FOR LPAREN SEMI SEMI RPAREN statement .)
    ID              reduce using rule 107 (iteration_statement -> FOR LPAREN SEMI SEMI RPAREN statement .)
    INT_CONST       reduce using rule 107 (iteration_statement -> FOR LPAREN SEMI SEMI RPAREN statement .)
    FLOAT_CONST     reduce using rule 107 (iteration_statement -> FOR LPAREN SEMI SEMI RPAREN statement .)
    STRING          reduce using rule 107 (iteration_statement -> FOR LPAREN SEMI SEMI RPAREN statement .)
    ELSE            reduce using rule 107 (iteration_statement -> FOR LPAREN SEMI SEMI RPAREN statement .)


state 199

    (110) iteration_statement -> FOR LPAREN SEMI SEMI expression RPAREN . statement
    (94) statement -> . expression_statement
    (95) statement -> . iteration_statement
    (96) statement -> . compound_statement
    (97) statement -> . jump_statement
    (98) statement -> . assert_statement
    (99) statement -> . print_statement
    (100) statement -> . selection_statement
    (101) statement -> . read_statement
    (102) expression_statement -> . SEMI
    (103) expression_statement -> . expression SEMI
    (106) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (107) iteration_statement -> . FOR LPAREN SEMI SEMI RPAREN statement
    (108) iteration_statement -> . FOR LPAREN expression SEMI SEMI RPAREN statement
    (109) iteration_statement -> . FOR LPAREN SEMI expression SEMI RPAREN statement
    (110) iteration_statement -> . FOR LPAREN SEMI SEMI expression RPAREN statement
    (111) iteration_statement -> . FOR LPAREN expression SEMI expression SEMI RPAREN statement
    (112) iteration_statement -> . FOR LPAREN expression SEMI SEMI expression RPAREN statement
    (113) iteration_statement -> . FOR LPAREN SEMI expression SEMI expression RPAREN statement
    (114) iteration_statement -> . FOR LPAREN expression SEMI expression SEMI expression RPAREN statement
    (61) compound_statement -> . LBRACE RBRACE
    (62) compound_statement -> . LBRACE declaration_list RBRACE
    (63) compound_statement -> . LBRACE statement_list RBRACE
    (64) compound_statement -> . LBRACE declaration_list statement_list RBRACE
    (115) jump_statement -> . BREAK
    (116) jump_statement -> . RETURN
    (117) jump_statement -> . RETURN expression
    (118) assert_statement -> . ASSERT expression SEMI
    (119) print_statement -> . PRINT LPAREN expression RPAREN SEMI
    (104) selection_statement -> . IF LPAREN expression RPAREN statement
    (105) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (120) read_statement -> . READ LPAREN declarator_list RPAREN SEMI
    (69) expression -> . assignment_expression
    (70) expression -> . expression COMMA assignment_expression
    (67) assignment_expression -> . binary_expression
    (68) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (30) binary_expression -> . cast_expression
    (31) binary_expression -> . binary_expression TIMES binary_expression
    (32) binary_expression -> . binary_expression DIVIDE binary_expression
    (33) binary_expression -> . binary_expression MOD binary_expression
    (34) binary_expression -> . binary_expression MINUS binary_expression
    (35) binary_expression -> . binary_expression PLUS binary_expression
    (36) binary_expression -> . binary_expression LT binary_expression
    (37) binary_expression -> . binary_expression LE binary_expression
    (38) binary_expression -> . binary_expression HT binary_expression
    (39) binary_expression -> . binary_expression HE binary_expression
    (40) binary_expression -> . binary_expression EQUALS binary_expression
    (41) binary_expression -> . binary_expression DIFF binary_expression
    (42) binary_expression -> . binary_expression AND binary_expression
    (43) binary_expression -> . binary_expression OR binary_expression
    (46) unary_expression -> . postfix_expression
    (47) unary_expression -> . PLUSPLUS unary_expression
    (48) unary_expression -> . MINUSMINUS unary_expression
    (49) unary_expression -> . unary_operator cast_expression
    (44) cast_expression -> . unary_expression
    (45) cast_expression -> . LPAREN type_specifier RPAREN cast_expression
    (50) postfix_expression -> . primary_expression
    (51) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (52) postfix_expression -> . postfix_expression LPAREN RPAREN
    (53) postfix_expression -> . postfix_expression LPAREN assignment_expression_list RPAREN
    (54) postfix_expression -> . postfix_expression PLUSPLUS
    (55) postfix_expression -> . postfix_expression MINUSMINUS
    (77) unary_operator -> . ADDRESS
    (78) unary_operator -> . TIMES
    (79) unary_operator -> . PLUS
    (80) unary_operator -> . MINUS
    (81) unary_operator -> . NOT
    (56) primary_expression -> . identifier
    (57) primary_expression -> . int_const
    (58) primary_expression -> . float_const
    (59) primary_expression -> . frase
    (60) primary_expression -> . LPAREN expression RPAREN
    (18) identifier -> . ID
    (20) int_const -> . INT_CONST
    (21) float_const -> . FLOAT_CONST
    (19) frase -> . STRING

    SEMI            shift and go to state 61
    WHILE           shift and go to state 71
    FOR             shift and go to state 72
    LBRACE          shift and go to state 20
    BREAK           shift and go to state 73
    RETURN          shift and go to state 74
    ASSERT          shift and go to state 75
    PRINT           shift and go to state 76
    IF              shift and go to state 77
    READ            shift and go to state 78
    PLUSPLUS        shift and go to state 39
    MINUSMINUS      shift and go to state 40
    LPAREN          shift and go to state 37
    ADDRESS         shift and go to state 43
    TIMES           shift and go to state 33
    PLUS            shift and go to state 35
    MINUS           shift and go to state 34
    NOT             shift and go to state 44
    ID              shift and go to state 14
    INT_CONST       shift and go to state 49
    FLOAT_CONST     shift and go to state 50
    STRING          shift and go to state 51

    expression                     shift and go to state 70
    statement                      shift and go to state 206
    expression_statement           shift and go to state 62
    iteration_statement            shift and go to state 63
    compound_statement             shift and go to state 64
    jump_statement                 shift and go to state 65
    assert_statement               shift and go to state 66
    print_statement                shift and go to state 67
    selection_statement            shift and go to state 68
    read_statement                 shift and go to state 69
    assignment_expression          shift and go to state 79
    binary_expression              shift and go to state 80
    unary_expression               shift and go to state 81
    cast_expression                shift and go to state 32
    postfix_expression             shift and go to state 38
    unary_operator                 shift and go to state 41
    primary_expression             shift and go to state 42
    identifier                     shift and go to state 45
    int_const                      shift and go to state 46
    float_const                    shift and go to state 47
    frase                          shift and go to state 48

state 200

    (113) iteration_statement -> FOR LPAREN SEMI expression SEMI expression . RPAREN statement
    (70) expression -> expression . COMMA assignment_expression

    RPAREN          shift and go to state 207
    COMMA           shift and go to state 121


state 201

    (109) iteration_statement -> FOR LPAREN SEMI expression SEMI RPAREN . statement
    (94) statement -> . expression_statement
    (95) statement -> . iteration_statement
    (96) statement -> . compound_statement
    (97) statement -> . jump_statement
    (98) statement -> . assert_statement
    (99) statement -> . print_statement
    (100) statement -> . selection_statement
    (101) statement -> . read_statement
    (102) expression_statement -> . SEMI
    (103) expression_statement -> . expression SEMI
    (106) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (107) iteration_statement -> . FOR LPAREN SEMI SEMI RPAREN statement
    (108) iteration_statement -> . FOR LPAREN expression SEMI SEMI RPAREN statement
    (109) iteration_statement -> . FOR LPAREN SEMI expression SEMI RPAREN statement
    (110) iteration_statement -> . FOR LPAREN SEMI SEMI expression RPAREN statement
    (111) iteration_statement -> . FOR LPAREN expression SEMI expression SEMI RPAREN statement
    (112) iteration_statement -> . FOR LPAREN expression SEMI SEMI expression RPAREN statement
    (113) iteration_statement -> . FOR LPAREN SEMI expression SEMI expression RPAREN statement
    (114) iteration_statement -> . FOR LPAREN expression SEMI expression SEMI expression RPAREN statement
    (61) compound_statement -> . LBRACE RBRACE
    (62) compound_statement -> . LBRACE declaration_list RBRACE
    (63) compound_statement -> . LBRACE statement_list RBRACE
    (64) compound_statement -> . LBRACE declaration_list statement_list RBRACE
    (115) jump_statement -> . BREAK
    (116) jump_statement -> . RETURN
    (117) jump_statement -> . RETURN expression
    (118) assert_statement -> . ASSERT expression SEMI
    (119) print_statement -> . PRINT LPAREN expression RPAREN SEMI
    (104) selection_statement -> . IF LPAREN expression RPAREN statement
    (105) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (120) read_statement -> . READ LPAREN declarator_list RPAREN SEMI
    (69) expression -> . assignment_expression
    (70) expression -> . expression COMMA assignment_expression
    (67) assignment_expression -> . binary_expression
    (68) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (30) binary_expression -> . cast_expression
    (31) binary_expression -> . binary_expression TIMES binary_expression
    (32) binary_expression -> . binary_expression DIVIDE binary_expression
    (33) binary_expression -> . binary_expression MOD binary_expression
    (34) binary_expression -> . binary_expression MINUS binary_expression
    (35) binary_expression -> . binary_expression PLUS binary_expression
    (36) binary_expression -> . binary_expression LT binary_expression
    (37) binary_expression -> . binary_expression LE binary_expression
    (38) binary_expression -> . binary_expression HT binary_expression
    (39) binary_expression -> . binary_expression HE binary_expression
    (40) binary_expression -> . binary_expression EQUALS binary_expression
    (41) binary_expression -> . binary_expression DIFF binary_expression
    (42) binary_expression -> . binary_expression AND binary_expression
    (43) binary_expression -> . binary_expression OR binary_expression
    (46) unary_expression -> . postfix_expression
    (47) unary_expression -> . PLUSPLUS unary_expression
    (48) unary_expression -> . MINUSMINUS unary_expression
    (49) unary_expression -> . unary_operator cast_expression
    (44) cast_expression -> . unary_expression
    (45) cast_expression -> . LPAREN type_specifier RPAREN cast_expression
    (50) postfix_expression -> . primary_expression
    (51) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (52) postfix_expression -> . postfix_expression LPAREN RPAREN
    (53) postfix_expression -> . postfix_expression LPAREN assignment_expression_list RPAREN
    (54) postfix_expression -> . postfix_expression PLUSPLUS
    (55) postfix_expression -> . postfix_expression MINUSMINUS
    (77) unary_operator -> . ADDRESS
    (78) unary_operator -> . TIMES
    (79) unary_operator -> . PLUS
    (80) unary_operator -> . MINUS
    (81) unary_operator -> . NOT
    (56) primary_expression -> . identifier
    (57) primary_expression -> . int_const
    (58) primary_expression -> . float_const
    (59) primary_expression -> . frase
    (60) primary_expression -> . LPAREN expression RPAREN
    (18) identifier -> . ID
    (20) int_const -> . INT_CONST
    (21) float_const -> . FLOAT_CONST
    (19) frase -> . STRING

    SEMI            shift and go to state 61
    WHILE           shift and go to state 71
    FOR             shift and go to state 72
    LBRACE          shift and go to state 20
    BREAK           shift and go to state 73
    RETURN          shift and go to state 74
    ASSERT          shift and go to state 75
    PRINT           shift and go to state 76
    IF              shift and go to state 77
    READ            shift and go to state 78
    PLUSPLUS        shift and go to state 39
    MINUSMINUS      shift and go to state 40
    LPAREN          shift and go to state 37
    ADDRESS         shift and go to state 43
    TIMES           shift and go to state 33
    PLUS            shift and go to state 35
    MINUS           shift and go to state 34
    NOT             shift and go to state 44
    ID              shift and go to state 14
    INT_CONST       shift and go to state 49
    FLOAT_CONST     shift and go to state 50
    STRING          shift and go to state 51

    expression                     shift and go to state 70
    statement                      shift and go to state 208
    expression_statement           shift and go to state 62
    iteration_statement            shift and go to state 63
    compound_statement             shift and go to state 64
    jump_statement                 shift and go to state 65
    assert_statement               shift and go to state 66
    print_statement                shift and go to state 67
    selection_statement            shift and go to state 68
    read_statement                 shift and go to state 69
    assignment_expression          shift and go to state 79
    binary_expression              shift and go to state 80
    unary_expression               shift and go to state 81
    cast_expression                shift and go to state 32
    postfix_expression             shift and go to state 38
    unary_operator                 shift and go to state 41
    primary_expression             shift and go to state 42
    identifier                     shift and go to state 45
    int_const                      shift and go to state 46
    float_const                    shift and go to state 47
    frase                          shift and go to state 48

state 202

    (111) iteration_statement -> FOR LPAREN expression SEMI expression SEMI . RPAREN statement
    (114) iteration_statement -> FOR LPAREN expression SEMI expression SEMI . expression RPAREN statement
    (69) expression -> . assignment_expression
    (70) expression -> . expression COMMA assignment_expression
    (67) assignment_expression -> . binary_expression
    (68) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (30) binary_expression -> . cast_expression
    (31) binary_expression -> . binary_expression TIMES binary_expression
    (32) binary_expression -> . binary_expression DIVIDE binary_expression
    (33) binary_expression -> . binary_expression MOD binary_expression
    (34) binary_expression -> . binary_expression MINUS binary_expression
    (35) binary_expression -> . binary_expression PLUS binary_expression
    (36) binary_expression -> . binary_expression LT binary_expression
    (37) binary_expression -> . binary_expression LE binary_expression
    (38) binary_expression -> . binary_expression HT binary_expression
    (39) binary_expression -> . binary_expression HE binary_expression
    (40) binary_expression -> . binary_expression EQUALS binary_expression
    (41) binary_expression -> . binary_expression DIFF binary_expression
    (42) binary_expression -> . binary_expression AND binary_expression
    (43) binary_expression -> . binary_expression OR binary_expression
    (46) unary_expression -> . postfix_expression
    (47) unary_expression -> . PLUSPLUS unary_expression
    (48) unary_expression -> . MINUSMINUS unary_expression
    (49) unary_expression -> . unary_operator cast_expression
    (44) cast_expression -> . unary_expression
    (45) cast_expression -> . LPAREN type_specifier RPAREN cast_expression
    (50) postfix_expression -> . primary_expression
    (51) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (52) postfix_expression -> . postfix_expression LPAREN RPAREN
    (53) postfix_expression -> . postfix_expression LPAREN assignment_expression_list RPAREN
    (54) postfix_expression -> . postfix_expression PLUSPLUS
    (55) postfix_expression -> . postfix_expression MINUSMINUS
    (77) unary_operator -> . ADDRESS
    (78) unary_operator -> . TIMES
    (79) unary_operator -> . PLUS
    (80) unary_operator -> . MINUS
    (81) unary_operator -> . NOT
    (56) primary_expression -> . identifier
    (57) primary_expression -> . int_const
    (58) primary_expression -> . float_const
    (59) primary_expression -> . frase
    (60) primary_expression -> . LPAREN expression RPAREN
    (18) identifier -> . ID
    (20) int_const -> . INT_CONST
    (21) float_const -> . FLOAT_CONST
    (19) frase -> . STRING

    RPAREN          shift and go to state 210
    PLUSPLUS        shift and go to state 39
    MINUSMINUS      shift and go to state 40
    LPAREN          shift and go to state 37
    ADDRESS         shift and go to state 43
    TIMES           shift and go to state 33
    PLUS            shift and go to state 35
    MINUS           shift and go to state 34
    NOT             shift and go to state 44
    ID              shift and go to state 14
    INT_CONST       shift and go to state 49
    FLOAT_CONST     shift and go to state 50
    STRING          shift and go to state 51

    expression                     shift and go to state 209
    assignment_expression          shift and go to state 79
    binary_expression              shift and go to state 80
    unary_expression               shift and go to state 81
    cast_expression                shift and go to state 32
    postfix_expression             shift and go to state 38
    unary_operator                 shift and go to state 41
    primary_expression             shift and go to state 42
    identifier                     shift and go to state 45
    int_const                      shift and go to state 46
    float_const                    shift and go to state 47
    frase                          shift and go to state 48

state 203

    (112) iteration_statement -> FOR LPAREN expression SEMI SEMI expression . RPAREN statement
    (70) expression -> expression . COMMA assignment_expression

    RPAREN          shift and go to state 211
    COMMA           shift and go to state 121


state 204

    (108) iteration_statement -> FOR LPAREN expression SEMI SEMI RPAREN . statement
    (94) statement -> . expression_statement
    (95) statement -> . iteration_statement
    (96) statement -> . compound_statement
    (97) statement -> . jump_statement
    (98) statement -> . assert_statement
    (99) statement -> . print_statement
    (100) statement -> . selection_statement
    (101) statement -> . read_statement
    (102) expression_statement -> . SEMI
    (103) expression_statement -> . expression SEMI
    (106) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (107) iteration_statement -> . FOR LPAREN SEMI SEMI RPAREN statement
    (108) iteration_statement -> . FOR LPAREN expression SEMI SEMI RPAREN statement
    (109) iteration_statement -> . FOR LPAREN SEMI expression SEMI RPAREN statement
    (110) iteration_statement -> . FOR LPAREN SEMI SEMI expression RPAREN statement
    (111) iteration_statement -> . FOR LPAREN expression SEMI expression SEMI RPAREN statement
    (112) iteration_statement -> . FOR LPAREN expression SEMI SEMI expression RPAREN statement
    (113) iteration_statement -> . FOR LPAREN SEMI expression SEMI expression RPAREN statement
    (114) iteration_statement -> . FOR LPAREN expression SEMI expression SEMI expression RPAREN statement
    (61) compound_statement -> . LBRACE RBRACE
    (62) compound_statement -> . LBRACE declaration_list RBRACE
    (63) compound_statement -> . LBRACE statement_list RBRACE
    (64) compound_statement -> . LBRACE declaration_list statement_list RBRACE
    (115) jump_statement -> . BREAK
    (116) jump_statement -> . RETURN
    (117) jump_statement -> . RETURN expression
    (118) assert_statement -> . ASSERT expression SEMI
    (119) print_statement -> . PRINT LPAREN expression RPAREN SEMI
    (104) selection_statement -> . IF LPAREN expression RPAREN statement
    (105) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (120) read_statement -> . READ LPAREN declarator_list RPAREN SEMI
    (69) expression -> . assignment_expression
    (70) expression -> . expression COMMA assignment_expression
    (67) assignment_expression -> . binary_expression
    (68) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (30) binary_expression -> . cast_expression
    (31) binary_expression -> . binary_expression TIMES binary_expression
    (32) binary_expression -> . binary_expression DIVIDE binary_expression
    (33) binary_expression -> . binary_expression MOD binary_expression
    (34) binary_expression -> . binary_expression MINUS binary_expression
    (35) binary_expression -> . binary_expression PLUS binary_expression
    (36) binary_expression -> . binary_expression LT binary_expression
    (37) binary_expression -> . binary_expression LE binary_expression
    (38) binary_expression -> . binary_expression HT binary_expression
    (39) binary_expression -> . binary_expression HE binary_expression
    (40) binary_expression -> . binary_expression EQUALS binary_expression
    (41) binary_expression -> . binary_expression DIFF binary_expression
    (42) binary_expression -> . binary_expression AND binary_expression
    (43) binary_expression -> . binary_expression OR binary_expression
    (46) unary_expression -> . postfix_expression
    (47) unary_expression -> . PLUSPLUS unary_expression
    (48) unary_expression -> . MINUSMINUS unary_expression
    (49) unary_expression -> . unary_operator cast_expression
    (44) cast_expression -> . unary_expression
    (45) cast_expression -> . LPAREN type_specifier RPAREN cast_expression
    (50) postfix_expression -> . primary_expression
    (51) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (52) postfix_expression -> . postfix_expression LPAREN RPAREN
    (53) postfix_expression -> . postfix_expression LPAREN assignment_expression_list RPAREN
    (54) postfix_expression -> . postfix_expression PLUSPLUS
    (55) postfix_expression -> . postfix_expression MINUSMINUS
    (77) unary_operator -> . ADDRESS
    (78) unary_operator -> . TIMES
    (79) unary_operator -> . PLUS
    (80) unary_operator -> . MINUS
    (81) unary_operator -> . NOT
    (56) primary_expression -> . identifier
    (57) primary_expression -> . int_const
    (58) primary_expression -> . float_const
    (59) primary_expression -> . frase
    (60) primary_expression -> . LPAREN expression RPAREN
    (18) identifier -> . ID
    (20) int_const -> . INT_CONST
    (21) float_const -> . FLOAT_CONST
    (19) frase -> . STRING

    SEMI            shift and go to state 61
    WHILE           shift and go to state 71
    FOR             shift and go to state 72
    LBRACE          shift and go to state 20
    BREAK           shift and go to state 73
    RETURN          shift and go to state 74
    ASSERT          shift and go to state 75
    PRINT           shift and go to state 76
    IF              shift and go to state 77
    READ            shift and go to state 78
    PLUSPLUS        shift and go to state 39
    MINUSMINUS      shift and go to state 40
    LPAREN          shift and go to state 37
    ADDRESS         shift and go to state 43
    TIMES           shift and go to state 33
    PLUS            shift and go to state 35
    MINUS           shift and go to state 34
    NOT             shift and go to state 44
    ID              shift and go to state 14
    INT_CONST       shift and go to state 49
    FLOAT_CONST     shift and go to state 50
    STRING          shift and go to state 51

    expression                     shift and go to state 70
    statement                      shift and go to state 212
    expression_statement           shift and go to state 62
    iteration_statement            shift and go to state 63
    compound_statement             shift and go to state 64
    jump_statement                 shift and go to state 65
    assert_statement               shift and go to state 66
    print_statement                shift and go to state 67
    selection_statement            shift and go to state 68
    read_statement                 shift and go to state 69
    assignment_expression          shift and go to state 79
    binary_expression              shift and go to state 80
    unary_expression               shift and go to state 81
    cast_expression                shift and go to state 32
    postfix_expression             shift and go to state 38
    unary_operator                 shift and go to state 41
    primary_expression             shift and go to state 42
    identifier                     shift and go to state 45
    int_const                      shift and go to state 46
    float_const                    shift and go to state 47
    frase                          shift and go to state 48

state 205

    (105) selection_statement -> IF LPAREN expression RPAREN statement ELSE . statement
    (94) statement -> . expression_statement
    (95) statement -> . iteration_statement
    (96) statement -> . compound_statement
    (97) statement -> . jump_statement
    (98) statement -> . assert_statement
    (99) statement -> . print_statement
    (100) statement -> . selection_statement
    (101) statement -> . read_statement
    (102) expression_statement -> . SEMI
    (103) expression_statement -> . expression SEMI
    (106) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (107) iteration_statement -> . FOR LPAREN SEMI SEMI RPAREN statement
    (108) iteration_statement -> . FOR LPAREN expression SEMI SEMI RPAREN statement
    (109) iteration_statement -> . FOR LPAREN SEMI expression SEMI RPAREN statement
    (110) iteration_statement -> . FOR LPAREN SEMI SEMI expression RPAREN statement
    (111) iteration_statement -> . FOR LPAREN expression SEMI expression SEMI RPAREN statement
    (112) iteration_statement -> . FOR LPAREN expression SEMI SEMI expression RPAREN statement
    (113) iteration_statement -> . FOR LPAREN SEMI expression SEMI expression RPAREN statement
    (114) iteration_statement -> . FOR LPAREN expression SEMI expression SEMI expression RPAREN statement
    (61) compound_statement -> . LBRACE RBRACE
    (62) compound_statement -> . LBRACE declaration_list RBRACE
    (63) compound_statement -> . LBRACE statement_list RBRACE
    (64) compound_statement -> . LBRACE declaration_list statement_list RBRACE
    (115) jump_statement -> . BREAK
    (116) jump_statement -> . RETURN
    (117) jump_statement -> . RETURN expression
    (118) assert_statement -> . ASSERT expression SEMI
    (119) print_statement -> . PRINT LPAREN expression RPAREN SEMI
    (104) selection_statement -> . IF LPAREN expression RPAREN statement
    (105) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (120) read_statement -> . READ LPAREN declarator_list RPAREN SEMI
    (69) expression -> . assignment_expression
    (70) expression -> . expression COMMA assignment_expression
    (67) assignment_expression -> . binary_expression
    (68) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (30) binary_expression -> . cast_expression
    (31) binary_expression -> . binary_expression TIMES binary_expression
    (32) binary_expression -> . binary_expression DIVIDE binary_expression
    (33) binary_expression -> . binary_expression MOD binary_expression
    (34) binary_expression -> . binary_expression MINUS binary_expression
    (35) binary_expression -> . binary_expression PLUS binary_expression
    (36) binary_expression -> . binary_expression LT binary_expression
    (37) binary_expression -> . binary_expression LE binary_expression
    (38) binary_expression -> . binary_expression HT binary_expression
    (39) binary_expression -> . binary_expression HE binary_expression
    (40) binary_expression -> . binary_expression EQUALS binary_expression
    (41) binary_expression -> . binary_expression DIFF binary_expression
    (42) binary_expression -> . binary_expression AND binary_expression
    (43) binary_expression -> . binary_expression OR binary_expression
    (46) unary_expression -> . postfix_expression
    (47) unary_expression -> . PLUSPLUS unary_expression
    (48) unary_expression -> . MINUSMINUS unary_expression
    (49) unary_expression -> . unary_operator cast_expression
    (44) cast_expression -> . unary_expression
    (45) cast_expression -> . LPAREN type_specifier RPAREN cast_expression
    (50) postfix_expression -> . primary_expression
    (51) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (52) postfix_expression -> . postfix_expression LPAREN RPAREN
    (53) postfix_expression -> . postfix_expression LPAREN assignment_expression_list RPAREN
    (54) postfix_expression -> . postfix_expression PLUSPLUS
    (55) postfix_expression -> . postfix_expression MINUSMINUS
    (77) unary_operator -> . ADDRESS
    (78) unary_operator -> . TIMES
    (79) unary_operator -> . PLUS
    (80) unary_operator -> . MINUS
    (81) unary_operator -> . NOT
    (56) primary_expression -> . identifier
    (57) primary_expression -> . int_const
    (58) primary_expression -> . float_const
    (59) primary_expression -> . frase
    (60) primary_expression -> . LPAREN expression RPAREN
    (18) identifier -> . ID
    (20) int_const -> . INT_CONST
    (21) float_const -> . FLOAT_CONST
    (19) frase -> . STRING

    SEMI            shift and go to state 61
    WHILE           shift and go to state 71
    FOR             shift and go to state 72
    LBRACE          shift and go to state 20
    BREAK           shift and go to state 73
    RETURN          shift and go to state 74
    ASSERT          shift and go to state 75
    PRINT           shift and go to state 76
    IF              shift and go to state 77
    READ            shift and go to state 78
    PLUSPLUS        shift and go to state 39
    MINUSMINUS      shift and go to state 40
    LPAREN          shift and go to state 37
    ADDRESS         shift and go to state 43
    TIMES           shift and go to state 33
    PLUS            shift and go to state 35
    MINUS           shift and go to state 34
    NOT             shift and go to state 44
    ID              shift and go to state 14
    INT_CONST       shift and go to state 49
    FLOAT_CONST     shift and go to state 50
    STRING          shift and go to state 51

    expression                     shift and go to state 70
    statement                      shift and go to state 213
    expression_statement           shift and go to state 62
    iteration_statement            shift and go to state 63
    compound_statement             shift and go to state 64
    jump_statement                 shift and go to state 65
    assert_statement               shift and go to state 66
    print_statement                shift and go to state 67
    selection_statement            shift and go to state 68
    read_statement                 shift and go to state 69
    assignment_expression          shift and go to state 79
    binary_expression              shift and go to state 80
    unary_expression               shift and go to state 81
    cast_expression                shift and go to state 32
    postfix_expression             shift and go to state 38
    unary_operator                 shift and go to state 41
    primary_expression             shift and go to state 42
    identifier                     shift and go to state 45
    int_const                      shift and go to state 46
    float_const                    shift and go to state 47
    frase                          shift and go to state 48

state 206

    (110) iteration_statement -> FOR LPAREN SEMI SEMI expression RPAREN statement .

    RBRACE          reduce using rule 110 (iteration_statement -> FOR LPAREN SEMI SEMI expression RPAREN statement .)
    SEMI            reduce using rule 110 (iteration_statement -> FOR LPAREN SEMI SEMI expression RPAREN statement .)
    WHILE           reduce using rule 110 (iteration_statement -> FOR LPAREN SEMI SEMI expression RPAREN statement .)
    FOR             reduce using rule 110 (iteration_statement -> FOR LPAREN SEMI SEMI expression RPAREN statement .)
    LBRACE          reduce using rule 110 (iteration_statement -> FOR LPAREN SEMI SEMI expression RPAREN statement .)
    BREAK           reduce using rule 110 (iteration_statement -> FOR LPAREN SEMI SEMI expression RPAREN statement .)
    RETURN          reduce using rule 110 (iteration_statement -> FOR LPAREN SEMI SEMI expression RPAREN statement .)
    ASSERT          reduce using rule 110 (iteration_statement -> FOR LPAREN SEMI SEMI expression RPAREN statement .)
    PRINT           reduce using rule 110 (iteration_statement -> FOR LPAREN SEMI SEMI expression RPAREN statement .)
    IF              reduce using rule 110 (iteration_statement -> FOR LPAREN SEMI SEMI expression RPAREN statement .)
    READ            reduce using rule 110 (iteration_statement -> FOR LPAREN SEMI SEMI expression RPAREN statement .)
    PLUSPLUS        reduce using rule 110 (iteration_statement -> FOR LPAREN SEMI SEMI expression RPAREN statement .)
    MINUSMINUS      reduce using rule 110 (iteration_statement -> FOR LPAREN SEMI SEMI expression RPAREN statement .)
    LPAREN          reduce using rule 110 (iteration_statement -> FOR LPAREN SEMI SEMI expression RPAREN statement .)
    ADDRESS         reduce using rule 110 (iteration_statement -> FOR LPAREN SEMI SEMI expression RPAREN statement .)
    TIMES           reduce using rule 110 (iteration_statement -> FOR LPAREN SEMI SEMI expression RPAREN statement .)
    PLUS            reduce using rule 110 (iteration_statement -> FOR LPAREN SEMI SEMI expression RPAREN statement .)
    MINUS           reduce using rule 110 (iteration_statement -> FOR LPAREN SEMI SEMI expression RPAREN statement .)
    NOT             reduce using rule 110 (iteration_statement -> FOR LPAREN SEMI SEMI expression RPAREN statement .)
    ID              reduce using rule 110 (iteration_statement -> FOR LPAREN SEMI SEMI expression RPAREN statement .)
    INT_CONST       reduce using rule 110 (iteration_statement -> FOR LPAREN SEMI SEMI expression RPAREN statement .)
    FLOAT_CONST     reduce using rule 110 (iteration_statement -> FOR LPAREN SEMI SEMI expression RPAREN statement .)
    STRING          reduce using rule 110 (iteration_statement -> FOR LPAREN SEMI SEMI expression RPAREN statement .)
    ELSE            reduce using rule 110 (iteration_statement -> FOR LPAREN SEMI SEMI expression RPAREN statement .)


state 207

    (113) iteration_statement -> FOR LPAREN SEMI expression SEMI expression RPAREN . statement
    (94) statement -> . expression_statement
    (95) statement -> . iteration_statement
    (96) statement -> . compound_statement
    (97) statement -> . jump_statement
    (98) statement -> . assert_statement
    (99) statement -> . print_statement
    (100) statement -> . selection_statement
    (101) statement -> . read_statement
    (102) expression_statement -> . SEMI
    (103) expression_statement -> . expression SEMI
    (106) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (107) iteration_statement -> . FOR LPAREN SEMI SEMI RPAREN statement
    (108) iteration_statement -> . FOR LPAREN expression SEMI SEMI RPAREN statement
    (109) iteration_statement -> . FOR LPAREN SEMI expression SEMI RPAREN statement
    (110) iteration_statement -> . FOR LPAREN SEMI SEMI expression RPAREN statement
    (111) iteration_statement -> . FOR LPAREN expression SEMI expression SEMI RPAREN statement
    (112) iteration_statement -> . FOR LPAREN expression SEMI SEMI expression RPAREN statement
    (113) iteration_statement -> . FOR LPAREN SEMI expression SEMI expression RPAREN statement
    (114) iteration_statement -> . FOR LPAREN expression SEMI expression SEMI expression RPAREN statement
    (61) compound_statement -> . LBRACE RBRACE
    (62) compound_statement -> . LBRACE declaration_list RBRACE
    (63) compound_statement -> . LBRACE statement_list RBRACE
    (64) compound_statement -> . LBRACE declaration_list statement_list RBRACE
    (115) jump_statement -> . BREAK
    (116) jump_statement -> . RETURN
    (117) jump_statement -> . RETURN expression
    (118) assert_statement -> . ASSERT expression SEMI
    (119) print_statement -> . PRINT LPAREN expression RPAREN SEMI
    (104) selection_statement -> . IF LPAREN expression RPAREN statement
    (105) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (120) read_statement -> . READ LPAREN declarator_list RPAREN SEMI
    (69) expression -> . assignment_expression
    (70) expression -> . expression COMMA assignment_expression
    (67) assignment_expression -> . binary_expression
    (68) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (30) binary_expression -> . cast_expression
    (31) binary_expression -> . binary_expression TIMES binary_expression
    (32) binary_expression -> . binary_expression DIVIDE binary_expression
    (33) binary_expression -> . binary_expression MOD binary_expression
    (34) binary_expression -> . binary_expression MINUS binary_expression
    (35) binary_expression -> . binary_expression PLUS binary_expression
    (36) binary_expression -> . binary_expression LT binary_expression
    (37) binary_expression -> . binary_expression LE binary_expression
    (38) binary_expression -> . binary_expression HT binary_expression
    (39) binary_expression -> . binary_expression HE binary_expression
    (40) binary_expression -> . binary_expression EQUALS binary_expression
    (41) binary_expression -> . binary_expression DIFF binary_expression
    (42) binary_expression -> . binary_expression AND binary_expression
    (43) binary_expression -> . binary_expression OR binary_expression
    (46) unary_expression -> . postfix_expression
    (47) unary_expression -> . PLUSPLUS unary_expression
    (48) unary_expression -> . MINUSMINUS unary_expression
    (49) unary_expression -> . unary_operator cast_expression
    (44) cast_expression -> . unary_expression
    (45) cast_expression -> . LPAREN type_specifier RPAREN cast_expression
    (50) postfix_expression -> . primary_expression
    (51) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (52) postfix_expression -> . postfix_expression LPAREN RPAREN
    (53) postfix_expression -> . postfix_expression LPAREN assignment_expression_list RPAREN
    (54) postfix_expression -> . postfix_expression PLUSPLUS
    (55) postfix_expression -> . postfix_expression MINUSMINUS
    (77) unary_operator -> . ADDRESS
    (78) unary_operator -> . TIMES
    (79) unary_operator -> . PLUS
    (80) unary_operator -> . MINUS
    (81) unary_operator -> . NOT
    (56) primary_expression -> . identifier
    (57) primary_expression -> . int_const
    (58) primary_expression -> . float_const
    (59) primary_expression -> . frase
    (60) primary_expression -> . LPAREN expression RPAREN
    (18) identifier -> . ID
    (20) int_const -> . INT_CONST
    (21) float_const -> . FLOAT_CONST
    (19) frase -> . STRING

    SEMI            shift and go to state 61
    WHILE           shift and go to state 71
    FOR             shift and go to state 72
    LBRACE          shift and go to state 20
    BREAK           shift and go to state 73
    RETURN          shift and go to state 74
    ASSERT          shift and go to state 75
    PRINT           shift and go to state 76
    IF              shift and go to state 77
    READ            shift and go to state 78
    PLUSPLUS        shift and go to state 39
    MINUSMINUS      shift and go to state 40
    LPAREN          shift and go to state 37
    ADDRESS         shift and go to state 43
    TIMES           shift and go to state 33
    PLUS            shift and go to state 35
    MINUS           shift and go to state 34
    NOT             shift and go to state 44
    ID              shift and go to state 14
    INT_CONST       shift and go to state 49
    FLOAT_CONST     shift and go to state 50
    STRING          shift and go to state 51

    expression                     shift and go to state 70
    statement                      shift and go to state 214
    expression_statement           shift and go to state 62
    iteration_statement            shift and go to state 63
    compound_statement             shift and go to state 64
    jump_statement                 shift and go to state 65
    assert_statement               shift and go to state 66
    print_statement                shift and go to state 67
    selection_statement            shift and go to state 68
    read_statement                 shift and go to state 69
    assignment_expression          shift and go to state 79
    binary_expression              shift and go to state 80
    unary_expression               shift and go to state 81
    cast_expression                shift and go to state 32
    postfix_expression             shift and go to state 38
    unary_operator                 shift and go to state 41
    primary_expression             shift and go to state 42
    identifier                     shift and go to state 45
    int_const                      shift and go to state 46
    float_const                    shift and go to state 47
    frase                          shift and go to state 48

state 208

    (109) iteration_statement -> FOR LPAREN SEMI expression SEMI RPAREN statement .

    RBRACE          reduce using rule 109 (iteration_statement -> FOR LPAREN SEMI expression SEMI RPAREN statement .)
    SEMI            reduce using rule 109 (iteration_statement -> FOR LPAREN SEMI expression SEMI RPAREN statement .)
    WHILE           reduce using rule 109 (iteration_statement -> FOR LPAREN SEMI expression SEMI RPAREN statement .)
    FOR             reduce using rule 109 (iteration_statement -> FOR LPAREN SEMI expression SEMI RPAREN statement .)
    LBRACE          reduce using rule 109 (iteration_statement -> FOR LPAREN SEMI expression SEMI RPAREN statement .)
    BREAK           reduce using rule 109 (iteration_statement -> FOR LPAREN SEMI expression SEMI RPAREN statement .)
    RETURN          reduce using rule 109 (iteration_statement -> FOR LPAREN SEMI expression SEMI RPAREN statement .)
    ASSERT          reduce using rule 109 (iteration_statement -> FOR LPAREN SEMI expression SEMI RPAREN statement .)
    PRINT           reduce using rule 109 (iteration_statement -> FOR LPAREN SEMI expression SEMI RPAREN statement .)
    IF              reduce using rule 109 (iteration_statement -> FOR LPAREN SEMI expression SEMI RPAREN statement .)
    READ            reduce using rule 109 (iteration_statement -> FOR LPAREN SEMI expression SEMI RPAREN statement .)
    PLUSPLUS        reduce using rule 109 (iteration_statement -> FOR LPAREN SEMI expression SEMI RPAREN statement .)
    MINUSMINUS      reduce using rule 109 (iteration_statement -> FOR LPAREN SEMI expression SEMI RPAREN statement .)
    LPAREN          reduce using rule 109 (iteration_statement -> FOR LPAREN SEMI expression SEMI RPAREN statement .)
    ADDRESS         reduce using rule 109 (iteration_statement -> FOR LPAREN SEMI expression SEMI RPAREN statement .)
    TIMES           reduce using rule 109 (iteration_statement -> FOR LPAREN SEMI expression SEMI RPAREN statement .)
    PLUS            reduce using rule 109 (iteration_statement -> FOR LPAREN SEMI expression SEMI RPAREN statement .)
    MINUS           reduce using rule 109 (iteration_statement -> FOR LPAREN SEMI expression SEMI RPAREN statement .)
    NOT             reduce using rule 109 (iteration_statement -> FOR LPAREN SEMI expression SEMI RPAREN statement .)
    ID              reduce using rule 109 (iteration_statement -> FOR LPAREN SEMI expression SEMI RPAREN statement .)
    INT_CONST       reduce using rule 109 (iteration_statement -> FOR LPAREN SEMI expression SEMI RPAREN statement .)
    FLOAT_CONST     reduce using rule 109 (iteration_statement -> FOR LPAREN SEMI expression SEMI RPAREN statement .)
    STRING          reduce using rule 109 (iteration_statement -> FOR LPAREN SEMI expression SEMI RPAREN statement .)
    ELSE            reduce using rule 109 (iteration_statement -> FOR LPAREN SEMI expression SEMI RPAREN statement .)


state 209

    (114) iteration_statement -> FOR LPAREN expression SEMI expression SEMI expression . RPAREN statement
    (70) expression -> expression . COMMA assignment_expression

    RPAREN          shift and go to state 215
    COMMA           shift and go to state 121


state 210

    (111) iteration_statement -> FOR LPAREN expression SEMI expression SEMI RPAREN . statement
    (94) statement -> . expression_statement
    (95) statement -> . iteration_statement
    (96) statement -> . compound_statement
    (97) statement -> . jump_statement
    (98) statement -> . assert_statement
    (99) statement -> . print_statement
    (100) statement -> . selection_statement
    (101) statement -> . read_statement
    (102) expression_statement -> . SEMI
    (103) expression_statement -> . expression SEMI
    (106) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (107) iteration_statement -> . FOR LPAREN SEMI SEMI RPAREN statement
    (108) iteration_statement -> . FOR LPAREN expression SEMI SEMI RPAREN statement
    (109) iteration_statement -> . FOR LPAREN SEMI expression SEMI RPAREN statement
    (110) iteration_statement -> . FOR LPAREN SEMI SEMI expression RPAREN statement
    (111) iteration_statement -> . FOR LPAREN expression SEMI expression SEMI RPAREN statement
    (112) iteration_statement -> . FOR LPAREN expression SEMI SEMI expression RPAREN statement
    (113) iteration_statement -> . FOR LPAREN SEMI expression SEMI expression RPAREN statement
    (114) iteration_statement -> . FOR LPAREN expression SEMI expression SEMI expression RPAREN statement
    (61) compound_statement -> . LBRACE RBRACE
    (62) compound_statement -> . LBRACE declaration_list RBRACE
    (63) compound_statement -> . LBRACE statement_list RBRACE
    (64) compound_statement -> . LBRACE declaration_list statement_list RBRACE
    (115) jump_statement -> . BREAK
    (116) jump_statement -> . RETURN
    (117) jump_statement -> . RETURN expression
    (118) assert_statement -> . ASSERT expression SEMI
    (119) print_statement -> . PRINT LPAREN expression RPAREN SEMI
    (104) selection_statement -> . IF LPAREN expression RPAREN statement
    (105) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (120) read_statement -> . READ LPAREN declarator_list RPAREN SEMI
    (69) expression -> . assignment_expression
    (70) expression -> . expression COMMA assignment_expression
    (67) assignment_expression -> . binary_expression
    (68) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (30) binary_expression -> . cast_expression
    (31) binary_expression -> . binary_expression TIMES binary_expression
    (32) binary_expression -> . binary_expression DIVIDE binary_expression
    (33) binary_expression -> . binary_expression MOD binary_expression
    (34) binary_expression -> . binary_expression MINUS binary_expression
    (35) binary_expression -> . binary_expression PLUS binary_expression
    (36) binary_expression -> . binary_expression LT binary_expression
    (37) binary_expression -> . binary_expression LE binary_expression
    (38) binary_expression -> . binary_expression HT binary_expression
    (39) binary_expression -> . binary_expression HE binary_expression
    (40) binary_expression -> . binary_expression EQUALS binary_expression
    (41) binary_expression -> . binary_expression DIFF binary_expression
    (42) binary_expression -> . binary_expression AND binary_expression
    (43) binary_expression -> . binary_expression OR binary_expression
    (46) unary_expression -> . postfix_expression
    (47) unary_expression -> . PLUSPLUS unary_expression
    (48) unary_expression -> . MINUSMINUS unary_expression
    (49) unary_expression -> . unary_operator cast_expression
    (44) cast_expression -> . unary_expression
    (45) cast_expression -> . LPAREN type_specifier RPAREN cast_expression
    (50) postfix_expression -> . primary_expression
    (51) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (52) postfix_expression -> . postfix_expression LPAREN RPAREN
    (53) postfix_expression -> . postfix_expression LPAREN assignment_expression_list RPAREN
    (54) postfix_expression -> . postfix_expression PLUSPLUS
    (55) postfix_expression -> . postfix_expression MINUSMINUS
    (77) unary_operator -> . ADDRESS
    (78) unary_operator -> . TIMES
    (79) unary_operator -> . PLUS
    (80) unary_operator -> . MINUS
    (81) unary_operator -> . NOT
    (56) primary_expression -> . identifier
    (57) primary_expression -> . int_const
    (58) primary_expression -> . float_const
    (59) primary_expression -> . frase
    (60) primary_expression -> . LPAREN expression RPAREN
    (18) identifier -> . ID
    (20) int_const -> . INT_CONST
    (21) float_const -> . FLOAT_CONST
    (19) frase -> . STRING

    SEMI            shift and go to state 61
    WHILE           shift and go to state 71
    FOR             shift and go to state 72
    LBRACE          shift and go to state 20
    BREAK           shift and go to state 73
    RETURN          shift and go to state 74
    ASSERT          shift and go to state 75
    PRINT           shift and go to state 76
    IF              shift and go to state 77
    READ            shift and go to state 78
    PLUSPLUS        shift and go to state 39
    MINUSMINUS      shift and go to state 40
    LPAREN          shift and go to state 37
    ADDRESS         shift and go to state 43
    TIMES           shift and go to state 33
    PLUS            shift and go to state 35
    MINUS           shift and go to state 34
    NOT             shift and go to state 44
    ID              shift and go to state 14
    INT_CONST       shift and go to state 49
    FLOAT_CONST     shift and go to state 50
    STRING          shift and go to state 51

    expression                     shift and go to state 70
    statement                      shift and go to state 216
    expression_statement           shift and go to state 62
    iteration_statement            shift and go to state 63
    compound_statement             shift and go to state 64
    jump_statement                 shift and go to state 65
    assert_statement               shift and go to state 66
    print_statement                shift and go to state 67
    selection_statement            shift and go to state 68
    read_statement                 shift and go to state 69
    assignment_expression          shift and go to state 79
    binary_expression              shift and go to state 80
    unary_expression               shift and go to state 81
    cast_expression                shift and go to state 32
    postfix_expression             shift and go to state 38
    unary_operator                 shift and go to state 41
    primary_expression             shift and go to state 42
    identifier                     shift and go to state 45
    int_const                      shift and go to state 46
    float_const                    shift and go to state 47
    frase                          shift and go to state 48

state 211

    (112) iteration_statement -> FOR LPAREN expression SEMI SEMI expression RPAREN . statement
    (94) statement -> . expression_statement
    (95) statement -> . iteration_statement
    (96) statement -> . compound_statement
    (97) statement -> . jump_statement
    (98) statement -> . assert_statement
    (99) statement -> . print_statement
    (100) statement -> . selection_statement
    (101) statement -> . read_statement
    (102) expression_statement -> . SEMI
    (103) expression_statement -> . expression SEMI
    (106) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (107) iteration_statement -> . FOR LPAREN SEMI SEMI RPAREN statement
    (108) iteration_statement -> . FOR LPAREN expression SEMI SEMI RPAREN statement
    (109) iteration_statement -> . FOR LPAREN SEMI expression SEMI RPAREN statement
    (110) iteration_statement -> . FOR LPAREN SEMI SEMI expression RPAREN statement
    (111) iteration_statement -> . FOR LPAREN expression SEMI expression SEMI RPAREN statement
    (112) iteration_statement -> . FOR LPAREN expression SEMI SEMI expression RPAREN statement
    (113) iteration_statement -> . FOR LPAREN SEMI expression SEMI expression RPAREN statement
    (114) iteration_statement -> . FOR LPAREN expression SEMI expression SEMI expression RPAREN statement
    (61) compound_statement -> . LBRACE RBRACE
    (62) compound_statement -> . LBRACE declaration_list RBRACE
    (63) compound_statement -> . LBRACE statement_list RBRACE
    (64) compound_statement -> . LBRACE declaration_list statement_list RBRACE
    (115) jump_statement -> . BREAK
    (116) jump_statement -> . RETURN
    (117) jump_statement -> . RETURN expression
    (118) assert_statement -> . ASSERT expression SEMI
    (119) print_statement -> . PRINT LPAREN expression RPAREN SEMI
    (104) selection_statement -> . IF LPAREN expression RPAREN statement
    (105) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (120) read_statement -> . READ LPAREN declarator_list RPAREN SEMI
    (69) expression -> . assignment_expression
    (70) expression -> . expression COMMA assignment_expression
    (67) assignment_expression -> . binary_expression
    (68) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (30) binary_expression -> . cast_expression
    (31) binary_expression -> . binary_expression TIMES binary_expression
    (32) binary_expression -> . binary_expression DIVIDE binary_expression
    (33) binary_expression -> . binary_expression MOD binary_expression
    (34) binary_expression -> . binary_expression MINUS binary_expression
    (35) binary_expression -> . binary_expression PLUS binary_expression
    (36) binary_expression -> . binary_expression LT binary_expression
    (37) binary_expression -> . binary_expression LE binary_expression
    (38) binary_expression -> . binary_expression HT binary_expression
    (39) binary_expression -> . binary_expression HE binary_expression
    (40) binary_expression -> . binary_expression EQUALS binary_expression
    (41) binary_expression -> . binary_expression DIFF binary_expression
    (42) binary_expression -> . binary_expression AND binary_expression
    (43) binary_expression -> . binary_expression OR binary_expression
    (46) unary_expression -> . postfix_expression
    (47) unary_expression -> . PLUSPLUS unary_expression
    (48) unary_expression -> . MINUSMINUS unary_expression
    (49) unary_expression -> . unary_operator cast_expression
    (44) cast_expression -> . unary_expression
    (45) cast_expression -> . LPAREN type_specifier RPAREN cast_expression
    (50) postfix_expression -> . primary_expression
    (51) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (52) postfix_expression -> . postfix_expression LPAREN RPAREN
    (53) postfix_expression -> . postfix_expression LPAREN assignment_expression_list RPAREN
    (54) postfix_expression -> . postfix_expression PLUSPLUS
    (55) postfix_expression -> . postfix_expression MINUSMINUS
    (77) unary_operator -> . ADDRESS
    (78) unary_operator -> . TIMES
    (79) unary_operator -> . PLUS
    (80) unary_operator -> . MINUS
    (81) unary_operator -> . NOT
    (56) primary_expression -> . identifier
    (57) primary_expression -> . int_const
    (58) primary_expression -> . float_const
    (59) primary_expression -> . frase
    (60) primary_expression -> . LPAREN expression RPAREN
    (18) identifier -> . ID
    (20) int_const -> . INT_CONST
    (21) float_const -> . FLOAT_CONST
    (19) frase -> . STRING

    SEMI            shift and go to state 61
    WHILE           shift and go to state 71
    FOR             shift and go to state 72
    LBRACE          shift and go to state 20
    BREAK           shift and go to state 73
    RETURN          shift and go to state 74
    ASSERT          shift and go to state 75
    PRINT           shift and go to state 76
    IF              shift and go to state 77
    READ            shift and go to state 78
    PLUSPLUS        shift and go to state 39
    MINUSMINUS      shift and go to state 40
    LPAREN          shift and go to state 37
    ADDRESS         shift and go to state 43
    TIMES           shift and go to state 33
    PLUS            shift and go to state 35
    MINUS           shift and go to state 34
    NOT             shift and go to state 44
    ID              shift and go to state 14
    INT_CONST       shift and go to state 49
    FLOAT_CONST     shift and go to state 50
    STRING          shift and go to state 51

    expression                     shift and go to state 70
    statement                      shift and go to state 217
    expression_statement           shift and go to state 62
    iteration_statement            shift and go to state 63
    compound_statement             shift and go to state 64
    jump_statement                 shift and go to state 65
    assert_statement               shift and go to state 66
    print_statement                shift and go to state 67
    selection_statement            shift and go to state 68
    read_statement                 shift and go to state 69
    assignment_expression          shift and go to state 79
    binary_expression              shift and go to state 80
    unary_expression               shift and go to state 81
    cast_expression                shift and go to state 32
    postfix_expression             shift and go to state 38
    unary_operator                 shift and go to state 41
    primary_expression             shift and go to state 42
    identifier                     shift and go to state 45
    int_const                      shift and go to state 46
    float_const                    shift and go to state 47
    frase                          shift and go to state 48

state 212

    (108) iteration_statement -> FOR LPAREN expression SEMI SEMI RPAREN statement .

    RBRACE          reduce using rule 108 (iteration_statement -> FOR LPAREN expression SEMI SEMI RPAREN statement .)
    SEMI            reduce using rule 108 (iteration_statement -> FOR LPAREN expression SEMI SEMI RPAREN statement .)
    WHILE           reduce using rule 108 (iteration_statement -> FOR LPAREN expression SEMI SEMI RPAREN statement .)
    FOR             reduce using rule 108 (iteration_statement -> FOR LPAREN expression SEMI SEMI RPAREN statement .)
    LBRACE          reduce using rule 108 (iteration_statement -> FOR LPAREN expression SEMI SEMI RPAREN statement .)
    BREAK           reduce using rule 108 (iteration_statement -> FOR LPAREN expression SEMI SEMI RPAREN statement .)
    RETURN          reduce using rule 108 (iteration_statement -> FOR LPAREN expression SEMI SEMI RPAREN statement .)
    ASSERT          reduce using rule 108 (iteration_statement -> FOR LPAREN expression SEMI SEMI RPAREN statement .)
    PRINT           reduce using rule 108 (iteration_statement -> FOR LPAREN expression SEMI SEMI RPAREN statement .)
    IF              reduce using rule 108 (iteration_statement -> FOR LPAREN expression SEMI SEMI RPAREN statement .)
    READ            reduce using rule 108 (iteration_statement -> FOR LPAREN expression SEMI SEMI RPAREN statement .)
    PLUSPLUS        reduce using rule 108 (iteration_statement -> FOR LPAREN expression SEMI SEMI RPAREN statement .)
    MINUSMINUS      reduce using rule 108 (iteration_statement -> FOR LPAREN expression SEMI SEMI RPAREN statement .)
    LPAREN          reduce using rule 108 (iteration_statement -> FOR LPAREN expression SEMI SEMI RPAREN statement .)
    ADDRESS         reduce using rule 108 (iteration_statement -> FOR LPAREN expression SEMI SEMI RPAREN statement .)
    TIMES           reduce using rule 108 (iteration_statement -> FOR LPAREN expression SEMI SEMI RPAREN statement .)
    PLUS            reduce using rule 108 (iteration_statement -> FOR LPAREN expression SEMI SEMI RPAREN statement .)
    MINUS           reduce using rule 108 (iteration_statement -> FOR LPAREN expression SEMI SEMI RPAREN statement .)
    NOT             reduce using rule 108 (iteration_statement -> FOR LPAREN expression SEMI SEMI RPAREN statement .)
    ID              reduce using rule 108 (iteration_statement -> FOR LPAREN expression SEMI SEMI RPAREN statement .)
    INT_CONST       reduce using rule 108 (iteration_statement -> FOR LPAREN expression SEMI SEMI RPAREN statement .)
    FLOAT_CONST     reduce using rule 108 (iteration_statement -> FOR LPAREN expression SEMI SEMI RPAREN statement .)
    STRING          reduce using rule 108 (iteration_statement -> FOR LPAREN expression SEMI SEMI RPAREN statement .)
    ELSE            reduce using rule 108 (iteration_statement -> FOR LPAREN expression SEMI SEMI RPAREN statement .)


state 213

    (105) selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .

    RBRACE          reduce using rule 105 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    SEMI            reduce using rule 105 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    WHILE           reduce using rule 105 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    FOR             reduce using rule 105 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    LBRACE          reduce using rule 105 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    BREAK           reduce using rule 105 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    RETURN          reduce using rule 105 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    ASSERT          reduce using rule 105 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    PRINT           reduce using rule 105 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    IF              reduce using rule 105 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    READ            reduce using rule 105 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    PLUSPLUS        reduce using rule 105 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    MINUSMINUS      reduce using rule 105 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    LPAREN          reduce using rule 105 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    ADDRESS         reduce using rule 105 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    TIMES           reduce using rule 105 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    PLUS            reduce using rule 105 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    MINUS           reduce using rule 105 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    NOT             reduce using rule 105 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    ID              reduce using rule 105 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    INT_CONST       reduce using rule 105 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    FLOAT_CONST     reduce using rule 105 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    STRING          reduce using rule 105 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)
    ELSE            reduce using rule 105 (selection_statement -> IF LPAREN expression RPAREN statement ELSE statement .)


state 214

    (113) iteration_statement -> FOR LPAREN SEMI expression SEMI expression RPAREN statement .

    RBRACE          reduce using rule 113 (iteration_statement -> FOR LPAREN SEMI expression SEMI expression RPAREN statement .)
    SEMI            reduce using rule 113 (iteration_statement -> FOR LPAREN SEMI expression SEMI expression RPAREN statement .)
    WHILE           reduce using rule 113 (iteration_statement -> FOR LPAREN SEMI expression SEMI expression RPAREN statement .)
    FOR             reduce using rule 113 (iteration_statement -> FOR LPAREN SEMI expression SEMI expression RPAREN statement .)
    LBRACE          reduce using rule 113 (iteration_statement -> FOR LPAREN SEMI expression SEMI expression RPAREN statement .)
    BREAK           reduce using rule 113 (iteration_statement -> FOR LPAREN SEMI expression SEMI expression RPAREN statement .)
    RETURN          reduce using rule 113 (iteration_statement -> FOR LPAREN SEMI expression SEMI expression RPAREN statement .)
    ASSERT          reduce using rule 113 (iteration_statement -> FOR LPAREN SEMI expression SEMI expression RPAREN statement .)
    PRINT           reduce using rule 113 (iteration_statement -> FOR LPAREN SEMI expression SEMI expression RPAREN statement .)
    IF              reduce using rule 113 (iteration_statement -> FOR LPAREN SEMI expression SEMI expression RPAREN statement .)
    READ            reduce using rule 113 (iteration_statement -> FOR LPAREN SEMI expression SEMI expression RPAREN statement .)
    PLUSPLUS        reduce using rule 113 (iteration_statement -> FOR LPAREN SEMI expression SEMI expression RPAREN statement .)
    MINUSMINUS      reduce using rule 113 (iteration_statement -> FOR LPAREN SEMI expression SEMI expression RPAREN statement .)
    LPAREN          reduce using rule 113 (iteration_statement -> FOR LPAREN SEMI expression SEMI expression RPAREN statement .)
    ADDRESS         reduce using rule 113 (iteration_statement -> FOR LPAREN SEMI expression SEMI expression RPAREN statement .)
    TIMES           reduce using rule 113 (iteration_statement -> FOR LPAREN SEMI expression SEMI expression RPAREN statement .)
    PLUS            reduce using rule 113 (iteration_statement -> FOR LPAREN SEMI expression SEMI expression RPAREN statement .)
    MINUS           reduce using rule 113 (iteration_statement -> FOR LPAREN SEMI expression SEMI expression RPAREN statement .)
    NOT             reduce using rule 113 (iteration_statement -> FOR LPAREN SEMI expression SEMI expression RPAREN statement .)
    ID              reduce using rule 113 (iteration_statement -> FOR LPAREN SEMI expression SEMI expression RPAREN statement .)
    INT_CONST       reduce using rule 113 (iteration_statement -> FOR LPAREN SEMI expression SEMI expression RPAREN statement .)
    FLOAT_CONST     reduce using rule 113 (iteration_statement -> FOR LPAREN SEMI expression SEMI expression RPAREN statement .)
    STRING          reduce using rule 113 (iteration_statement -> FOR LPAREN SEMI expression SEMI expression RPAREN statement .)
    ELSE            reduce using rule 113 (iteration_statement -> FOR LPAREN SEMI expression SEMI expression RPAREN statement .)


state 215

    (114) iteration_statement -> FOR LPAREN expression SEMI expression SEMI expression RPAREN . statement
    (94) statement -> . expression_statement
    (95) statement -> . iteration_statement
    (96) statement -> . compound_statement
    (97) statement -> . jump_statement
    (98) statement -> . assert_statement
    (99) statement -> . print_statement
    (100) statement -> . selection_statement
    (101) statement -> . read_statement
    (102) expression_statement -> . SEMI
    (103) expression_statement -> . expression SEMI
    (106) iteration_statement -> . WHILE LPAREN expression RPAREN statement
    (107) iteration_statement -> . FOR LPAREN SEMI SEMI RPAREN statement
    (108) iteration_statement -> . FOR LPAREN expression SEMI SEMI RPAREN statement
    (109) iteration_statement -> . FOR LPAREN SEMI expression SEMI RPAREN statement
    (110) iteration_statement -> . FOR LPAREN SEMI SEMI expression RPAREN statement
    (111) iteration_statement -> . FOR LPAREN expression SEMI expression SEMI RPAREN statement
    (112) iteration_statement -> . FOR LPAREN expression SEMI SEMI expression RPAREN statement
    (113) iteration_statement -> . FOR LPAREN SEMI expression SEMI expression RPAREN statement
    (114) iteration_statement -> . FOR LPAREN expression SEMI expression SEMI expression RPAREN statement
    (61) compound_statement -> . LBRACE RBRACE
    (62) compound_statement -> . LBRACE declaration_list RBRACE
    (63) compound_statement -> . LBRACE statement_list RBRACE
    (64) compound_statement -> . LBRACE declaration_list statement_list RBRACE
    (115) jump_statement -> . BREAK
    (116) jump_statement -> . RETURN
    (117) jump_statement -> . RETURN expression
    (118) assert_statement -> . ASSERT expression SEMI
    (119) print_statement -> . PRINT LPAREN expression RPAREN SEMI
    (104) selection_statement -> . IF LPAREN expression RPAREN statement
    (105) selection_statement -> . IF LPAREN expression RPAREN statement ELSE statement
    (120) read_statement -> . READ LPAREN declarator_list RPAREN SEMI
    (69) expression -> . assignment_expression
    (70) expression -> . expression COMMA assignment_expression
    (67) assignment_expression -> . binary_expression
    (68) assignment_expression -> . unary_expression assignment_operator assignment_expression
    (30) binary_expression -> . cast_expression
    (31) binary_expression -> . binary_expression TIMES binary_expression
    (32) binary_expression -> . binary_expression DIVIDE binary_expression
    (33) binary_expression -> . binary_expression MOD binary_expression
    (34) binary_expression -> . binary_expression MINUS binary_expression
    (35) binary_expression -> . binary_expression PLUS binary_expression
    (36) binary_expression -> . binary_expression LT binary_expression
    (37) binary_expression -> . binary_expression LE binary_expression
    (38) binary_expression -> . binary_expression HT binary_expression
    (39) binary_expression -> . binary_expression HE binary_expression
    (40) binary_expression -> . binary_expression EQUALS binary_expression
    (41) binary_expression -> . binary_expression DIFF binary_expression
    (42) binary_expression -> . binary_expression AND binary_expression
    (43) binary_expression -> . binary_expression OR binary_expression
    (46) unary_expression -> . postfix_expression
    (47) unary_expression -> . PLUSPLUS unary_expression
    (48) unary_expression -> . MINUSMINUS unary_expression
    (49) unary_expression -> . unary_operator cast_expression
    (44) cast_expression -> . unary_expression
    (45) cast_expression -> . LPAREN type_specifier RPAREN cast_expression
    (50) postfix_expression -> . primary_expression
    (51) postfix_expression -> . postfix_expression LBRACKET expression RBRACKET
    (52) postfix_expression -> . postfix_expression LPAREN RPAREN
    (53) postfix_expression -> . postfix_expression LPAREN assignment_expression_list RPAREN
    (54) postfix_expression -> . postfix_expression PLUSPLUS
    (55) postfix_expression -> . postfix_expression MINUSMINUS
    (77) unary_operator -> . ADDRESS
    (78) unary_operator -> . TIMES
    (79) unary_operator -> . PLUS
    (80) unary_operator -> . MINUS
    (81) unary_operator -> . NOT
    (56) primary_expression -> . identifier
    (57) primary_expression -> . int_const
    (58) primary_expression -> . float_const
    (59) primary_expression -> . frase
    (60) primary_expression -> . LPAREN expression RPAREN
    (18) identifier -> . ID
    (20) int_const -> . INT_CONST
    (21) float_const -> . FLOAT_CONST
    (19) frase -> . STRING

    SEMI            shift and go to state 61
    WHILE           shift and go to state 71
    FOR             shift and go to state 72
    LBRACE          shift and go to state 20
    BREAK           shift and go to state 73
    RETURN          shift and go to state 74
    ASSERT          shift and go to state 75
    PRINT           shift and go to state 76
    IF              shift and go to state 77
    READ            shift and go to state 78
    PLUSPLUS        shift and go to state 39
    MINUSMINUS      shift and go to state 40
    LPAREN          shift and go to state 37
    ADDRESS         shift and go to state 43
    TIMES           shift and go to state 33
    PLUS            shift and go to state 35
    MINUS           shift and go to state 34
    NOT             shift and go to state 44
    ID              shift and go to state 14
    INT_CONST       shift and go to state 49
    FLOAT_CONST     shift and go to state 50
    STRING          shift and go to state 51

    expression                     shift and go to state 70
    statement                      shift and go to state 218
    expression_statement           shift and go to state 62
    iteration_statement            shift and go to state 63
    compound_statement             shift and go to state 64
    jump_statement                 shift and go to state 65
    assert_statement               shift and go to state 66
    print_statement                shift and go to state 67
    selection_statement            shift and go to state 68
    read_statement                 shift and go to state 69
    assignment_expression          shift and go to state 79
    binary_expression              shift and go to state 80
    unary_expression               shift and go to state 81
    cast_expression                shift and go to state 32
    postfix_expression             shift and go to state 38
    unary_operator                 shift and go to state 41
    primary_expression             shift and go to state 42
    identifier                     shift and go to state 45
    int_const                      shift and go to state 46
    float_const                    shift and go to state 47
    frase                          shift and go to state 48

state 216

    (111) iteration_statement -> FOR LPAREN expression SEMI expression SEMI RPAREN statement .

    RBRACE          reduce using rule 111 (iteration_statement -> FOR LPAREN expression SEMI expression SEMI RPAREN statement .)
    SEMI            reduce using rule 111 (iteration_statement -> FOR LPAREN expression SEMI expression SEMI RPAREN statement .)
    WHILE           reduce using rule 111 (iteration_statement -> FOR LPAREN expression SEMI expression SEMI RPAREN statement .)
    FOR             reduce using rule 111 (iteration_statement -> FOR LPAREN expression SEMI expression SEMI RPAREN statement .)
    LBRACE          reduce using rule 111 (iteration_statement -> FOR LPAREN expression SEMI expression SEMI RPAREN statement .)
    BREAK           reduce using rule 111 (iteration_statement -> FOR LPAREN expression SEMI expression SEMI RPAREN statement .)
    RETURN          reduce using rule 111 (iteration_statement -> FOR LPAREN expression SEMI expression SEMI RPAREN statement .)
    ASSERT          reduce using rule 111 (iteration_statement -> FOR LPAREN expression SEMI expression SEMI RPAREN statement .)
    PRINT           reduce using rule 111 (iteration_statement -> FOR LPAREN expression SEMI expression SEMI RPAREN statement .)
    IF              reduce using rule 111 (iteration_statement -> FOR LPAREN expression SEMI expression SEMI RPAREN statement .)
    READ            reduce using rule 111 (iteration_statement -> FOR LPAREN expression SEMI expression SEMI RPAREN statement .)
    PLUSPLUS        reduce using rule 111 (iteration_statement -> FOR LPAREN expression SEMI expression SEMI RPAREN statement .)
    MINUSMINUS      reduce using rule 111 (iteration_statement -> FOR LPAREN expression SEMI expression SEMI RPAREN statement .)
    LPAREN          reduce using rule 111 (iteration_statement -> FOR LPAREN expression SEMI expression SEMI RPAREN statement .)
    ADDRESS         reduce using rule 111 (iteration_statement -> FOR LPAREN expression SEMI expression SEMI RPAREN statement .)
    TIMES           reduce using rule 111 (iteration_statement -> FOR LPAREN expression SEMI expression SEMI RPAREN statement .)
    PLUS            reduce using rule 111 (iteration_statement -> FOR LPAREN expression SEMI expression SEMI RPAREN statement .)
    MINUS           reduce using rule 111 (iteration_statement -> FOR LPAREN expression SEMI expression SEMI RPAREN statement .)
    NOT             reduce using rule 111 (iteration_statement -> FOR LPAREN expression SEMI expression SEMI RPAREN statement .)
    ID              reduce using rule 111 (iteration_statement -> FOR LPAREN expression SEMI expression SEMI RPAREN statement .)
    INT_CONST       reduce using rule 111 (iteration_statement -> FOR LPAREN expression SEMI expression SEMI RPAREN statement .)
    FLOAT_CONST     reduce using rule 111 (iteration_statement -> FOR LPAREN expression SEMI expression SEMI RPAREN statement .)
    STRING          reduce using rule 111 (iteration_statement -> FOR LPAREN expression SEMI expression SEMI RPAREN statement .)
    ELSE            reduce using rule 111 (iteration_statement -> FOR LPAREN expression SEMI expression SEMI RPAREN statement .)


state 217

    (112) iteration_statement -> FOR LPAREN expression SEMI SEMI expression RPAREN statement .

    RBRACE          reduce using rule 112 (iteration_statement -> FOR LPAREN expression SEMI SEMI expression RPAREN statement .)
    SEMI            reduce using rule 112 (iteration_statement -> FOR LPAREN expression SEMI SEMI expression RPAREN statement .)
    WHILE           reduce using rule 112 (iteration_statement -> FOR LPAREN expression SEMI SEMI expression RPAREN statement .)
    FOR             reduce using rule 112 (iteration_statement -> FOR LPAREN expression SEMI SEMI expression RPAREN statement .)
    LBRACE          reduce using rule 112 (iteration_statement -> FOR LPAREN expression SEMI SEMI expression RPAREN statement .)
    BREAK           reduce using rule 112 (iteration_statement -> FOR LPAREN expression SEMI SEMI expression RPAREN statement .)
    RETURN          reduce using rule 112 (iteration_statement -> FOR LPAREN expression SEMI SEMI expression RPAREN statement .)
    ASSERT          reduce using rule 112 (iteration_statement -> FOR LPAREN expression SEMI SEMI expression RPAREN statement .)
    PRINT           reduce using rule 112 (iteration_statement -> FOR LPAREN expression SEMI SEMI expression RPAREN statement .)
    IF              reduce using rule 112 (iteration_statement -> FOR LPAREN expression SEMI SEMI expression RPAREN statement .)
    READ            reduce using rule 112 (iteration_statement -> FOR LPAREN expression SEMI SEMI expression RPAREN statement .)
    PLUSPLUS        reduce using rule 112 (iteration_statement -> FOR LPAREN expression SEMI SEMI expression RPAREN statement .)
    MINUSMINUS      reduce using rule 112 (iteration_statement -> FOR LPAREN expression SEMI SEMI expression RPAREN statement .)
    LPAREN          reduce using rule 112 (iteration_statement -> FOR LPAREN expression SEMI SEMI expression RPAREN statement .)
    ADDRESS         reduce using rule 112 (iteration_statement -> FOR LPAREN expression SEMI SEMI expression RPAREN statement .)
    TIMES           reduce using rule 112 (iteration_statement -> FOR LPAREN expression SEMI SEMI expression RPAREN statement .)
    PLUS            reduce using rule 112 (iteration_statement -> FOR LPAREN expression SEMI SEMI expression RPAREN statement .)
    MINUS           reduce using rule 112 (iteration_statement -> FOR LPAREN expression SEMI SEMI expression RPAREN statement .)
    NOT             reduce using rule 112 (iteration_statement -> FOR LPAREN expression SEMI SEMI expression RPAREN statement .)
    ID              reduce using rule 112 (iteration_statement -> FOR LPAREN expression SEMI SEMI expression RPAREN statement .)
    INT_CONST       reduce using rule 112 (iteration_statement -> FOR LPAREN expression SEMI SEMI expression RPAREN statement .)
    FLOAT_CONST     reduce using rule 112 (iteration_statement -> FOR LPAREN expression SEMI SEMI expression RPAREN statement .)
    STRING          reduce using rule 112 (iteration_statement -> FOR LPAREN expression SEMI SEMI expression RPAREN statement .)
    ELSE            reduce using rule 112 (iteration_statement -> FOR LPAREN expression SEMI SEMI expression RPAREN statement .)


state 218

    (114) iteration_statement -> FOR LPAREN expression SEMI expression SEMI expression RPAREN statement .

    RBRACE          reduce using rule 114 (iteration_statement -> FOR LPAREN expression SEMI expression SEMI expression RPAREN statement .)
    SEMI            reduce using rule 114 (iteration_statement -> FOR LPAREN expression SEMI expression SEMI expression RPAREN statement .)
    WHILE           reduce using rule 114 (iteration_statement -> FOR LPAREN expression SEMI expression SEMI expression RPAREN statement .)
    FOR             reduce using rule 114 (iteration_statement -> FOR LPAREN expression SEMI expression SEMI expression RPAREN statement .)
    LBRACE          reduce using rule 114 (iteration_statement -> FOR LPAREN expression SEMI expression SEMI expression RPAREN statement .)
    BREAK           reduce using rule 114 (iteration_statement -> FOR LPAREN expression SEMI expression SEMI expression RPAREN statement .)
    RETURN          reduce using rule 114 (iteration_statement -> FOR LPAREN expression SEMI expression SEMI expression RPAREN statement .)
    ASSERT          reduce using rule 114 (iteration_statement -> FOR LPAREN expression SEMI expression SEMI expression RPAREN statement .)
    PRINT           reduce using rule 114 (iteration_statement -> FOR LPAREN expression SEMI expression SEMI expression RPAREN statement .)
    IF              reduce using rule 114 (iteration_statement -> FOR LPAREN expression SEMI expression SEMI expression RPAREN statement .)
    READ            reduce using rule 114 (iteration_statement -> FOR LPAREN expression SEMI expression SEMI expression RPAREN statement .)
    PLUSPLUS        reduce using rule 114 (iteration_statement -> FOR LPAREN expression SEMI expression SEMI expression RPAREN statement .)
    MINUSMINUS      reduce using rule 114 (iteration_statement -> FOR LPAREN expression SEMI expression SEMI expression RPAREN statement .)
    LPAREN          reduce using rule 114 (iteration_statement -> FOR LPAREN expression SEMI expression SEMI expression RPAREN statement .)
    ADDRESS         reduce using rule 114 (iteration_statement -> FOR LPAREN expression SEMI expression SEMI expression RPAREN statement .)
    TIMES           reduce using rule 114 (iteration_statement -> FOR LPAREN expression SEMI expression SEMI expression RPAREN statement .)
    PLUS            reduce using rule 114 (iteration_statement -> FOR LPAREN expression SEMI expression SEMI expression RPAREN statement .)
    MINUS           reduce using rule 114 (iteration_statement -> FOR LPAREN expression SEMI expression SEMI expression RPAREN statement .)
    NOT             reduce using rule 114 (iteration_statement -> FOR LPAREN expression SEMI expression SEMI expression RPAREN statement .)
    ID              reduce using rule 114 (iteration_statement -> FOR LPAREN expression SEMI expression SEMI expression RPAREN statement .)
    INT_CONST       reduce using rule 114 (iteration_statement -> FOR LPAREN expression SEMI expression SEMI expression RPAREN statement .)
    FLOAT_CONST     reduce using rule 114 (iteration_statement -> FOR LPAREN expression SEMI expression SEMI expression RPAREN statement .)
    STRING          reduce using rule 114 (iteration_statement -> FOR LPAREN expression SEMI expression SEMI expression RPAREN statement .)
    ELSE            reduce using rule 114 (iteration_statement -> FOR LPAREN expression SEMI expression SEMI expression RPAREN statement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for LBRACKET in state 38 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 38 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 38 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 38 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 74 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 74 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 74 resolved as shift
WARNING: shift/reduce conflict for ADDRESS in state 74 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 74 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 74 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 74 resolved as shift
WARNING: shift/reduce conflict for NOT in state 74 resolved as shift
WARNING: shift/reduce conflict for ID in state 74 resolved as shift
WARNING: shift/reduce conflict for INT_CONST in state 74 resolved as shift
WARNING: shift/reduce conflict for FLOAT_CONST in state 74 resolved as shift
WARNING: shift/reduce conflict for STRING in state 74 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 80 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 80 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 80 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 140 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 140 resolved as shift
WARNING: shift/reduce conflict for MOD in state 140 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 140 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 140 resolved as shift
WARNING: shift/reduce conflict for LT in state 140 resolved as shift
WARNING: shift/reduce conflict for LE in state 140 resolved as shift
WARNING: shift/reduce conflict for HT in state 140 resolved as shift
WARNING: shift/reduce conflict for HE in state 140 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 140 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 140 resolved as shift
WARNING: shift/reduce conflict for AND in state 140 resolved as shift
WARNING: shift/reduce conflict for OR in state 140 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 141 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 141 resolved as shift
WARNING: shift/reduce conflict for MOD in state 141 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 141 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 141 resolved as shift
WARNING: shift/reduce conflict for LT in state 141 resolved as shift
WARNING: shift/reduce conflict for LE in state 141 resolved as shift
WARNING: shift/reduce conflict for HT in state 141 resolved as shift
WARNING: shift/reduce conflict for HE in state 141 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 141 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 141 resolved as shift
WARNING: shift/reduce conflict for AND in state 141 resolved as shift
WARNING: shift/reduce conflict for OR in state 141 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 142 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 142 resolved as shift
WARNING: shift/reduce conflict for MOD in state 142 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 142 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 142 resolved as shift
WARNING: shift/reduce conflict for LT in state 142 resolved as shift
WARNING: shift/reduce conflict for LE in state 142 resolved as shift
WARNING: shift/reduce conflict for HT in state 142 resolved as shift
WARNING: shift/reduce conflict for HE in state 142 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 142 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 142 resolved as shift
WARNING: shift/reduce conflict for AND in state 142 resolved as shift
WARNING: shift/reduce conflict for OR in state 142 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 143 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 143 resolved as shift
WARNING: shift/reduce conflict for MOD in state 143 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 143 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 143 resolved as shift
WARNING: shift/reduce conflict for LT in state 143 resolved as shift
WARNING: shift/reduce conflict for LE in state 143 resolved as shift
WARNING: shift/reduce conflict for HT in state 143 resolved as shift
WARNING: shift/reduce conflict for HE in state 143 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 143 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 143 resolved as shift
WARNING: shift/reduce conflict for AND in state 143 resolved as shift
WARNING: shift/reduce conflict for OR in state 143 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 144 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 144 resolved as shift
WARNING: shift/reduce conflict for MOD in state 144 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 144 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 144 resolved as shift
WARNING: shift/reduce conflict for LT in state 144 resolved as shift
WARNING: shift/reduce conflict for LE in state 144 resolved as shift
WARNING: shift/reduce conflict for HT in state 144 resolved as shift
WARNING: shift/reduce conflict for HE in state 144 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 144 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 144 resolved as shift
WARNING: shift/reduce conflict for AND in state 144 resolved as shift
WARNING: shift/reduce conflict for OR in state 144 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 145 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 145 resolved as shift
WARNING: shift/reduce conflict for MOD in state 145 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 145 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 145 resolved as shift
WARNING: shift/reduce conflict for LT in state 145 resolved as shift
WARNING: shift/reduce conflict for LE in state 145 resolved as shift
WARNING: shift/reduce conflict for HT in state 145 resolved as shift
WARNING: shift/reduce conflict for HE in state 145 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 145 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 145 resolved as shift
WARNING: shift/reduce conflict for AND in state 145 resolved as shift
WARNING: shift/reduce conflict for OR in state 145 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 146 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 146 resolved as shift
WARNING: shift/reduce conflict for MOD in state 146 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 146 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 146 resolved as shift
WARNING: shift/reduce conflict for LT in state 146 resolved as shift
WARNING: shift/reduce conflict for LE in state 146 resolved as shift
WARNING: shift/reduce conflict for HT in state 146 resolved as shift
WARNING: shift/reduce conflict for HE in state 146 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 146 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 146 resolved as shift
WARNING: shift/reduce conflict for AND in state 146 resolved as shift
WARNING: shift/reduce conflict for OR in state 146 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 147 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 147 resolved as shift
WARNING: shift/reduce conflict for MOD in state 147 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 147 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 147 resolved as shift
WARNING: shift/reduce conflict for LT in state 147 resolved as shift
WARNING: shift/reduce conflict for LE in state 147 resolved as shift
WARNING: shift/reduce conflict for HT in state 147 resolved as shift
WARNING: shift/reduce conflict for HE in state 147 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 147 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 147 resolved as shift
WARNING: shift/reduce conflict for AND in state 147 resolved as shift
WARNING: shift/reduce conflict for OR in state 147 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 148 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 148 resolved as shift
WARNING: shift/reduce conflict for MOD in state 148 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 148 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 148 resolved as shift
WARNING: shift/reduce conflict for LT in state 148 resolved as shift
WARNING: shift/reduce conflict for LE in state 148 resolved as shift
WARNING: shift/reduce conflict for HT in state 148 resolved as shift
WARNING: shift/reduce conflict for HE in state 148 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 148 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 148 resolved as shift
WARNING: shift/reduce conflict for AND in state 148 resolved as shift
WARNING: shift/reduce conflict for OR in state 148 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 149 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 149 resolved as shift
WARNING: shift/reduce conflict for MOD in state 149 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 149 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 149 resolved as shift
WARNING: shift/reduce conflict for LT in state 149 resolved as shift
WARNING: shift/reduce conflict for LE in state 149 resolved as shift
WARNING: shift/reduce conflict for HT in state 149 resolved as shift
WARNING: shift/reduce conflict for HE in state 149 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 149 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 149 resolved as shift
WARNING: shift/reduce conflict for AND in state 149 resolved as shift
WARNING: shift/reduce conflict for OR in state 149 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 150 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 150 resolved as shift
WARNING: shift/reduce conflict for MOD in state 150 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 150 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 150 resolved as shift
WARNING: shift/reduce conflict for LT in state 150 resolved as shift
WARNING: shift/reduce conflict for LE in state 150 resolved as shift
WARNING: shift/reduce conflict for HT in state 150 resolved as shift
WARNING: shift/reduce conflict for HE in state 150 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 150 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 150 resolved as shift
WARNING: shift/reduce conflict for AND in state 150 resolved as shift
WARNING: shift/reduce conflict for OR in state 150 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 151 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 151 resolved as shift
WARNING: shift/reduce conflict for MOD in state 151 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 151 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 151 resolved as shift
WARNING: shift/reduce conflict for LT in state 151 resolved as shift
WARNING: shift/reduce conflict for LE in state 151 resolved as shift
WARNING: shift/reduce conflict for HT in state 151 resolved as shift
WARNING: shift/reduce conflict for HE in state 151 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 151 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 151 resolved as shift
WARNING: shift/reduce conflict for AND in state 151 resolved as shift
WARNING: shift/reduce conflict for OR in state 151 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 152 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 152 resolved as shift
WARNING: shift/reduce conflict for MOD in state 152 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 152 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 152 resolved as shift
WARNING: shift/reduce conflict for LT in state 152 resolved as shift
WARNING: shift/reduce conflict for LE in state 152 resolved as shift
WARNING: shift/reduce conflict for HT in state 152 resolved as shift
WARNING: shift/reduce conflict for HE in state 152 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 152 resolved as shift
WARNING: shift/reduce conflict for DIFF in state 152 resolved as shift
WARNING: shift/reduce conflict for AND in state 152 resolved as shift
WARNING: shift/reduce conflict for OR in state 152 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 169 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 184 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 194 resolved as shift
