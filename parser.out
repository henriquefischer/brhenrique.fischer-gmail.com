Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    WHILE
    FOR
    ELSE
    IF

Grammar

Rule 0     S' -> program
Rule 1     program -> global_declaration_list
Rule 2     global_declaration_list -> global_declaration
Rule 3     global_declaration_list -> global_declaration_list global_declaration
Rule 4     global_declaration -> function_definition
Rule 5     global_declaration -> declaration
Rule 6     function_definition -> declarator compound_statement
Rule 7     function_definition -> declarator declaration_list compound_statement
Rule 8     function_definition -> type_specifier declarator compound_statement
Rule 9     function_definition -> type_specifier declarator declaration_list compound_statement
Rule 10    declaration_list -> declaration
Rule 11    declaration_list -> declaration_list declaration
Rule 12    statement_list -> statement_list
Rule 13    statement_list -> statement_list statement
Rule 14    type_specifier -> VOID
Rule 15    type_specifier -> CHAR
Rule 16    type_specifier -> INT
Rule 17    type_specifier -> FLOAT
Rule 18    identifier -> ID
Rule 19    frase -> STRING
Rule 20    int_const -> INT_CONST
Rule 21    float_const -> FLOAT_CONST
Rule 22    declarator -> identifier
Rule 23    declarator -> LPAREN declarator RPAREN
Rule 24    declarator -> declarator RBRACKET LBRACKET
Rule 25    declarator -> declarator RBRACKET constant_expression LBRACKET
Rule 26    declarator -> declarator LPAREN parameter_list RPAREN
Rule 27    declarator -> declarator LPAREN RPAREN
Rule 28    declarator -> declarator LPAREN identifier RPAREN
Rule 29    constant_expression -> binary_expression
Rule 30    binary_expression -> cast_expression
Rule 31    binary_expression -> binary_expression TIMES binary_expression
Rule 32    binary_expression -> binary_expression DIVIDE binary_expression
Rule 33    binary_expression -> binary_expression MOD binary_expression
Rule 34    binary_expression -> binary_expression MINUS binary_expression
Rule 35    binary_expression -> binary_expression PLUS binary_expression
Rule 36    binary_expression -> binary_expression LT binary_expression
Rule 37    binary_expression -> binary_expression LE binary_expression
Rule 38    binary_expression -> binary_expression HT binary_expression
Rule 39    binary_expression -> binary_expression HE binary_expression
Rule 40    binary_expression -> binary_expression EQUALS binary_expression
Rule 41    binary_expression -> binary_expression DIFF binary_expression
Rule 42    binary_expression -> binary_expression AND binary_expression
Rule 43    binary_expression -> binary_expression OR binary_expression
Rule 44    cast_expression -> unary_expression
Rule 45    cast_expression -> LPAREN type_specifier RPAREN cast_expression
Rule 46    unary_expression -> postfix_expression
Rule 47    unary_expression -> PLUSPLUS unary_expression
Rule 48    unary_expression -> MINUSMINUS unary_expression
Rule 49    unary_expression -> unary_operator cast_expression
Rule 50    postfix_expression -> primary_expression
Rule 51    postfix_expression -> postfix_expression LBRACKET expression RBRACKET
Rule 52    postfix_expression -> postfix_expression LPAREN RPAREN
Rule 53    postfix_expression -> postfix_expression LPAREN assignment_expression_list RPAREN
Rule 54    postfix_expression -> postfix_expression PLUSPLUS
Rule 55    postfix_expression -> postfix_expression MINUSMINUS
Rule 56    primary_expression -> identifier
Rule 57    primary_expression -> int_const
Rule 58    primary_expression -> float_const
Rule 59    primary_expression -> frase
Rule 60    primary_expression -> LPAREN expression RPAREN
Rule 61    compound_statement -> LBRACE RBRACE
Rule 62    compound_statement -> LBRACE declaration_list RBRACE
Rule 63    compound_statement -> LBRACE statement_list RBRACE
Rule 64    compound_statement -> LBRACE declaration_list statement_list RBRACE
Rule 65    assignment_expression_list -> assignment_expression
Rule 66    assignment_expression_list -> assignment_expression_list assignment_expression
Rule 67    assignment_expression -> binary_expression
Rule 68    assignment_expression -> unary_expression assignment_operator assignment_expression
Rule 69    expression -> assignment_expression
Rule 70    expression -> expression COMMA assignment_expression
Rule 71    assignment_operator -> EQ
Rule 72    assignment_operator -> ASSIGN_TIMES
Rule 73    assignment_operator -> ASSIGN_DIVIDE
Rule 74    assignment_operator -> ASSIGN_MOD
Rule 75    assignment_operator -> ASSIGN_PLUS
Rule 76    assignment_operator -> ASSIGN_MINUS
Rule 77    unary_operator -> ADDRESS
Rule 78    unary_operator -> TIMES
Rule 79    unary_operator -> PLUS
Rule 80    unary_operator -> MINUS
Rule 81    unary_operator -> NOT
Rule 82    parameter_list -> parameter_declaration
Rule 83    parameter_list -> parameter_list COMMA parameter_declaration
Rule 84    parameter_declaration -> type_specifier declarator
Rule 85    declaration -> type_specifier SEMI
Rule 86    declaration -> type_specifier init_declarator SEMI
Rule 87    init_declarator -> declarator
Rule 88    init_declarator -> declarator EQ initializer
Rule 89    initializer -> assignment_expression
Rule 90    initializer -> LBRACE initializer_list RBRACE
Rule 91    initializer -> LBRACE initializer_list COMMA RBRACE
Rule 92    initializer_list -> initializer
Rule 93    initializer_list -> initializer_list COMMA initializer
Rule 94    statement -> expression_statement
Rule 95    statement -> jump_statement
Rule 96    statement -> assert_statement
Rule 97    statement -> print_statement
Rule 98    statement -> read_statement
Rule 99    expression_statement -> SEMI
Rule 100   expression_statement -> expression SEMI
Rule 101   jump_statement -> BREAK
Rule 102   jump_statement -> RETURN
Rule 103   jump_statement -> RETURN expression
Rule 104   assert_statement -> ASSERT expression SEMI
Rule 105   print_statement -> PRINT LPAREN expression RPAREN SEMI
Rule 106   read_statement -> READ LPAREN declarator_list RPAREN
Rule 107   declarator_list -> declarator_list
Rule 108   declarator_list -> declarator_list declarator

Terminals, with rules where they appear

ADDRESS              : 77
AND                  : 42
ASSERT               : 104
ASSIGN_DIVIDE        : 73
ASSIGN_MINUS         : 76
ASSIGN_MOD           : 74
ASSIGN_PLUS          : 75
ASSIGN_TIMES         : 72
BREAK                : 101
CHAR                 : 15
COMMA                : 70 83 91 93
DIFF                 : 41
DIVIDE               : 32
ELSE                 : 
EQ                   : 71 88
EQUALS               : 40
FLOAT                : 17
FLOAT_CONST          : 21
FOR                  : 
HE                   : 39
HT                   : 38
ID                   : 18
IF                   : 
INT                  : 16
INT_CONST            : 20
LBRACE               : 61 62 63 64 90 91
LBRACKET             : 24 25 51
LE                   : 37
LPAREN               : 23 26 27 28 45 52 53 60 105 106
LT                   : 36
MINUS                : 34 80
MINUSMINUS           : 48 55
MOD                  : 33
NOT                  : 81
OR                   : 43
PLUS                 : 35 79
PLUSPLUS             : 47 54
PRINT                : 105
RBRACE               : 61 62 63 64 90 91
RBRACKET             : 24 25 51
READ                 : 106
RETURN               : 102 103
RPAREN               : 23 26 27 28 45 52 53 60 105 106
SEMI                 : 85 86 99 100 104 105
STRING               : 19
TIMES                : 31 78
VOID                 : 14
WHILE                : 
error                : 

Nonterminals, with rules where they appear

assert_statement     : 96
assignment_expression : 65 66 68 69 70 89
assignment_expression_list : 53 66
assignment_operator  : 68
binary_expression    : 29 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 41 42 42 43 43 67
cast_expression      : 30 45 49
compound_statement   : 6 7 8 9
constant_expression  : 25
declaration          : 5 10 11
declaration_list     : 7 9 11 62 64
declarator           : 6 7 8 9 23 24 25 26 27 28 84 87 88 108
declarator_list      : 106 107 108
expression           : 51 60 70 100 103 104 105
expression_statement : 94
float_const          : 58
frase                : 59
function_definition  : 4
global_declaration   : 2 3
global_declaration_list : 1 3
identifier           : 22 28 56
init_declarator      : 86
initializer          : 88 92 93
initializer_list     : 90 91 93
int_const            : 57
jump_statement       : 95
parameter_declaration : 82 83
parameter_list       : 26 83
postfix_expression   : 46 51 52 53 54 55
primary_expression   : 50
print_statement      : 97
program              : 0
read_statement       : 98
statement            : 13
statement_list       : 12 13 63 64
type_specifier       : 8 9 45 84 85 86
unary_expression     : 44 47 48 68
unary_operator       : 49

